<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>c10::optional&lt;c10::Device&gt;::initialized (1 samples, 0.06%)</title><rect x="480.8" y="341" width="0.7" height="15.0" fill="rgb(229,11,31)" rx="2" ry="2" />
<text  x="483.79" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="308.8" y="245" width="0.7" height="15.0" fill="rgb(238,46,43)" rx="2" ry="2" />
<text  x="311.77" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;*&gt; (1 samples, 0.06%)</title><rect x="772.0" y="245" width="0.8" height="15.0" fill="rgb(251,49,5)" rx="2" ry="2" />
<text  x="775.02" y="255.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseBaseType (1 samples, 0.06%)</title><rect x="385.7" y="357" width="0.8" height="15.0" fill="rgb(213,61,39)" rx="2" ry="2" />
<text  x="388.73" y="367.5" ></text>
</g>
<g >
<title>c10::TensorImpl::unique_version (3 samples, 0.19%)</title><rect x="531.3" y="357" width="2.3" height="15.0" fill="rgb(205,122,40)" rx="2" ry="2" />
<text  x="534.34" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="385.0" y="405" width="0.7" height="15.0" fill="rgb(232,155,21)" rx="2" ry="2" />
<text  x="387.97" y="415.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::registerOp_ (1 samples, 0.06%)</title><rect x="298.2" y="373" width="0.8" height="15.0" fill="rgb(251,78,10)" rx="2" ry="2" />
<text  x="301.21" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.19%)</title><rect x="228.8" y="229" width="2.3" height="15.0" fill="rgb(207,221,31)" rx="2" ry="2" />
<text  x="231.80" y="239.5" ></text>
</g>
<g >
<title>Xbyak::Reg::Reg (1 samples, 0.06%)</title><rect x="286.9" y="357" width="0.7" height="15.0" fill="rgb(244,185,48)" rx="2" ry="2" />
<text  x="289.89" y="367.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.06%)</title><rect x="176.0" y="357" width="0.7" height="15.0" fill="rgb(217,68,19)" rx="2" ry="2" />
<text  x="178.98" y="367.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (4 samples, 0.26%)</title><rect x="517.8" y="373" width="3.0" height="15.0" fill="rgb(237,109,35)" rx="2" ry="2" />
<text  x="520.76" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="198.6" y="293" width="0.8" height="15.0" fill="rgb(217,53,10)" rx="2" ry="2" />
<text  x="201.62" y="303.5" ></text>
</g>
<g >
<title>std::move&lt;c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;&amp;&gt; (1 samples, 0.06%)</title><rect x="878.4" y="341" width="0.8" height="15.0" fill="rgb(213,217,41)" rx="2" ry="2" />
<text  x="881.40" y="351.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="216.0" y="261" width="0.7" height="15.0" fill="rgb(210,202,15)" rx="2" ry="2" />
<text  x="218.97" y="271.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (1 samples, 0.06%)</title><rect x="31.1" y="437" width="0.8" height="15.0" fill="rgb(246,47,6)" rx="2" ry="2" />
<text  x="34.13" y="447.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.06%)</title><rect x="1189.2" y="325" width="0.8" height="15.0" fill="rgb(226,203,28)" rx="2" ry="2" />
<text  x="1192.25" y="335.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::initialized (1 samples, 0.06%)</title><rect x="799.2" y="325" width="0.7" height="15.0" fill="rgb(213,40,5)" rx="2" ry="2" />
<text  x="802.18" y="335.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.06%)</title><rect x="402.3" y="437" width="0.8" height="15.0" fill="rgb(227,175,44)" rx="2" ry="2" />
<text  x="405.33" y="447.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="279.3" y="357" width="0.8" height="15.0" fill="rgb(253,177,54)" rx="2" ry="2" />
<text  x="282.35" y="367.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (3 samples, 0.19%)</title><rect x="715.4" y="293" width="2.3" height="15.0" fill="rgb(242,19,7)" rx="2" ry="2" />
<text  x="718.43" y="303.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.06%)</title><rect x="326.1" y="165" width="0.8" height="15.0" fill="rgb(242,51,1)" rx="2" ry="2" />
<text  x="329.13" y="175.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.06%)</title><rect x="273.3" y="293" width="0.8" height="15.0" fill="rgb(236,14,13)" rx="2" ry="2" />
<text  x="276.31" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::~vector (1 samples, 0.06%)</title><rect x="87.7" y="437" width="0.8" height="15.0" fill="rgb(242,71,33)" rx="2" ry="2" />
<text  x="90.71" y="447.5" ></text>
</g>
<g >
<title>at::native::empty_cpu (105 samples, 6.71%)</title><rect x="1064.0" y="245" width="79.2" height="15.0" fill="rgb(212,35,21)" rx="2" ry="2" />
<text  x="1067.00" y="255.5" >at::nativ..</text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.06%)</title><rect x="196.4" y="261" width="0.7" height="15.0" fill="rgb(242,141,26)" rx="2" ry="2" />
<text  x="199.36" y="271.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (10 samples, 0.64%)</title><rect x="499.7" y="373" width="7.5" height="15.0" fill="rgb(240,51,54)" rx="2" ry="2" />
<text  x="502.65" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (29 samples, 1.85%)</title><rect x="665.6" y="181" width="21.9" height="15.0" fill="rgb(232,221,43)" rx="2" ry="2" />
<text  x="668.64" y="191.5" >[..</text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (1 samples, 0.06%)</title><rect x="500.4" y="325" width="0.8" height="15.0" fill="rgb(211,211,48)" rx="2" ry="2" />
<text  x="503.41" y="335.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (5 samples, 0.32%)</title><rect x="569.1" y="325" width="3.7" height="15.0" fill="rgb(234,161,5)" rx="2" ry="2" />
<text  x="572.07" y="335.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_requires_grad (2 samples, 0.13%)</title><rect x="1162.1" y="357" width="1.5" height="15.0" fill="rgb(249,37,29)" rx="2" ry="2" />
<text  x="1165.08" y="367.5" ></text>
</g>
<g >
<title>__sbrk (1 samples, 0.06%)</title><rect x="231.8" y="197" width="0.8" height="15.0" fill="rgb(206,49,31)" rx="2" ry="2" />
<text  x="234.82" y="207.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.06%)</title><rect x="775.8" y="261" width="0.7" height="15.0" fill="rgb(218,150,42)" rx="2" ry="2" />
<text  x="778.79" y="271.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_requires_grad (1 samples, 0.06%)</title><rect x="1157.6" y="341" width="0.7" height="15.0" fill="rgb(248,142,5)" rx="2" ry="2" />
<text  x="1160.56" y="351.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_tmpxft_0000e456_00000000_6_integral_image_op.compute_70.cudafe1.cpp (1 samples, 0.06%)</title><rect x="295.9" y="405" width="0.8" height="15.0" fill="rgb(221,45,17)" rx="2" ry="2" />
<text  x="298.95" y="415.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.06%)</title><rect x="188.1" y="277" width="0.7" height="15.0" fill="rgb(206,60,38)" rx="2" ry="2" />
<text  x="191.06" y="287.5" ></text>
</g>
<g >
<title>c10::SingleElementType&lt; (1 samples, 0.06%)</title><rect x="219.7" y="277" width="0.8" height="15.0" fill="rgb(234,167,25)" rx="2" ry="2" />
<text  x="222.74" y="287.5" ></text>
</g>
<g >
<title>rmqueue (2 samples, 0.13%)</title><rect x="153.4" y="165" width="1.5" height="15.0" fill="rgb(216,6,13)" rx="2" ry="2" />
<text  x="156.35" y="175.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.06%)</title><rect x="248.4" y="277" width="0.8" height="15.0" fill="rgb(252,62,15)" rx="2" ry="2" />
<text  x="251.41" y="287.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (9 samples, 0.58%)</title><rect x="533.6" y="357" width="6.8" height="15.0" fill="rgb(239,129,40)" rx="2" ry="2" />
<text  x="536.61" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.06%)</title><rect x="266.5" y="325" width="0.8" height="15.0" fill="rgb(236,64,30)" rx="2" ry="2" />
<text  x="269.52" y="335.5" ></text>
</g>
<g >
<title>do_group_exit (13 samples, 0.83%)</title><rect x="1170.4" y="405" width="9.8" height="15.0" fill="rgb(245,106,40)" rx="2" ry="2" />
<text  x="1173.38" y="415.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.06%)</title><rect x="385.7" y="405" width="0.8" height="15.0" fill="rgb(221,201,17)" rx="2" ry="2" />
<text  x="388.73" y="415.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::OperatorEntry (1 samples, 0.06%)</title><rect x="50.7" y="437" width="0.8" height="15.0" fill="rgb(246,157,51)" rx="2" ry="2" />
<text  x="53.74" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.06%)</title><rect x="247.7" y="277" width="0.7" height="15.0" fill="rgb(216,192,22)" rx="2" ry="2" />
<text  x="250.66" y="287.5" ></text>
</g>
<g >
<title>torch::getCustomClass (1 samples, 0.06%)</title><rect x="289.2" y="261" width="0.7" height="15.0" fill="rgb(213,203,4)" rx="2" ry="2" />
<text  x="292.16" y="271.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.13%)</title><rect x="203.9" y="357" width="1.5" height="15.0" fill="rgb(248,110,53)" rx="2" ry="2" />
<text  x="206.90" y="367.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.06%)</title><rect x="308.8" y="149" width="0.7" height="15.0" fill="rgb(213,124,37)" rx="2" ry="2" />
<text  x="311.77" y="159.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (1 samples, 0.06%)</title><rect x="157.9" y="405" width="0.7" height="15.0" fill="rgb(243,11,35)" rx="2" ry="2" />
<text  x="160.88" y="415.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="274.8" y="261" width="0.8" height="15.0" fill="rgb(241,79,49)" rx="2" ry="2" />
<text  x="277.82" y="271.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.06%)</title><rect x="1098.7" y="213" width="0.8" height="15.0" fill="rgb(209,44,41)" rx="2" ry="2" />
<text  x="1101.71" y="223.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="359.3" y="277" width="0.8" height="15.0" fill="rgb(224,227,50)" rx="2" ry="2" />
<text  x="362.32" y="287.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="280.9" y="261" width="0.7" height="15.0" fill="rgb(242,44,22)" rx="2" ry="2" />
<text  x="283.86" y="271.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="158.6" y="373" width="0.8" height="15.0" fill="rgb(229,158,44)" rx="2" ry="2" />
<text  x="161.63" y="383.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 6.07%)</title><rect x="335.2" y="453" width="71.7" height="15.0" fill="rgb(213,229,6)" rx="2" ry="2" />
<text  x="338.18" y="463.5" >[unknown]</text>
</g>
<g >
<title>[ld-2.31.so] (14 samples, 0.90%)</title><rect x="132.2" y="357" width="10.6" height="15.0" fill="rgb(252,160,15)" rx="2" ry="2" />
<text  x="135.23" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.06%)</title><rect x="437.0" y="405" width="0.8" height="15.0" fill="rgb(225,194,52)" rx="2" ry="2" />
<text  x="440.03" y="415.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TraceType_0.cpp (5 samples, 0.32%)</title><rect x="193.3" y="405" width="3.8" height="15.0" fill="rgb(230,145,45)" rx="2" ry="2" />
<text  x="196.34" y="415.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (1 samples, 0.06%)</title><rect x="208.4" y="309" width="0.8" height="15.0" fill="rgb(215,212,34)" rx="2" ry="2" />
<text  x="211.43" y="319.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;caffe2::TypeMeta&gt;::constexpr_optional_base (2 samples, 0.13%)</title><rect x="838.4" y="357" width="1.5" height="15.0" fill="rgb(231,71,49)" rx="2" ry="2" />
<text  x="841.41" y="367.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (189 samples, 12.08%)</title><rect x="580.4" y="309" width="142.6" height="15.0" fill="rgb(252,201,1)" rx="2" ry="2" />
<text  x="583.38" y="319.5" >c10::impl::detail:..</text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;c10::intrusive_ptr&lt;at::native::xnnpack::Conv2dOpContext, c10::detail::intrusive_target_default_null_type&lt;at::native::xnnpack::Conv2dOpContext&gt; &gt;  (1 samples, 0.06%)</title><rect x="189.6" y="357" width="0.7" height="15.0" fill="rgb(232,221,24)" rx="2" ry="2" />
<text  x="192.57" y="367.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.06%)</title><rect x="146.6" y="181" width="0.7" height="15.0" fill="rgb(217,61,28)" rx="2" ry="2" />
<text  x="149.56" y="191.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="142.0" y="309" width="0.8" height="15.0" fill="rgb(236,201,28)" rx="2" ry="2" />
<text  x="145.03" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.06%)</title><rect x="174.5" y="293" width="0.7" height="15.0" fill="rgb(222,176,48)" rx="2" ry="2" />
<text  x="177.48" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="253.7" y="277" width="0.8" height="15.0" fill="rgb(254,138,27)" rx="2" ry="2" />
<text  x="256.70" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::vector (10 samples, 0.64%)</title><rect x="923.7" y="325" width="7.5" height="15.0" fill="rgb(253,126,24)" rx="2" ry="2" />
<text  x="926.67" y="335.5" ></text>
</g>
<g >
<title>std::move&lt;at::Tensor&amp;&gt; (1 samples, 0.06%)</title><rect x="849.7" y="389" width="0.8" height="15.0" fill="rgb(253,46,2)" rx="2" ry="2" />
<text  x="852.73" y="399.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="271.8" y="293" width="0.8" height="15.0" fill="rgb(235,137,54)" rx="2" ry="2" />
<text  x="274.80" y="303.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="326.1" y="197" width="0.8" height="15.0" fill="rgb(253,24,14)" rx="2" ry="2" />
<text  x="329.13" y="207.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.06%)</title><rect x="287.6" y="293" width="0.8" height="15.0" fill="rgb(250,99,52)" rx="2" ry="2" />
<text  x="290.65" y="303.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (2 samples, 0.13%)</title><rect x="982.5" y="309" width="1.5" height="15.0" fill="rgb(220,193,19)" rx="2" ry="2" />
<text  x="985.52" y="319.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr_target::~intrusive_ptr_target (11 samples, 0.70%)</title><rect x="458.2" y="293" width="8.3" height="15.0" fill="rgb(242,135,38)" rx="2" ry="2" />
<text  x="461.16" y="303.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 0.06%)</title><rect x="142.0" y="245" width="0.8" height="15.0" fill="rgb(247,28,30)" rx="2" ry="2" />
<text  x="145.03" y="255.5" ></text>
</g>
<g >
<title>[[stack]] (94 samples, 6.01%)</title><rect x="22.8" y="453" width="70.9" height="15.0" fill="rgb(229,127,15)" rx="2" ry="2" />
<text  x="25.83" y="463.5" >[[stack]]</text>
</g>
<g >
<title>free_pcppages_bulk (2 samples, 0.13%)</title><rect x="1178.7" y="197" width="1.5" height="15.0" fill="rgb(217,94,4)" rx="2" ry="2" />
<text  x="1181.68" y="207.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="173.0" y="293" width="0.7" height="15.0" fill="rgb(253,176,41)" rx="2" ry="2" />
<text  x="175.97" y="303.5" ></text>
</g>
<g >
<title>c10::alloc_cpu (2 samples, 0.13%)</title><rect x="46.2" y="437" width="1.5" height="15.0" fill="rgb(222,118,23)" rx="2" ry="2" />
<text  x="49.21" y="447.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="202.4" y="373" width="0.7" height="15.0" fill="rgb(205,101,25)" rx="2" ry="2" />
<text  x="205.39" y="383.5" ></text>
</g>
<g >
<title>c10::IntType::get (1 samples, 0.06%)</title><rect x="163.2" y="309" width="0.7" height="15.0" fill="rgb(229,81,42)" rx="2" ry="2" />
<text  x="166.16" y="319.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::optional (1 samples, 0.06%)</title><rect x="61.3" y="437" width="0.8" height="15.0" fill="rgb(213,143,17)" rx="2" ry="2" />
<text  x="64.30" y="447.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (1 samples, 0.06%)</title><rect x="32.6" y="437" width="0.8" height="15.0" fill="rgb(239,7,16)" rx="2" ry="2" />
<text  x="35.63" y="447.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;short&gt; (1 samples, 0.06%)</title><rect x="331.4" y="437" width="0.8" height="15.0" fill="rgb(215,207,7)" rx="2" ry="2" />
<text  x="334.41" y="447.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (50 samples, 3.20%)</title><rect x="107.3" y="373" width="37.8" height="15.0" fill="rgb(221,82,7)" rx="2" ry="2" />
<text  x="110.33" y="383.5" >[ld..</text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="27.4" y="437" width="0.7" height="15.0" fill="rgb(217,155,13)" rx="2" ry="2" />
<text  x="30.35" y="447.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (1 samples, 0.06%)</title><rect x="854.3" y="357" width="0.7" height="15.0" fill="rgb(245,145,16)" rx="2" ry="2" />
<text  x="857.26" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::initialized (2 samples, 0.13%)</title><rect x="740.3" y="341" width="1.5" height="15.0" fill="rgb(239,42,34)" rx="2" ry="2" />
<text  x="743.33" y="351.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;int&gt; (1 samples, 0.06%)</title><rect x="65.1" y="437" width="0.7" height="15.0" fill="rgb(224,41,32)" rx="2" ry="2" />
<text  x="68.08" y="447.5" ></text>
</g>
<g >
<title>load_elf_binary (7 samples, 0.45%)</title><rect x="1184.7" y="373" width="5.3" height="15.0" fill="rgb(209,104,38)" rx="2" ry="2" />
<text  x="1187.72" y="383.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (1 samples, 0.06%)</title><rect x="157.9" y="229" width="0.7" height="15.0" fill="rgb(242,70,19)" rx="2" ry="2" />
<text  x="160.88" y="239.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.13%)</title><rect x="1095.7" y="213" width="1.5" height="15.0" fill="rgb(220,109,11)" rx="2" ry="2" />
<text  x="1098.69" y="223.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (1 samples, 0.06%)</title><rect x="203.9" y="325" width="0.8" height="15.0" fill="rgb(235,172,44)" rx="2" ry="2" />
<text  x="206.90" y="335.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (2 samples, 0.13%)</title><rect x="366.9" y="357" width="1.5" height="15.0" fill="rgb(247,10,27)" rx="2" ry="2" />
<text  x="369.87" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.13%)</title><rect x="428.7" y="277" width="1.5" height="15.0" fill="rgb(235,205,36)" rx="2" ry="2" />
<text  x="431.73" y="287.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="1142.5" y="213" width="0.7" height="15.0" fill="rgb(225,202,17)" rx="2" ry="2" />
<text  x="1145.47" y="223.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (9 samples, 0.58%)</title><rect x="335.9" y="293" width="6.8" height="15.0" fill="rgb(240,125,41)" rx="2" ry="2" />
<text  x="338.93" y="303.5" ></text>
</g>
<g >
<title>c10::Dispatcher::~Dispatcher (1 samples, 0.06%)</title><rect x="412.1" y="341" width="0.8" height="15.0" fill="rgb(238,108,36)" rx="2" ry="2" />
<text  x="415.14" y="351.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_BatchingRegistrations.cpp (2 samples, 0.13%)</title><rect x="160.1" y="405" width="1.5" height="15.0" fill="rgb(252,205,26)" rx="2" ry="2" />
<text  x="163.14" y="415.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.06%)</title><rect x="364.6" y="373" width="0.8" height="15.0" fill="rgb(236,160,43)" rx="2" ry="2" />
<text  x="367.60" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.06%)</title><rect x="360.8" y="277" width="0.8" height="15.0" fill="rgb(229,72,54)" rx="2" ry="2" />
<text  x="363.83" y="287.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::~shared_ptr (1 samples, 0.06%)</title><rect x="769.8" y="293" width="0.7" height="15.0" fill="rgb(254,153,5)" rx="2" ry="2" />
<text  x="772.76" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="185.8" y="245" width="0.7" height="15.0" fill="rgb(240,195,1)" rx="2" ry="2" />
<text  x="188.79" y="255.5" ></text>
</g>
<g >
<title>make_requires_grad_true (565 samples, 36.13%)</title><rect x="741.8" y="405" width="426.3" height="15.0" fill="rgb(248,72,28)" rx="2" ry="2" />
<text  x="744.84" y="415.5" >make_requires_grad_true</text>
</g>
<g >
<title>__x64_sys_brk (1 samples, 0.06%)</title><rect x="280.9" y="165" width="0.7" height="15.0" fill="rgb(253,89,0)" rx="2" ry="2" />
<text  x="283.86" y="175.5" ></text>
</g>
<g >
<title>c10::detail::getTypePtr_&lt;c10::intrusive_ptr&lt;ConvPackedParamsBase&lt;2&gt;, c10::detail::intrusive_target_default_null_type&lt;ConvPackedParamsBase&lt;2&gt; &gt; &gt; &gt;::call (1 samples, 0.06%)</title><rect x="291.4" y="309" width="0.8" height="15.0" fill="rgb(233,14,36)" rx="2" ry="2" />
<text  x="294.42" y="319.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::begin (1 samples, 0.06%)</title><rect x="790.9" y="357" width="0.7" height="15.0" fill="rgb(210,216,53)" rx="2" ry="2" />
<text  x="793.88" y="367.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_init_aten (83 samples, 5.31%)</title><rect x="209.2" y="389" width="62.6" height="15.0" fill="rgb(242,161,14)" rx="2" ry="2" />
<text  x="212.18" y="399.5" >at::TO..</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (2 samples, 0.13%)</title><rect x="80.2" y="437" width="1.5" height="15.0" fill="rgb(235,43,12)" rx="2" ry="2" />
<text  x="83.17" y="447.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (2 samples, 0.13%)</title><rect x="382.7" y="437" width="1.5" height="15.0" fill="rgb(220,73,42)" rx="2" ry="2" />
<text  x="385.71" y="447.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="271.0" y="261" width="0.8" height="15.0" fill="rgb(241,107,52)" rx="2" ry="2" />
<text  x="274.05" y="271.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_sizes_contiguous (19 samples, 1.21%)</title><rect x="691.3" y="229" width="14.3" height="15.0" fill="rgb(249,164,19)" rx="2" ry="2" />
<text  x="694.29" y="239.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::IValue&gt;::optional (1 samples, 0.06%)</title><rect x="245.4" y="293" width="0.8" height="15.0" fill="rgb(228,140,20)" rx="2" ry="2" />
<text  x="248.40" y="303.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.06%)</title><rect x="292.9" y="341" width="0.8" height="15.0" fill="rgb(213,88,21)" rx="2" ry="2" />
<text  x="295.93" y="351.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="327.6" y="197" width="0.8" height="15.0" fill="rgb(241,44,18)" rx="2" ry="2" />
<text  x="330.63" y="207.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.06%)</title><rect x="412.1" y="197" width="0.8" height="15.0" fill="rgb(227,229,30)" rx="2" ry="2" />
<text  x="415.14" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="169.9" y="197" width="0.8" height="15.0" fill="rgb(241,161,31)" rx="2" ry="2" />
<text  x="172.95" y="207.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (7 samples, 0.45%)</title><rect x="317.1" y="373" width="5.3" height="15.0" fill="rgb(244,96,18)" rx="2" ry="2" />
<text  x="320.07" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="205.4" y="229" width="0.8" height="15.0" fill="rgb(224,68,18)" rx="2" ry="2" />
<text  x="208.41" y="239.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="228.0" y="261" width="0.8" height="15.0" fill="rgb(221,73,41)" rx="2" ry="2" />
<text  x="231.04" y="271.5" ></text>
</g>
<g >
<title>randomize_stack_top (1 samples, 0.06%)</title><rect x="1169.6" y="357" width="0.8" height="15.0" fill="rgb(220,73,20)" rx="2" ry="2" />
<text  x="1172.63" y="367.5" ></text>
</g>
<g >
<title>__libc_malloc (4 samples, 0.26%)</title><rect x="241.6" y="277" width="3.0" height="15.0" fill="rgb(243,60,30)" rx="2" ry="2" />
<text  x="244.62" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="308.0" y="213" width="0.8" height="15.0" fill="rgb(254,198,35)" rx="2" ry="2" />
<text  x="311.02" y="223.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="205.4" y="293" width="0.8" height="15.0" fill="rgb(238,220,4)" rx="2" ry="2" />
<text  x="208.41" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="223.5" y="325" width="0.8" height="15.0" fill="rgb(243,30,7)" rx="2" ry="2" />
<text  x="226.52" y="335.5" ></text>
</g>
<g >
<title>mmap_region (2 samples, 0.13%)</title><rect x="145.8" y="197" width="1.5" height="15.0" fill="rgb(233,175,27)" rx="2" ry="2" />
<text  x="148.81" y="207.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.06%)</title><rect x="157.9" y="277" width="0.7" height="15.0" fill="rgb(211,123,34)" rx="2" ry="2" />
<text  x="160.88" y="287.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (5 samples, 0.32%)</title><rect x="182.8" y="325" width="3.7" height="15.0" fill="rgb(243,67,12)" rx="2" ry="2" />
<text  x="185.77" y="335.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="222.0" y="229" width="0.8" height="15.0" fill="rgb(214,187,21)" rx="2" ry="2" />
<text  x="225.01" y="239.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="300.5" y="325" width="0.7" height="15.0" fill="rgb(242,154,14)" rx="2" ry="2" />
<text  x="303.47" y="335.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (2 samples, 0.13%)</title><rect x="391.8" y="437" width="1.5" height="15.0" fill="rgb(249,128,20)" rx="2" ry="2" />
<text  x="394.76" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="168.4" y="149" width="0.8" height="15.0" fill="rgb(238,55,27)" rx="2" ry="2" />
<text  x="171.44" y="159.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::optional&lt;c10::ScalarType, false&gt; (1 samples, 0.06%)</title><rect x="938.0" y="293" width="0.8" height="15.0" fill="rgb(230,209,41)" rx="2" ry="2" />
<text  x="941.01" y="303.5" ></text>
</g>
<g >
<title>do_wp_page (2 samples, 0.13%)</title><rect x="149.6" y="277" width="1.5" height="15.0" fill="rgb(220,207,18)" rx="2" ry="2" />
<text  x="152.58" y="287.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator bool (1 samples, 0.06%)</title><rect x="500.4" y="341" width="0.8" height="15.0" fill="rgb(205,211,42)" rx="2" ry="2" />
<text  x="503.41" y="351.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.06%)</title><rect x="268.8" y="261" width="0.7" height="15.0" fill="rgb(206,22,13)" rx="2" ry="2" />
<text  x="271.79" y="271.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="408.4" y="309" width="0.7" height="15.0" fill="rgb(236,208,23)" rx="2" ry="2" />
<text  x="411.36" y="319.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, at::Tensor  (1 samples, 0.06%)</title><rect x="160.9" y="357" width="0.7" height="15.0" fill="rgb(228,69,31)" rx="2" ry="2" />
<text  x="163.90" y="367.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="194.1" y="357" width="0.7" height="15.0" fill="rgb(223,202,24)" rx="2" ry="2" />
<text  x="197.09" y="367.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.13%)</title><rect x="211.4" y="373" width="1.6" height="15.0" fill="rgb(228,185,35)" rx="2" ry="2" />
<text  x="214.45" y="383.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_CUDAType.cpp (8 samples, 0.51%)</title><rect x="173.7" y="405" width="6.1" height="15.0" fill="rgb(234,121,37)" rx="2" ry="2" />
<text  x="176.72" y="415.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor&amp;  (1 samples, 0.06%)</title><rect x="198.6" y="357" width="0.8" height="15.0" fill="rgb(207,45,22)" rx="2" ry="2" />
<text  x="201.62" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.06%)</title><rect x="319.3" y="309" width="0.8" height="15.0" fill="rgb(246,72,23)" rx="2" ry="2" />
<text  x="322.34" y="319.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::dataptr (1 samples, 0.06%)</title><rect x="504.2" y="341" width="0.7" height="15.0" fill="rgb(216,228,46)" rx="2" ry="2" />
<text  x="507.18" y="351.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="205.4" y="213" width="0.8" height="15.0" fill="rgb(246,172,54)" rx="2" ry="2" />
<text  x="208.41" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_assign (3 samples, 0.19%)</title><rect x="231.1" y="309" width="2.2" height="15.0" fill="rgb(212,118,13)" rx="2" ry="2" />
<text  x="234.06" y="319.5" ></text>
</g>
<g >
<title>unlink_file_vma (1 samples, 0.06%)</title><rect x="145.8" y="133" width="0.8" height="15.0" fill="rgb(222,23,10)" rx="2" ry="2" />
<text  x="148.81" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.45%)</title><rect x="1184.7" y="453" width="5.3" height="15.0" fill="rgb(243,22,22)" rx="2" ry="2" />
<text  x="1187.72" y="463.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (1 samples, 0.06%)</title><rect x="730.5" y="341" width="0.8" height="15.0" fill="rgb(209,101,3)" rx="2" ry="2" />
<text  x="733.52" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="190.3" y="277" width="0.8" height="15.0" fill="rgb(244,100,2)" rx="2" ry="2" />
<text  x="193.32" y="287.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;unsigned char&gt; (1 samples, 0.06%)</title><rect x="65.8" y="437" width="0.8" height="15.0" fill="rgb(217,50,32)" rx="2" ry="2" />
<text  x="68.83" y="447.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3 samples, 0.19%)</title><rect x="152.6" y="277" width="2.3" height="15.0" fill="rgb(231,57,32)" rx="2" ry="2" />
<text  x="155.60" y="287.5" ></text>
</g>
<g >
<title>__do_global_dtors_aux (35 samples, 2.24%)</title><rect x="409.9" y="373" width="26.4" height="15.0" fill="rgb(253,36,12)" rx="2" ry="2" />
<text  x="412.87" y="383.5" >_..</text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="169.9" y="277" width="0.8" height="15.0" fill="rgb(248,159,18)" rx="2" ry="2" />
<text  x="172.95" y="287.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.06%)</title><rect x="157.1" y="245" width="0.8" height="15.0" fill="rgb(231,156,3)" rx="2" ry="2" />
<text  x="160.12" y="255.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.06%)</title><rect x="261.2" y="293" width="0.8" height="15.0" fill="rgb(214,196,23)" rx="2" ry="2" />
<text  x="264.24" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="271.8" y="325" width="0.8" height="15.0" fill="rgb(208,175,50)" rx="2" ry="2" />
<text  x="274.80" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.13%)</title><rect x="229.6" y="181" width="1.5" height="15.0" fill="rgb(225,41,35)" rx="2" ry="2" />
<text  x="232.55" y="191.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="283.1" y="341" width="0.8" height="15.0" fill="rgb(210,135,51)" rx="2" ry="2" />
<text  x="286.12" y="351.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (1 samples, 0.06%)</title><rect x="944.0" y="261" width="0.8" height="15.0" fill="rgb(239,71,49)" rx="2" ry="2" />
<text  x="947.04" y="271.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.06%)</title><rect x="274.8" y="341" width="0.8" height="15.0" fill="rgb(238,223,38)" rx="2" ry="2" />
<text  x="277.82" y="351.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::~shared_ptr (2 samples, 0.13%)</title><rect x="960.6" y="325" width="1.5" height="15.0" fill="rgb(227,80,1)" rx="2" ry="2" />
<text  x="963.64" y="335.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="407.6" y="421" width="0.8" height="15.0" fill="rgb(252,156,27)" rx="2" ry="2" />
<text  x="410.61" y="431.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.06%)</title><rect x="687.5" y="229" width="0.8" height="15.0" fill="rgb(247,213,1)" rx="2" ry="2" />
<text  x="690.52" y="239.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (5 samples, 0.32%)</title><rect x="1138.7" y="229" width="3.8" height="15.0" fill="rgb(252,128,33)" rx="2" ry="2" />
<text  x="1141.70" y="239.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="193.3" y="373" width="0.8" height="15.0" fill="rgb(212,85,10)" rx="2" ry="2" />
<text  x="196.34" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="168.4" y="309" width="0.8" height="15.0" fill="rgb(232,90,34)" rx="2" ry="2" />
<text  x="171.44" y="319.5" ></text>
</g>
<g >
<title>at::native::get_cpu_capability (1 samples, 0.06%)</title><rect x="192.6" y="373" width="0.7" height="15.0" fill="rgb(209,29,11)" rx="2" ry="2" />
<text  x="195.58" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (1 samples, 0.06%)</title><rect x="1164.3" y="357" width="0.8" height="15.0" fill="rgb(215,148,46)" rx="2" ry="2" />
<text  x="1167.35" y="367.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="335.2" y="213" width="0.7" height="15.0" fill="rgb(222,214,37)" rx="2" ry="2" />
<text  x="338.18" y="223.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (128 samples, 8.18%)</title><rect x="1049.7" y="261" width="96.5" height="15.0" fill="rgb(217,201,16)" rx="2" ry="2" />
<text  x="1052.67" y="271.5" >c10::impl::..</text>
</g>
<g >
<title>c10::demangle_type&lt;caffe2::IDEEPFallbackOp&lt;caffe2::db::CreateBlobsQueueDBOp&lt;caffe2::CPUContext&gt;, caffe2::SkipIndices&lt;0&gt; &gt; &gt; (1 samples, 0.06%)</title><rect x="305.8" y="389" width="0.7" height="15.0" fill="rgb(224,154,51)" rx="2" ry="2" />
<text  x="308.75" y="399.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.13%)</title><rect x="1178.7" y="245" width="1.5" height="15.0" fill="rgb(211,29,36)" rx="2" ry="2" />
<text  x="1181.68" y="255.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.13%)</title><rect x="1090.4" y="165" width="1.5" height="15.0" fill="rgb(236,216,52)" rx="2" ry="2" />
<text  x="1093.41" y="175.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.13%)</title><rect x="706.4" y="213" width="1.5" height="15.0" fill="rgb(236,204,30)" rx="2" ry="2" />
<text  x="709.38" y="223.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.06%)</title><rect x="262.0" y="325" width="0.7" height="15.0" fill="rgb(226,208,6)" rx="2" ry="2" />
<text  x="264.99" y="335.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.13%)</title><rect x="276.3" y="341" width="1.5" height="15.0" fill="rgb(235,212,3)" rx="2" ry="2" />
<text  x="279.33" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="162.4" y="309" width="0.8" height="15.0" fill="rgb(220,54,15)" rx="2" ry="2" />
<text  x="165.40" y="319.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_QuantizedCPUType.cpp (2 samples, 0.13%)</title><rect x="188.1" y="405" width="1.5" height="15.0" fill="rgb(252,54,33)" rx="2" ry="2" />
<text  x="191.06" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="329.9" y="309" width="0.8" height="15.0" fill="rgb(253,136,8)" rx="2" ry="2" />
<text  x="332.90" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (2 samples, 0.13%)</title><rect x="145.8" y="261" width="1.5" height="15.0" fill="rgb(234,105,47)" rx="2" ry="2" />
<text  x="148.81" y="271.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (1 samples, 0.06%)</title><rect x="367.6" y="325" width="0.8" height="15.0" fill="rgb(239,0,34)" rx="2" ry="2" />
<text  x="370.62" y="335.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="265.8" y="357" width="0.7" height="15.0" fill="rgb(211,200,7)" rx="2" ry="2" />
<text  x="268.77" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (5 samples, 0.32%)</title><rect x="10.0" y="437" width="3.8" height="15.0" fill="rgb(211,129,34)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>c10::demangle[abi:cxx11] (1 samples, 0.06%)</title><rect x="385.0" y="437" width="0.7" height="15.0" fill="rgb(253,203,31)" rx="2" ry="2" />
<text  x="387.97" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="1092.7" y="197" width="0.7" height="15.0" fill="rgb(244,109,26)" rx="2" ry="2" />
<text  x="1095.67" y="207.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.06%)</title><rect x="179.0" y="293" width="0.8" height="15.0" fill="rgb(207,89,4)" rx="2" ry="2" />
<text  x="182.00" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="385.0" y="357" width="0.7" height="15.0" fill="rgb(243,48,16)" rx="2" ry="2" />
<text  x="387.97" y="367.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="159.4" y="373" width="0.7" height="15.0" fill="rgb(215,136,48)" rx="2" ry="2" />
<text  x="162.39" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (5 samples, 0.32%)</title><rect x="1158.3" y="341" width="3.8" height="15.0" fill="rgb(232,31,12)" rx="2" ry="2" />
<text  x="1161.31" y="351.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="170.7" y="261" width="0.8" height="15.0" fill="rgb(248,90,48)" rx="2" ry="2" />
<text  x="173.70" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="157.9" y="325" width="0.7" height="15.0" fill="rgb(216,107,11)" rx="2" ry="2" />
<text  x="160.88" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::release (6 samples, 0.38%)</title><rect x="972.7" y="341" width="4.5" height="15.0" fill="rgb(236,64,32)" rx="2" ry="2" />
<text  x="975.71" y="351.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (1 samples, 0.06%)</title><rect x="151.8" y="373" width="0.8" height="15.0" fill="rgb(234,212,31)" rx="2" ry="2" />
<text  x="154.84" y="383.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.06%)</title><rect x="265.0" y="293" width="0.8" height="15.0" fill="rgb(205,41,16)" rx="2" ry="2" />
<text  x="268.01" y="303.5" ></text>
</g>
<g >
<title>c10::demangle_type&lt;caffe2::MarginRankingCriterionGradientOp&lt;caffe2::CPUContext&gt; &gt; (1 samples, 0.06%)</title><rect x="306.5" y="389" width="0.8" height="15.0" fill="rgb(245,125,44)" rx="2" ry="2" />
<text  x="309.51" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::~_Hashtable (1 samples, 0.06%)</title><rect x="68.1" y="437" width="0.7" height="15.0" fill="rgb(223,103,28)" rx="2" ry="2" />
<text  x="71.09" y="447.5" ></text>
</g>
<g >
<title>at::hasCallbacks@plt (1 samples, 0.06%)</title><rect x="1008.2" y="309" width="0.7" height="15.0" fill="rgb(230,221,45)" rx="2" ry="2" />
<text  x="1011.17" y="319.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.06%)</title><rect x="203.1" y="325" width="0.8" height="15.0" fill="rgb(236,21,3)" rx="2" ry="2" />
<text  x="206.15" y="335.5" ></text>
</g>
<g >
<title>c10::TensorImpl::release_resources (30 samples, 1.92%)</title><rect x="753.9" y="341" width="22.6" height="15.0" fill="rgb(252,48,14)" rx="2" ry="2" />
<text  x="756.91" y="351.5" >c..</text>
</g>
<g >
<title>c10::optional&lt;c10::IValue&gt;::optional (1 samples, 0.06%)</title><rect x="197.1" y="325" width="0.8" height="15.0" fill="rgb(241,119,47)" rx="2" ry="2" />
<text  x="200.11" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="308.8" y="293" width="0.7" height="15.0" fill="rgb(207,174,11)" rx="2" ry="2" />
<text  x="311.77" y="303.5" ></text>
</g>
<g >
<title>__sbrk (1 samples, 0.06%)</title><rect x="280.9" y="229" width="0.7" height="15.0" fill="rgb(219,190,37)" rx="2" ry="2" />
<text  x="283.86" y="239.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (3 samples, 0.19%)</title><rect x="1177.9" y="261" width="2.3" height="15.0" fill="rgb(226,209,47)" rx="2" ry="2" />
<text  x="1180.93" y="271.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.06%)</title><rect x="145.8" y="165" width="0.8" height="15.0" fill="rgb(220,7,38)" rx="2" ry="2" />
<text  x="148.81" y="175.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.06%)</title><rect x="148.8" y="181" width="0.8" height="15.0" fill="rgb(222,149,24)" rx="2" ry="2" />
<text  x="151.82" y="191.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="264.3" y="357" width="0.7" height="15.0" fill="rgb(244,188,16)" rx="2" ry="2" />
<text  x="267.26" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="206.2" y="341" width="0.7" height="15.0" fill="rgb(217,150,35)" rx="2" ry="2" />
<text  x="209.16" y="351.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.06%)</title><rect x="403.1" y="437" width="0.7" height="15.0" fill="rgb(212,39,52)" rx="2" ry="2" />
<text  x="406.08" y="447.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::operator= (12 samples, 0.77%)</title><rect x="913.9" y="325" width="9.0" height="15.0" fill="rgb(217,64,21)" rx="2" ry="2" />
<text  x="916.86" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="289.9" y="229" width="0.8" height="15.0" fill="rgb(210,215,1)" rx="2" ry="2" />
<text  x="292.91" y="239.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;std::tuple&lt;at::Tensor, c10::optional&lt;at::Tensor&gt; &gt;  (1 samples, 0.06%)</title><rect x="292.2" y="389" width="0.7" height="15.0" fill="rgb(229,119,11)" rx="2" ry="2" />
<text  x="295.17" y="399.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (2 samples, 0.13%)</title><rect x="853.5" y="373" width="1.5" height="15.0" fill="rgb(247,184,46)" rx="2" ry="2" />
<text  x="856.50" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="322.4" y="245" width="0.7" height="15.0" fill="rgb(243,86,16)" rx="2" ry="2" />
<text  x="325.35" y="255.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.06%)</title><rect x="279.3" y="309" width="0.8" height="15.0" fill="rgb(217,109,0)" rx="2" ry="2" />
<text  x="282.35" y="319.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.13%)</title><rect x="226.5" y="325" width="1.5" height="15.0" fill="rgb(211,206,3)" rx="2" ry="2" />
<text  x="229.53" y="335.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.06%)</title><rect x="275.6" y="341" width="0.7" height="15.0" fill="rgb(213,53,30)" rx="2" ry="2" />
<text  x="278.58" y="351.5" ></text>
</g>
<g >
<title>x86_pmu_enable (6 samples, 0.38%)</title><rect x="1184.7" y="293" width="4.5" height="15.0" fill="rgb(207,29,2)" rx="2" ry="2" />
<text  x="1187.72" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="404.6" y="309" width="0.7" height="15.0" fill="rgb(248,144,22)" rx="2" ry="2" />
<text  x="407.59" y="319.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseSingleConstant (2 samples, 0.13%)</title><rect x="247.7" y="293" width="1.5" height="15.0" fill="rgb(225,181,1)" rx="2" ry="2" />
<text  x="250.66" y="303.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (2 samples, 0.13%)</title><rect x="1148.5" y="293" width="1.5" height="15.0" fill="rgb(228,50,52)" rx="2" ry="2" />
<text  x="1151.50" y="303.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (2 samples, 0.13%)</title><rect x="268.0" y="309" width="1.5" height="15.0" fill="rgb(229,10,25)" rx="2" ry="2" />
<text  x="271.03" y="319.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.13%)</title><rect x="190.3" y="357" width="1.5" height="15.0" fill="rgb(250,226,14)" rx="2" ry="2" />
<text  x="193.32" y="367.5" ></text>
</g>
<g >
<title>free_pgtables (1 samples, 0.06%)</title><rect x="145.8" y="149" width="0.8" height="15.0" fill="rgb(216,100,5)" rx="2" ry="2" />
<text  x="148.81" y="159.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.26%)</title><rect x="241.6" y="293" width="3.0" height="15.0" fill="rgb(216,201,24)" rx="2" ry="2" />
<text  x="244.62" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (10 samples, 0.64%)</title><rect x="915.4" y="309" width="7.5" height="15.0" fill="rgb(250,65,38)" rx="2" ry="2" />
<text  x="918.37" y="319.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerDef (1 samples, 0.06%)</title><rect x="209.9" y="357" width="0.8" height="15.0" fill="rgb(240,39,38)" rx="2" ry="2" />
<text  x="212.94" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (3 samples, 0.19%)</title><rect x="413.6" y="309" width="2.3" height="15.0" fill="rgb(223,42,11)" rx="2" ry="2" />
<text  x="416.64" y="319.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.06%)</title><rect x="155.6" y="197" width="0.8" height="15.0" fill="rgb(227,71,13)" rx="2" ry="2" />
<text  x="158.61" y="207.5" ></text>
</g>
<g >
<title>unmap_single_vma (12 samples, 0.77%)</title><rect x="1171.1" y="325" width="9.1" height="15.0" fill="rgb(236,112,38)" rx="2" ry="2" />
<text  x="1174.14" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="655.8" y="181" width="0.8" height="15.0" fill="rgb(210,182,6)" rx="2" ry="2" />
<text  x="658.83" y="191.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.06%)</title><rect x="922.9" y="293" width="0.8" height="15.0" fill="rgb(251,94,31)" rx="2" ry="2" />
<text  x="925.92" y="303.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_autograd_meta (1 samples, 0.06%)</title><rect x="530.6" y="357" width="0.7" height="15.0" fill="rgb(253,163,48)" rx="2" ry="2" />
<text  x="533.59" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.06%)</title><rect x="270.3" y="309" width="0.7" height="15.0" fill="rgb(232,213,8)" rx="2" ry="2" />
<text  x="273.29" y="319.5" ></text>
</g>
<g >
<title>[example-app] (1 samples, 0.06%)</title><rect x="945.5" y="261" width="0.8" height="15.0" fill="rgb(253,223,9)" rx="2" ry="2" />
<text  x="948.55" y="271.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (307 samples, 19.63%)</title><rect x="99.0" y="437" width="231.7" height="15.0" fill="rgb(232,32,52)" rx="2" ry="2" />
<text  x="102.03" y="447.5" >[ld-2.31.so]</text>
</g>
<g >
<title>c10::Device::Device (1 samples, 0.06%)</title><rect x="486.8" y="341" width="0.8" height="15.0" fill="rgb(214,53,32)" rx="2" ry="2" />
<text  x="489.83" y="351.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.06%)</title><rect x="360.8" y="341" width="0.8" height="15.0" fill="rgb(228,81,40)" rx="2" ry="2" />
<text  x="363.83" y="351.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.06%)</title><rect x="204.7" y="325" width="0.7" height="15.0" fill="rgb(215,213,17)" rx="2" ry="2" />
<text  x="207.65" y="335.5" ></text>
</g>
<g >
<title>c10::TensorType::operator== (1 samples, 0.06%)</title><rect x="207.7" y="277" width="0.7" height="15.0" fill="rgb(222,134,10)" rx="2" ry="2" />
<text  x="210.67" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::__uniq_ptr_impl (7 samples, 0.45%)</title><rect x="893.5" y="325" width="5.3" height="15.0" fill="rgb(243,216,0)" rx="2" ry="2" />
<text  x="896.49" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="261.2" y="309" width="0.8" height="15.0" fill="rgb(239,191,10)" rx="2" ry="2" />
<text  x="264.24" y="319.5" ></text>
</g>
<g >
<title>c10::ObservedOperators::isObserved (1 samples, 0.06%)</title><rect x="215.2" y="293" width="0.8" height="15.0" fill="rgb(212,65,31)" rx="2" ry="2" />
<text  x="218.22" y="303.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::~TorchLibraryInit (24 samples, 1.53%)</title><rect x="415.9" y="341" width="18.1" height="15.0" fill="rgb(226,138,44)" rx="2" ry="2" />
<text  x="418.91" y="351.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::Options::schema (1 samples, 0.06%)</title><rect x="364.6" y="421" width="0.8" height="15.0" fill="rgb(222,160,45)" rx="2" ry="2" />
<text  x="367.60" y="431.5" ></text>
</g>
<g >
<title>[example-app] (1 samples, 0.06%)</title><rect x="947.8" y="261" width="0.8" height="15.0" fill="rgb(225,143,6)" rx="2" ry="2" />
<text  x="950.81" y="271.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::operator* (3 samples, 0.19%)</title><rect x="797.7" y="341" width="2.2" height="15.0" fill="rgb(207,120,30)" rx="2" ry="2" />
<text  x="800.67" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::unique_ptr&lt;std::default_delete&lt;c10::AutogradMetaInterface&gt;, void&gt; (5 samples, 0.32%)</title><rect x="544.9" y="357" width="3.8" height="15.0" fill="rgb(238,145,35)" rx="2" ry="2" />
<text  x="547.92" y="367.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.13%)</title><rect x="229.6" y="117" width="1.5" height="15.0" fill="rgb(208,42,29)" rx="2" ry="2" />
<text  x="232.55" y="127.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="329.9" y="325" width="0.8" height="15.0" fill="rgb(244,45,2)" rx="2" ry="2" />
<text  x="332.90" y="335.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="278.6" y="325" width="0.7" height="15.0" fill="rgb(246,210,25)" rx="2" ry="2" />
<text  x="281.59" y="335.5" ></text>
</g>
<g >
<title>[anon] (7 samples, 0.45%)</title><rect x="93.7" y="453" width="5.3" height="15.0" fill="rgb(218,165,32)" rx="2" ry="2" />
<text  x="96.75" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_execve (7 samples, 0.45%)</title><rect x="1184.7" y="421" width="5.3" height="15.0" fill="rgb(222,2,20)" rx="2" ry="2" />
<text  x="1187.72" y="431.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="194.1" y="373" width="0.7" height="15.0" fill="rgb(211,49,19)" rx="2" ry="2" />
<text  x="197.09" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.13%)</title><rect x="332.2" y="437" width="1.5" height="15.0" fill="rgb(245,151,1)" rx="2" ry="2" />
<text  x="335.16" y="447.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.06%)</title><rect x="412.1" y="213" width="0.8" height="15.0" fill="rgb(239,36,32)" rx="2" ry="2" />
<text  x="415.14" y="223.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.13%)</title><rect x="656.6" y="213" width="1.5" height="15.0" fill="rgb(229,191,36)" rx="2" ry="2" />
<text  x="659.59" y="223.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="253.7" y="245" width="0.8" height="15.0" fill="rgb(247,223,46)" rx="2" ry="2" />
<text  x="256.70" y="255.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::Delete (6 samples, 0.38%)</title><rect x="446.1" y="309" width="4.5" height="15.0" fill="rgb(215,54,5)" rx="2" ry="2" />
<text  x="449.09" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (3 samples, 0.19%)</title><rect x="964.4" y="293" width="2.3" height="15.0" fill="rgb(251,89,15)" rx="2" ry="2" />
<text  x="967.41" y="303.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (37 samples, 2.37%)</title><rect x="408.4" y="389" width="27.9" height="15.0" fill="rgb(219,93,19)" rx="2" ry="2" />
<text  x="411.36" y="399.5" >[..</text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (2 samples, 0.13%)</title><rect x="256.7" y="245" width="1.5" height="15.0" fill="rgb(242,140,24)" rx="2" ry="2" />
<text  x="259.71" y="255.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (2 samples, 0.13%)</title><rect x="262.7" y="293" width="1.6" height="15.0" fill="rgb(253,199,8)" rx="2" ry="2" />
<text  x="265.75" y="303.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (4 samples, 0.26%)</title><rect x="365.4" y="405" width="3.0" height="15.0" fill="rgb(249,220,31)" rx="2" ry="2" />
<text  x="368.36" y="415.5" ></text>
</g>
<g >
<title>at::native::empty_cpu (117 samples, 7.48%)</title><rect x="619.6" y="245" width="88.3" height="15.0" fill="rgb(224,70,40)" rx="2" ry="2" />
<text  x="622.62" y="255.5" >at::native..</text>
</g>
<g >
<title>google::protobuf::internal::ParseContext::ParseMessage&lt;google::protobuf::DescriptorProto&gt; (1 samples, 0.06%)</title><rect x="327.6" y="309" width="0.8" height="15.0" fill="rgb(217,146,17)" rx="2" ry="2" />
<text  x="330.63" y="319.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="185.8" y="261" width="0.7" height="15.0" fill="rgb(233,25,33)" rx="2" ry="2" />
<text  x="188.79" y="271.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (2 samples, 0.13%)</title><rect x="322.4" y="341" width="1.5" height="15.0" fill="rgb(223,105,30)" rx="2" ry="2" />
<text  x="325.35" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.06%)</title><rect x="174.5" y="277" width="0.7" height="15.0" fill="rgb(205,60,48)" rx="2" ry="2" />
<text  x="177.48" y="287.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.06%)</title><rect x="203.9" y="341" width="0.8" height="15.0" fill="rgb(233,156,46)" rx="2" ry="2" />
<text  x="206.90" y="351.5" ></text>
</g>
<g >
<title>c10::free_cpu (1 samples, 0.06%)</title><rect x="450.6" y="325" width="0.8" height="15.0" fill="rgb(205,211,13)" rx="2" ry="2" />
<text  x="453.61" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (3 samples, 0.19%)</title><rect x="53.8" y="437" width="2.2" height="15.0" fill="rgb(217,47,49)" rx="2" ry="2" />
<text  x="56.76" y="447.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (4 samples, 0.26%)</title><rect x="846.0" y="373" width="3.0" height="15.0" fill="rgb(210,125,50)" rx="2" ry="2" />
<text  x="848.96" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1006.7" y="277" width="0.7" height="15.0" fill="rgb(241,80,32)" rx="2" ry="2" />
<text  x="1009.66" y="287.5" ></text>
</g>
<g >
<title>c10::Device::is_cpu (1 samples, 0.06%)</title><rect x="491.4" y="293" width="0.7" height="15.0" fill="rgb(207,164,27)" rx="2" ry="2" />
<text  x="494.36" y="303.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.06%)</title><rect x="182.0" y="325" width="0.8" height="15.0" fill="rgb(250,199,30)" rx="2" ry="2" />
<text  x="185.02" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (4 samples, 0.26%)</title><rect x="881.4" y="357" width="3.0" height="15.0" fill="rgb(219,97,37)" rx="2" ry="2" />
<text  x="884.42" y="367.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="407.6" y="389" width="0.8" height="15.0" fill="rgb(248,11,54)" rx="2" ry="2" />
<text  x="410.61" y="399.5" ></text>
</g>
<g >
<title>at::hasCallbacks (5 samples, 0.32%)</title><rect x="1004.4" y="309" width="3.8" height="15.0" fill="rgb(231,100,46)" rx="2" ry="2" />
<text  x="1007.40" y="319.5" ></text>
</g>
<g >
<title>c10::constexpr_move&lt;bool&amp;&gt; (1 samples, 0.06%)</title><rect x="847.5" y="357" width="0.7" height="15.0" fill="rgb(241,85,29)" rx="2" ry="2" />
<text  x="850.47" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (2 samples, 0.13%)</title><rect x="982.5" y="341" width="1.5" height="15.0" fill="rgb(246,97,9)" rx="2" ry="2" />
<text  x="985.52" y="351.5" ></text>
</g>
<g >
<title>__cxa_finalize (35 samples, 2.24%)</title><rect x="409.9" y="357" width="26.4" height="15.0" fill="rgb(222,189,7)" rx="2" ry="2" />
<text  x="412.87" y="367.5" >_..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="151.8" y="325" width="0.8" height="15.0" fill="rgb(243,26,40)" rx="2" ry="2" />
<text  x="154.84" y="335.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="208.4" y="357" width="0.8" height="15.0" fill="rgb(215,37,17)" rx="2" ry="2" />
<text  x="211.43" y="367.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.06%)</title><rect x="169.9" y="165" width="0.8" height="15.0" fill="rgb(224,224,35)" rx="2" ry="2" />
<text  x="172.95" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.13%)</title><rect x="145.8" y="293" width="1.5" height="15.0" fill="rgb(248,33,24)" rx="2" ry="2" />
<text  x="148.81" y="303.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.06%)</title><rect x="169.9" y="101" width="0.8" height="15.0" fill="rgb(221,146,26)" rx="2" ry="2" />
<text  x="172.95" y="111.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (3 samples, 0.19%)</title><rect x="357.8" y="437" width="2.3" height="15.0" fill="rgb(227,24,42)" rx="2" ry="2" />
<text  x="360.81" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::~unique_ptr (5 samples, 0.32%)</title><rect x="977.2" y="357" width="3.8" height="15.0" fill="rgb(251,195,26)" rx="2" ry="2" />
<text  x="980.24" y="367.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;bool&gt;::constexpr_storage_t (1 samples, 0.06%)</title><rect x="736.6" y="309" width="0.7" height="15.0" fill="rgb(238,3,22)" rx="2" ry="2" />
<text  x="739.56" y="319.5" ></text>
</g>
<g >
<title>__libc_malloc (3 samples, 0.19%)</title><rect x="888.2" y="325" width="2.3" height="15.0" fill="rgb(217,59,38)" rx="2" ry="2" />
<text  x="891.21" y="335.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.19%)</title><rect x="152.6" y="293" width="2.3" height="15.0" fill="rgb(244,151,40)" rx="2" ry="2" />
<text  x="155.60" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.06%)</title><rect x="287.6" y="261" width="0.8" height="15.0" fill="rgb(241,33,41)" rx="2" ry="2" />
<text  x="290.65" y="271.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (2 samples, 0.13%)</title><rect x="172.2" y="325" width="1.5" height="15.0" fill="rgb(227,26,44)" rx="2" ry="2" />
<text  x="175.21" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="407.6" y="373" width="0.8" height="15.0" fill="rgb(205,203,21)" rx="2" ry="2" />
<text  x="410.61" y="383.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.06%)</title><rect x="285.4" y="341" width="0.7" height="15.0" fill="rgb(248,158,30)" rx="2" ry="2" />
<text  x="288.38" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="168.4" y="277" width="0.8" height="15.0" fill="rgb(220,108,50)" rx="2" ry="2" />
<text  x="171.44" y="287.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="327.6" y="245" width="0.8" height="15.0" fill="rgb(205,203,15)" rx="2" ry="2" />
<text  x="330.63" y="255.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;caffe2::TypeMeta&gt;::constexpr_storage_t&lt;caffe2::TypeMeta&gt; (2 samples, 0.13%)</title><rect x="508.0" y="341" width="1.5" height="15.0" fill="rgb(205,46,16)" rx="2" ry="2" />
<text  x="510.95" y="351.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::type_index, std::hash&lt;std::type_index&gt;, ska::detailv3::KeyOrValueHasher&lt;std::type_index, std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::hash&lt;std::type_index&gt; &gt;, std::equal_to&lt;std::type_index&gt;, ska::detailv3::KeyOrValueEquality&lt;std::type_index, std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::equal_to&lt;std::type_index&gt; &gt;, std::allocator&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt; &gt; &gt; &gt;::clear (1 samples, 0.06%)</title><rect x="285.4" y="309" width="0.7" height="15.0" fill="rgb(248,156,8)" rx="2" ry="2" />
<text  x="288.38" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="157.1" y="325" width="0.8" height="15.0" fill="rgb(236,46,51)" rx="2" ry="2" />
<text  x="160.12" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.06%)</title><rect x="322.4" y="293" width="0.7" height="15.0" fill="rgb(251,42,6)" rx="2" ry="2" />
<text  x="325.35" y="303.5" ></text>
</g>
<g >
<title>c10::SingleElementType&lt; (1 samples, 0.06%)</title><rect x="206.9" y="277" width="0.8" height="15.0" fill="rgb(236,193,12)" rx="2" ry="2" />
<text  x="209.92" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::__uniq_ptr_impl (4 samples, 0.26%)</title><rect x="544.9" y="341" width="3.0" height="15.0" fill="rgb(251,33,4)" rx="2" ry="2" />
<text  x="547.92" y="351.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.06%)</title><rect x="307.3" y="197" width="0.7" height="15.0" fill="rgb(206,226,21)" rx="2" ry="2" />
<text  x="310.26" y="207.5" ></text>
</g>
<g >
<title>make_requires_grad_false (403 samples, 25.77%)</title><rect x="437.8" y="405" width="304.0" height="15.0" fill="rgb(211,183,44)" rx="2" ry="2" />
<text  x="440.79" y="415.5" >make_requires_grad_false</text>
</g>
<g >
<title>page_fault (3 samples, 0.19%)</title><rect x="152.6" y="325" width="2.3" height="15.0" fill="rgb(229,200,38)" rx="2" ry="2" />
<text  x="155.60" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.13%)</title><rect x="145.8" y="277" width="1.5" height="15.0" fill="rgb(242,101,43)" rx="2" ry="2" />
<text  x="148.81" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (2 samples, 0.13%)</title><rect x="972.7" y="309" width="1.5" height="15.0" fill="rgb(218,113,32)" rx="2" ry="2" />
<text  x="975.71" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (1 samples, 0.06%)</title><rect x="219.7" y="229" width="0.8" height="15.0" fill="rgb(228,160,13)" rx="2" ry="2" />
<text  x="222.74" y="239.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (2 samples, 0.13%)</title><rect x="738.1" y="357" width="1.5" height="15.0" fill="rgb(220,213,47)" rx="2" ry="2" />
<text  x="741.07" y="367.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::Registerer::op (9 samples, 0.58%)</title><rect x="315.6" y="389" width="6.8" height="15.0" fill="rgb(206,171,25)" rx="2" ry="2" />
<text  x="318.56" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (1 samples, 0.06%)</title><rect x="49.2" y="437" width="0.8" height="15.0" fill="rgb(244,17,6)" rx="2" ry="2" />
<text  x="52.23" y="447.5" ></text>
</g>
<g >
<title>load_elf_binary (2 samples, 0.13%)</title><rect x="1168.9" y="373" width="1.5" height="15.0" fill="rgb(210,9,37)" rx="2" ry="2" />
<text  x="1171.87" y="383.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.06%)</title><rect x="158.6" y="357" width="0.8" height="15.0" fill="rgb(245,8,24)" rx="2" ry="2" />
<text  x="161.63" y="367.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (1 samples, 0.06%)</title><rect x="690.5" y="213" width="0.8" height="15.0" fill="rgb(206,113,34)" rx="2" ry="2" />
<text  x="693.54" y="223.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.32%)</title><rect x="147.3" y="341" width="3.8" height="15.0" fill="rgb(244,194,19)" rx="2" ry="2" />
<text  x="150.31" y="351.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.06%)</title><rect x="275.6" y="325" width="0.7" height="15.0" fill="rgb(231,72,11)" rx="2" ry="2" />
<text  x="278.58" y="335.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::~FunctionSchema (1 samples, 0.06%)</title><rect x="35.7" y="437" width="0.7" height="15.0" fill="rgb(222,57,31)" rx="2" ry="2" />
<text  x="38.65" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::~_Hashtable (1 samples, 0.06%)</title><rect x="399.3" y="437" width="0.8" height="15.0" fill="rgb(225,74,12)" rx="2" ry="2" />
<text  x="402.31" y="447.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.13%)</title><rect x="1090.4" y="181" width="1.5" height="15.0" fill="rgb(230,22,28)" rx="2" ry="2" />
<text  x="1093.41" y="191.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator* (2 samples, 0.13%)</title><rect x="812.0" y="357" width="1.5" height="15.0" fill="rgb(216,219,35)" rx="2" ry="2" />
<text  x="815.01" y="367.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.13%)</title><rect x="706.4" y="229" width="1.5" height="15.0" fill="rgb(206,41,29)" rx="2" ry="2" />
<text  x="709.38" y="239.5" ></text>
</g>
<g >
<title>brk (1 samples, 0.06%)</title><rect x="231.8" y="181" width="0.8" height="15.0" fill="rgb(248,202,49)" rx="2" ry="2" />
<text  x="234.82" y="191.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.06%)</title><rect x="172.2" y="309" width="0.8" height="15.0" fill="rgb(222,166,2)" rx="2" ry="2" />
<text  x="175.21" y="319.5" ></text>
</g>
<g >
<title>c10::Device::Device (5 samples, 0.32%)</title><rect x="806.0" y="325" width="3.7" height="15.0" fill="rgb(209,16,47)" rx="2" ry="2" />
<text  x="808.97" y="335.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator bool (1 samples, 0.06%)</title><rect x="811.3" y="357" width="0.7" height="15.0" fill="rgb(227,134,52)" rx="2" ry="2" />
<text  x="814.25" y="367.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.06%)</title><rect x="156.4" y="373" width="0.7" height="15.0" fill="rgb(239,135,24)" rx="2" ry="2" />
<text  x="159.37" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.13%)</title><rect x="326.1" y="293" width="1.5" height="15.0" fill="rgb(222,137,49)" rx="2" ry="2" />
<text  x="329.13" y="303.5" ></text>
</g>
<g >
<title>__offload_var_table (1 samples, 0.06%)</title><rect x="406.9" y="453" width="0.7" height="15.0" fill="rgb(224,172,32)" rx="2" ry="2" />
<text  x="409.85" y="463.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="372.9" y="341" width="0.8" height="15.0" fill="rgb(229,188,27)" rx="2" ry="2" />
<text  x="375.90" y="351.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_requires_grad (1 samples, 0.06%)</title><rect x="820.3" y="389" width="0.8" height="15.0" fill="rgb(242,184,23)" rx="2" ry="2" />
<text  x="823.31" y="399.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.19%)</title><rect x="231.1" y="277" width="2.2" height="15.0" fill="rgb(214,157,30)" rx="2" ry="2" />
<text  x="234.06" y="287.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="297.5" y="325" width="0.7" height="15.0" fill="rgb(213,214,37)" rx="2" ry="2" />
<text  x="300.46" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.13%)</title><rect x="229.6" y="133" width="1.5" height="15.0" fill="rgb(234,199,18)" rx="2" ry="2" />
<text  x="232.55" y="143.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="304.2" y="357" width="0.8" height="15.0" fill="rgb(254,124,52)" rx="2" ry="2" />
<text  x="307.25" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::initialized (2 samples, 0.13%)</title><rect x="481.5" y="325" width="1.6" height="15.0" fill="rgb(231,154,52)" rx="2" ry="2" />
<text  x="484.55" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.06%)</title><rect x="400.8" y="437" width="0.8" height="15.0" fill="rgb(214,183,48)" rx="2" ry="2" />
<text  x="403.82" y="447.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (7 samples, 0.45%)</title><rect x="337.4" y="53" width="5.3" height="15.0" fill="rgb(221,47,32)" rx="2" ry="2" />
<text  x="340.44" y="63.5" ></text>
</g>
<g >
<title>c10::ArrayRef&lt;long&gt;::ArrayRef (7 samples, 0.45%)</title><rect x="787.9" y="389" width="5.2" height="15.0" fill="rgb(219,216,45)" rx="2" ry="2" />
<text  x="790.86" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.06%)</title><rect x="305.0" y="373" width="0.8" height="15.0" fill="rgb(228,155,54)" rx="2" ry="2" />
<text  x="308.00" y="383.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base (1 samples, 0.06%)</title><rect x="800.7" y="341" width="0.7" height="15.0" fill="rgb(231,111,25)" rx="2" ry="2" />
<text  x="803.69" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (3 samples, 0.19%)</title><rect x="299.7" y="357" width="2.3" height="15.0" fill="rgb(221,118,39)" rx="2" ry="2" />
<text  x="302.72" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::setManuallyBoxedKernel_ (2 samples, 0.13%)</title><rect x="315.6" y="357" width="1.5" height="15.0" fill="rgb(242,2,6)" rx="2" ry="2" />
<text  x="318.56" y="367.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_CPU (16 samples, 1.02%)</title><rect x="161.6" y="389" width="12.1" height="15.0" fill="rgb(236,41,28)" rx="2" ry="2" />
<text  x="164.65" y="399.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.06%)</title><rect x="151.1" y="373" width="0.7" height="15.0" fill="rgb(227,90,54)" rx="2" ry="2" />
<text  x="154.09" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_get_insert_unique_pos (1 samples, 0.06%)</title><rect x="311.0" y="357" width="0.8" height="15.0" fill="rgb(207,141,6)" rx="2" ry="2" />
<text  x="314.04" y="367.5" ></text>
</g>
<g >
<title>caffe2::OpSchema::SetDoc (1 samples, 0.06%)</title><rect x="308.8" y="389" width="0.7" height="15.0" fill="rgb(223,101,8)" rx="2" ry="2" />
<text  x="311.77" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="287.6" y="229" width="0.8" height="15.0" fill="rgb(216,191,41)" rx="2" ry="2" />
<text  x="290.65" y="239.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.06%)</title><rect x="308.8" y="213" width="0.7" height="15.0" fill="rgb(217,214,19)" rx="2" ry="2" />
<text  x="311.77" y="223.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.13%)</title><rect x="153.4" y="181" width="1.5" height="15.0" fill="rgb(218,40,40)" rx="2" ry="2" />
<text  x="156.35" y="191.5" ></text>
</g>
<g >
<title>std::addressof&lt;c10::Device&gt; (1 samples, 0.06%)</title><rect x="801.4" y="325" width="0.8" height="15.0" fill="rgb(248,126,4)" rx="2" ry="2" />
<text  x="804.45" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_realloc_insert&lt;torch::jit::Token&gt; (1 samples, 0.06%)</title><rect x="289.9" y="245" width="0.8" height="15.0" fill="rgb(217,164,32)" rx="2" ry="2" />
<text  x="292.91" y="255.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (3 samples, 0.19%)</title><rect x="152.6" y="389" width="2.3" height="15.0" fill="rgb(226,111,25)" rx="2" ry="2" />
<text  x="155.60" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_execve (2 samples, 0.13%)</title><rect x="1168.9" y="421" width="1.5" height="15.0" fill="rgb(212,69,33)" rx="2" ry="2" />
<text  x="1171.87" y="431.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (6 samples, 0.38%)</title><rect x="909.3" y="325" width="4.6" height="15.0" fill="rgb(248,18,41)" rx="2" ry="2" />
<text  x="912.34" y="335.5" ></text>
</g>
<g >
<title>lru_add_drain (1 samples, 0.06%)</title><rect x="1177.9" y="245" width="0.8" height="15.0" fill="rgb(230,90,24)" rx="2" ry="2" />
<text  x="1180.93" y="255.5" ></text>
</g>
<g >
<title>std::move&lt;torch::autograd::Node*&amp;&gt; (1 samples, 0.06%)</title><rect x="921.4" y="261" width="0.8" height="15.0" fill="rgb(230,63,11)" rx="2" ry="2" />
<text  x="924.41" y="271.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="195.6" y="229" width="0.8" height="15.0" fill="rgb(226,189,42)" rx="2" ry="2" />
<text  x="198.60" y="239.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (3 samples, 0.19%)</title><rect x="710.9" y="245" width="2.3" height="15.0" fill="rgb(209,197,27)" rx="2" ry="2" />
<text  x="713.91" y="255.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="308.0" y="245" width="0.8" height="15.0" fill="rgb(224,5,10)" rx="2" ry="2" />
<text  x="311.02" y="255.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator bool (2 samples, 0.13%)</title><rect x="393.3" y="437" width="1.5" height="15.0" fill="rgb(234,161,47)" rx="2" ry="2" />
<text  x="396.27" y="447.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="206.2" y="277" width="0.7" height="15.0" fill="rgb(208,226,20)" rx="2" ry="2" />
<text  x="209.16" y="287.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (5 samples, 0.32%)</title><rect x="213.7" y="325" width="3.8" height="15.0" fill="rgb(210,58,11)" rx="2" ry="2" />
<text  x="216.71" y="335.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator bool (1 samples, 0.06%)</title><rect x="731.3" y="341" width="0.7" height="15.0" fill="rgb(254,76,16)" rx="2" ry="2" />
<text  x="734.28" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="228.0" y="277" width="0.8" height="15.0" fill="rgb(247,184,27)" rx="2" ry="2" />
<text  x="231.04" y="287.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.06%)</title><rect x="196.4" y="309" width="0.7" height="15.0" fill="rgb(213,202,8)" rx="2" ry="2" />
<text  x="199.36" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_M_ptr (1 samples, 0.06%)</title><rect x="77.9" y="437" width="0.8" height="15.0" fill="rgb(235,89,7)" rx="2" ry="2" />
<text  x="80.90" y="447.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.06%)</title><rect x="265.0" y="325" width="0.8" height="15.0" fill="rgb(244,128,8)" rx="2" ry="2" />
<text  x="268.01" y="335.5" ></text>
</g>
<g >
<title>c10::Dispatcher::deregisterDef_ (3 samples, 0.19%)</title><rect x="417.4" y="325" width="2.3" height="15.0" fill="rgb(240,43,38)" rx="2" ry="2" />
<text  x="420.42" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (1 samples, 0.06%)</title><rect x="56.0" y="437" width="0.8" height="15.0" fill="rgb(212,188,54)" rx="2" ry="2" />
<text  x="59.02" y="447.5" ></text>
</g>
<g >
<title>__tls_init (4 samples, 0.26%)</title><rect x="1005.2" y="293" width="3.0" height="15.0" fill="rgb(240,3,47)" rx="2" ry="2" />
<text  x="1008.15" y="303.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1004.4" y="293" width="0.8" height="15.0" fill="rgb(229,81,38)" rx="2" ry="2" />
<text  x="1007.40" y="303.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;torch::autograd::Node,  (1 samples, 0.06%)</title><rect x="769.0" y="293" width="0.8" height="15.0" fill="rgb(227,94,47)" rx="2" ry="2" />
<text  x="772.00" y="303.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="253.7" y="261" width="0.8" height="15.0" fill="rgb(227,168,33)" rx="2" ry="2" />
<text  x="256.70" y="271.5" ></text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;torch::autograd::Node,  (1 samples, 0.06%)</title><rect x="922.2" y="293" width="0.7" height="15.0" fill="rgb(223,5,50)" rx="2" ry="2" />
<text  x="925.16" y="303.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (2 samples, 0.13%)</title><rect x="176.7" y="309" width="1.5" height="15.0" fill="rgb(249,112,43)" rx="2" ry="2" />
<text  x="179.74" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::unique_ptr&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt;, void&gt; (8 samples, 0.51%)</title><rect x="892.7" y="341" width="6.1" height="15.0" fill="rgb(206,78,10)" rx="2" ry="2" />
<text  x="895.74" y="351.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.06%)</title><rect x="268.8" y="293" width="0.7" height="15.0" fill="rgb(210,55,19)" rx="2" ry="2" />
<text  x="271.79" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (4 samples, 0.26%)</title><rect x="258.2" y="277" width="3.0" height="15.0" fill="rgb(222,180,41)" rx="2" ry="2" />
<text  x="261.22" y="287.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.06%)</title><rect x="26.6" y="437" width="0.8" height="15.0" fill="rgb(232,146,10)" rx="2" ry="2" />
<text  x="29.60" y="447.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="727.5" y="325" width="0.8" height="15.0" fill="rgb(208,36,40)" rx="2" ry="2" />
<text  x="730.51" y="335.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (3 samples, 0.19%)</title><rect x="179.8" y="325" width="2.2" height="15.0" fill="rgb(205,53,36)" rx="2" ry="2" />
<text  x="182.76" y="335.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (1 samples, 0.06%)</title><rect x="188.8" y="341" width="0.8" height="15.0" fill="rgb(224,34,39)" rx="2" ry="2" />
<text  x="191.81" y="351.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (1 samples, 0.06%)</title><rect x="828.6" y="341" width="0.8" height="15.0" fill="rgb(249,97,18)" rx="2" ry="2" />
<text  x="831.61" y="351.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;  (1 samples, 0.06%)</title><rect x="278.6" y="373" width="0.7" height="15.0" fill="rgb(207,70,33)" rx="2" ry="2" />
<text  x="281.59" y="383.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="411.4" y="325" width="0.7" height="15.0" fill="rgb(237,125,50)" rx="2" ry="2" />
<text  x="414.38" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="204.7" y="293" width="0.7" height="15.0" fill="rgb(209,22,52)" rx="2" ry="2" />
<text  x="207.65" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="198.6" y="277" width="0.8" height="15.0" fill="rgb(205,180,27)" rx="2" ry="2" />
<text  x="201.62" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (1 samples, 0.06%)</title><rect x="769.8" y="277" width="0.7" height="15.0" fill="rgb(251,138,29)" rx="2" ry="2" />
<text  x="772.76" y="287.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_init_aten (2 samples, 0.13%)</title><rect x="360.1" y="421" width="1.5" height="15.0" fill="rgb(233,212,50)" rx="2" ry="2" />
<text  x="363.08" y="431.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (3 samples, 0.19%)</title><rect x="430.2" y="277" width="2.3" height="15.0" fill="rgb(235,19,3)" rx="2" ry="2" />
<text  x="433.24" y="287.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (3 samples, 0.19%)</title><rect x="161.6" y="357" width="2.3" height="15.0" fill="rgb(227,169,21)" rx="2" ry="2" />
<text  x="164.65" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="255.2" y="261" width="0.8" height="15.0" fill="rgb(228,103,12)" rx="2" ry="2" />
<text  x="258.20" y="271.5" ></text>
</g>
<g >
<title>c10::Dispatcher::singleton (2 samples, 0.13%)</title><rect x="34.1" y="437" width="1.6" height="15.0" fill="rgb(212,191,9)" rx="2" ry="2" />
<text  x="37.14" y="447.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_qembeddingbag_unpack.cpp (1 samples, 0.06%)</title><rect x="292.9" y="405" width="0.8" height="15.0" fill="rgb(229,84,27)" rx="2" ry="2" />
<text  x="295.93" y="415.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="216.0" y="245" width="0.7" height="15.0" fill="rgb(237,36,1)" rx="2" ry="2" />
<text  x="218.97" y="255.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.06%)</title><rect x="360.8" y="357" width="0.8" height="15.0" fill="rgb(228,3,53)" rx="2" ry="2" />
<text  x="363.83" y="367.5" ></text>
</g>
<g >
<title>torch::autograd::Edge::~Edge (9 samples, 0.58%)</title><rect x="955.4" y="341" width="6.7" height="15.0" fill="rgb(251,84,11)" rx="2" ry="2" />
<text  x="958.36" y="351.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.06%)</title><rect x="211.4" y="309" width="0.8" height="15.0" fill="rgb(242,75,10)" rx="2" ry="2" />
<text  x="214.45" y="319.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (202 samples, 12.92%)</title><rect x="997.6" y="341" width="152.4" height="15.0" fill="rgb(233,37,50)" rx="2" ry="2" />
<text  x="1000.61" y="351.5" >c10::Dispatcher::ca..</text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="222.0" y="245" width="0.8" height="15.0" fill="rgb(229,113,13)" rx="2" ry="2" />
<text  x="225.01" y="255.5" ></text>
</g>
<g >
<title>std::mutex::mutex (1 samples, 0.06%)</title><rect x="83.9" y="437" width="0.8" height="15.0" fill="rgb(221,3,32)" rx="2" ry="2" />
<text  x="86.94" y="447.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (2 samples, 0.13%)</title><rect x="211.4" y="325" width="1.6" height="15.0" fill="rgb(224,113,45)" rx="2" ry="2" />
<text  x="214.45" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="429.5" y="261" width="0.7" height="15.0" fill="rgb(240,165,42)" rx="2" ry="2" />
<text  x="432.49" y="271.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (2 samples, 0.13%)</title><rect x="145.8" y="245" width="1.5" height="15.0" fill="rgb(238,84,47)" rx="2" ry="2" />
<text  x="148.81" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.06%)</title><rect x="227.3" y="309" width="0.7" height="15.0" fill="rgb(229,119,50)" rx="2" ry="2" />
<text  x="230.29" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (2 samples, 0.13%)</title><rect x="255.2" y="277" width="1.5" height="15.0" fill="rgb(215,217,36)" rx="2" ry="2" />
<text  x="258.20" y="287.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::checkNoDuplicateKernels_ (1 samples, 0.06%)</title><rect x="297.5" y="373" width="0.7" height="15.0" fill="rgb(218,226,24)" rx="2" ry="2" />
<text  x="300.46" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.06%)</title><rect x="235.6" y="293" width="0.7" height="15.0" fill="rgb(208,213,1)" rx="2" ry="2" />
<text  x="238.59" y="303.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.06%)</title><rect x="277.8" y="357" width="0.8" height="15.0" fill="rgb(213,159,36)" rx="2" ry="2" />
<text  x="280.84" y="367.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (182 samples, 11.64%)</title><rect x="1012.7" y="309" width="137.3" height="15.0" fill="rgb(240,3,0)" rx="2" ry="2" />
<text  x="1015.70" y="319.5" >c10::impl::detail..</text>
</g>
<g >
<title>at::hasCallbacks (1 samples, 0.06%)</title><rect x="601.5" y="261" width="0.8" height="15.0" fill="rgb(223,28,24)" rx="2" ry="2" />
<text  x="604.51" y="271.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="206.2" y="149" width="0.7" height="15.0" fill="rgb(235,69,11)" rx="2" ry="2" />
<text  x="209.16" y="159.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.06%)</title><rect x="312.5" y="389" width="0.8" height="15.0" fill="rgb(232,55,39)" rx="2" ry="2" />
<text  x="315.54" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.06%)</title><rect x="219.7" y="245" width="0.8" height="15.0" fill="rgb(246,29,3)" rx="2" ry="2" />
<text  x="222.74" y="255.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (1 samples, 0.06%)</title><rect x="187.3" y="357" width="0.8" height="15.0" fill="rgb(229,189,51)" rx="2" ry="2" />
<text  x="190.30" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (3 samples, 0.19%)</title><rect x="413.6" y="341" width="2.3" height="15.0" fill="rgb(213,135,49)" rx="2" ry="2" />
<text  x="416.64" y="351.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (5 samples, 0.32%)</title><rect x="446.8" y="277" width="3.8" height="15.0" fill="rgb(252,42,33)" rx="2" ry="2" />
<text  x="449.84" y="287.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (2 samples, 0.13%)</title><rect x="365.4" y="357" width="1.5" height="15.0" fill="rgb(247,142,5)" rx="2" ry="2" />
<text  x="368.36" y="367.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (1 samples, 0.06%)</title><rect x="335.2" y="293" width="0.7" height="15.0" fill="rgb(252,192,24)" rx="2" ry="2" />
<text  x="338.18" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="412.1" y="309" width="0.8" height="15.0" fill="rgb(220,154,0)" rx="2" ry="2" />
<text  x="415.14" y="319.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::Delete (5 samples, 0.32%)</title><rect x="756.9" y="309" width="3.8" height="15.0" fill="rgb(228,219,49)" rx="2" ry="2" />
<text  x="759.93" y="319.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (2 samples, 0.13%)</title><rect x="320.8" y="277" width="1.6" height="15.0" fill="rgb(221,219,9)" rx="2" ry="2" />
<text  x="323.84" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.06%)</title><rect x="239.4" y="261" width="0.7" height="15.0" fill="rgb(221,139,54)" rx="2" ry="2" />
<text  x="242.36" y="271.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (2 samples, 0.13%)</title><rect x="200.9" y="389" width="1.5" height="15.0" fill="rgb(226,192,26)" rx="2" ry="2" />
<text  x="203.88" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (1 samples, 0.06%)</title><rect x="1163.6" y="357" width="0.7" height="15.0" fill="rgb(248,151,50)" rx="2" ry="2" />
<text  x="1166.59" y="367.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (6 samples, 0.38%)</title><rect x="369.1" y="373" width="4.6" height="15.0" fill="rgb(223,146,18)" rx="2" ry="2" />
<text  x="372.13" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="142.0" y="213" width="0.8" height="15.0" fill="rgb(227,98,28)" rx="2" ry="2" />
<text  x="145.03" y="223.5" ></text>
</g>
<g >
<title>wp_page_copy (1 samples, 0.06%)</title><rect x="142.0" y="229" width="0.8" height="15.0" fill="rgb(214,83,1)" rx="2" ry="2" />
<text  x="145.03" y="239.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="168.4" y="293" width="0.8" height="15.0" fill="rgb(251,17,34)" rx="2" ry="2" />
<text  x="171.44" y="303.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::contained_val (1 samples, 0.06%)</title><rect x="936.5" y="293" width="0.8" height="15.0" fill="rgb(218,81,44)" rx="2" ry="2" />
<text  x="939.50" y="303.5" ></text>
</g>
<g >
<title>std::move&lt;at::Tensor&amp;&gt; (3 samples, 0.19%)</title><rect x="867.1" y="373" width="2.2" height="15.0" fill="rgb(233,219,8)" rx="2" ry="2" />
<text  x="870.08" y="383.5" ></text>
</g>
<g >
<title>c10::Registry&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::GradientMakerBase, std::default_delete&lt;caffe2::GradientMakerBase&gt; &gt;, caffe2::OperatorDef const&amp;, std::vector&lt;caffe2::GradientWrapper, std::allocator&lt;caffe2::GradientWrapper&gt; &gt; const&amp;&gt;::Register (3 samples, 0.19%)</title><rect x="299.7" y="373" width="2.3" height="15.0" fill="rgb(250,181,37)" rx="2" ry="2" />
<text  x="302.72" y="383.5" ></text>
</g>
<g >
<title>[[heap]] (17 samples, 1.09%)</title><rect x="10.0" y="453" width="12.8" height="15.0" fill="rgb(209,27,10)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.06%)</title><rect x="196.4" y="293" width="0.7" height="15.0" fill="rgb(244,155,52)" rx="2" ry="2" />
<text  x="199.36" y="303.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (2 samples, 0.13%)</title><rect x="206.9" y="373" width="1.5" height="15.0" fill="rgb(226,61,29)" rx="2" ry="2" />
<text  x="209.92" y="383.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (12 samples, 0.77%)</title><rect x="728.3" y="357" width="9.0" height="15.0" fill="rgb(243,13,15)" rx="2" ry="2" />
<text  x="731.26" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.06%)</title><rect x="155.6" y="229" width="0.8" height="15.0" fill="rgb(216,58,53)" rx="2" ry="2" />
<text  x="158.61" y="239.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1184.0" y="453" width="0.7" height="15.0" fill="rgb(221,80,49)" rx="2" ry="2" />
<text  x="1186.96" y="463.5" ></text>
</g>
<g >
<title>at::Tensor::defined (2 samples, 0.13%)</title><rect x="879.2" y="357" width="1.5" height="15.0" fill="rgb(217,156,10)" rx="2" ry="2" />
<text  x="882.16" y="367.5" ></text>
</g>
<g >
<title>c10::either&lt;torch::jit::Operator::C10Operator, torch::jit::Operator::JitOnlyOperator&gt;::fold&lt;c10::FunctionSchema const&amp;, torch::jit::Operator::schema (1 samples, 0.06%)</title><rect x="385.7" y="437" width="0.8" height="15.0" fill="rgb(206,55,19)" rx="2" ry="2" />
<text  x="388.73" y="447.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (10 samples, 0.64%)</title><rect x="855.0" y="373" width="7.6" height="15.0" fill="rgb(248,37,28)" rx="2" ry="2" />
<text  x="858.01" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt; (2 samples, 0.13%)</title><rect x="979.5" y="325" width="1.5" height="15.0" fill="rgb(243,122,33)" rx="2" ry="2" />
<text  x="982.50" y="335.5" ></text>
</g>
<g >
<title>vm_mmap (1 samples, 0.06%)</title><rect x="1168.9" y="341" width="0.7" height="15.0" fill="rgb(249,52,32)" rx="2" ry="2" />
<text  x="1171.87" y="351.5" ></text>
</g>
<g >
<title>c10::TensorType::get (1 samples, 0.06%)</title><rect x="244.6" y="293" width="0.8" height="15.0" fill="rgb(228,112,6)" rx="2" ry="2" />
<text  x="247.64" y="303.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device (12 samples, 0.77%)</title><rect x="794.7" y="373" width="9.0" height="15.0" fill="rgb(216,90,17)" rx="2" ry="2" />
<text  x="797.65" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (3 samples, 0.19%)</title><rect x="413.6" y="277" width="2.3" height="15.0" fill="rgb(253,211,26)" rx="2" ry="2" />
<text  x="416.64" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.06%)</title><rect x="308.0" y="341" width="0.8" height="15.0" fill="rgb(248,181,42)" rx="2" ry="2" />
<text  x="311.02" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator* (2 samples, 0.13%)</title><rect x="834.6" y="341" width="1.6" height="15.0" fill="rgb(227,142,51)" rx="2" ry="2" />
<text  x="837.64" y="351.5" ></text>
</g>
<g >
<title>page_remove_rmap (2 samples, 0.13%)</title><rect x="1176.4" y="277" width="1.5" height="15.0" fill="rgb(249,143,46)" rx="2" ry="2" />
<text  x="1179.42" y="287.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (3 samples, 0.19%)</title><rect x="1144.0" y="245" width="2.2" height="15.0" fill="rgb(210,21,36)" rx="2" ry="2" />
<text  x="1146.98" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;c10::Type&gt; &gt;, true&gt; &gt; &gt;::_M_allocate_buckets (1 samples, 0.06%)</title><rect x="365.4" y="293" width="0.7" height="15.0" fill="rgb(211,180,16)" rx="2" ry="2" />
<text  x="368.36" y="303.5" ></text>
</g>
<g >
<title>std::end&lt;long&gt; (3 samples, 0.19%)</title><rect x="470.2" y="373" width="2.3" height="15.0" fill="rgb(238,84,6)" rx="2" ry="2" />
<text  x="473.23" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (3 samples, 0.19%)</title><rect x="413.6" y="293" width="2.3" height="15.0" fill="rgb(207,97,12)" rx="2" ry="2" />
<text  x="416.64" y="303.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.06%)</title><rect x="181.3" y="277" width="0.7" height="15.0" fill="rgb(214,11,16)" rx="2" ry="2" />
<text  x="184.27" y="287.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (3 samples, 0.19%)</title><rect x="152.6" y="405" width="2.3" height="15.0" fill="rgb(210,148,10)" rx="2" ry="2" />
<text  x="155.60" y="415.5" ></text>
</g>
<g >
<title>torch::Library::def&lt;char const  (68 samples, 4.35%)</title><rect x="213.0" y="373" width="51.3" height="15.0" fill="rgb(222,57,42)" rx="2" ry="2" />
<text  x="215.95" y="383.5" >torch..</text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.06%)</title><rect x="169.9" y="133" width="0.8" height="15.0" fill="rgb(219,196,11)" rx="2" ry="2" />
<text  x="172.95" y="143.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (1 samples, 0.06%)</title><rect x="330.7" y="437" width="0.7" height="15.0" fill="rgb(213,46,29)" rx="2" ry="2" />
<text  x="333.65" y="447.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;c10::DeviceType const&amp;&gt; (1 samples, 0.06%)</title><rect x="484.6" y="357" width="0.7" height="15.0" fill="rgb(254,106,6)" rx="2" ry="2" />
<text  x="487.57" y="367.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;torch::autograd::Node,  (1 samples, 0.06%)</title><rect x="906.3" y="325" width="0.8" height="15.0" fill="rgb(211,158,35)" rx="2" ry="2" />
<text  x="909.32" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="328.4" y="277" width="0.7" height="15.0" fill="rgb(254,5,40)" rx="2" ry="2" />
<text  x="331.39" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, torch::autograd::AutogradMeta*, false&gt;::_M_head (1 samples, 0.06%)</title><rect x="983.3" y="277" width="0.7" height="15.0" fill="rgb(230,227,4)" rx="2" ry="2" />
<text  x="986.27" y="287.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (1 samples, 0.06%)</title><rect x="498.9" y="357" width="0.8" height="15.0" fill="rgb(208,158,40)" rx="2" ry="2" />
<text  x="501.90" y="367.5" ></text>
</g>
<g >
<title>c10::ObservedOperators::isObserved (1 samples, 0.06%)</title><rect x="182.8" y="277" width="0.7" height="15.0" fill="rgb(209,118,26)" rx="2" ry="2" />
<text  x="185.77" y="287.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.06%)</title><rect x="372.9" y="309" width="0.8" height="15.0" fill="rgb(210,7,31)" rx="2" ry="2" />
<text  x="375.90" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.06%)</title><rect x="162.4" y="325" width="0.8" height="15.0" fill="rgb(226,63,5)" rx="2" ry="2" />
<text  x="165.40" y="335.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.06%)</title><rect x="197.1" y="341" width="0.8" height="15.0" fill="rgb(225,42,15)" rx="2" ry="2" />
<text  x="200.11" y="351.5" ></text>
</g>
<g >
<title>perf (7 samples, 0.45%)</title><rect x="1184.7" y="469" width="5.3" height="15.0" fill="rgb(228,111,39)" rx="2" ry="2" />
<text  x="1187.72" y="479.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional&lt;caffe2::TypeMeta, false&gt; (3 samples, 0.19%)</title><rect x="837.7" y="373" width="2.2" height="15.0" fill="rgb(248,228,54)" rx="2" ry="2" />
<text  x="840.66" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (1 samples, 0.06%)</title><rect x="415.2" y="245" width="0.7" height="15.0" fill="rgb(208,19,5)" rx="2" ry="2" />
<text  x="418.15" y="255.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::optional (8 samples, 0.51%)</title><rect x="477.8" y="357" width="6.0" height="15.0" fill="rgb(233,51,51)" rx="2" ry="2" />
<text  x="480.77" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (1 samples, 0.06%)</title><rect x="190.3" y="293" width="0.8" height="15.0" fill="rgb(220,42,39)" rx="2" ry="2" />
<text  x="193.32" y="303.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (14 samples, 0.90%)</title><rect x="776.5" y="341" width="10.6" height="15.0" fill="rgb(226,211,11)" rx="2" ry="2" />
<text  x="779.55" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.06%)</title><rect x="372.1" y="309" width="0.8" height="15.0" fill="rgb(249,189,9)" rx="2" ry="2" />
<text  x="375.15" y="319.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator* (3 samples, 0.19%)</title><rect x="504.9" y="341" width="2.3" height="15.0" fill="rgb(228,126,2)" rx="2" ry="2" />
<text  x="507.94" y="351.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.06%)</title><rect x="181.3" y="245" width="0.7" height="15.0" fill="rgb(233,68,35)" rx="2" ry="2" />
<text  x="184.27" y="255.5" ></text>
</g>
<g >
<title>c10::TensorImpl::unique_version (1 samples, 0.06%)</title><rect x="880.7" y="357" width="0.7" height="15.0" fill="rgb(223,165,52)" rx="2" ry="2" />
<text  x="883.66" y="367.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base&lt;c10::DeviceType const&amp;, int&gt; (8 samples, 0.51%)</title><rect x="486.1" y="357" width="6.0" height="15.0" fill="rgb(213,74,22)" rx="2" ry="2" />
<text  x="489.07" y="367.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (211 samples, 13.49%)</title><rect x="563.8" y="341" width="159.2" height="15.0" fill="rgb(205,128,13)" rx="2" ry="2" />
<text  x="566.79" y="351.5" >c10::Dispatcher::cal..</text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.06%)</title><rect x="370.6" y="357" width="0.8" height="15.0" fill="rgb(225,30,34)" rx="2" ry="2" />
<text  x="373.64" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::shared_ptr (1 samples, 0.06%)</title><rect x="954.6" y="325" width="0.8" height="15.0" fill="rgb(248,134,51)" rx="2" ry="2" />
<text  x="957.60" y="335.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="307.3" y="309" width="0.7" height="15.0" fill="rgb(211,5,26)" rx="2" ry="2" />
<text  x="310.26" y="319.5" ></text>
</g>
<g >
<title>c10::GetAllocator (1 samples, 0.06%)</title><rect x="1125.1" y="213" width="0.8" height="15.0" fill="rgb(231,169,27)" rx="2" ry="2" />
<text  x="1128.12" y="223.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device (13 samples, 0.83%)</title><rect x="474.0" y="373" width="9.8" height="15.0" fill="rgb(254,160,27)" rx="2" ry="2" />
<text  x="477.00" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.06%)</title><rect x="74.1" y="437" width="0.8" height="15.0" fill="rgb(253,212,0)" rx="2" ry="2" />
<text  x="77.13" y="447.5" ></text>
</g>
<g >
<title>mprotect_fixup (1 samples, 0.06%)</title><rect x="142.8" y="293" width="0.7" height="15.0" fill="rgb(206,46,52)" rx="2" ry="2" />
<text  x="145.79" y="303.5" ></text>
</g>
<g >
<title>c10::Dispatcher::setManuallyBoxedKernelFor_ (2 samples, 0.13%)</title><rect x="315.6" y="373" width="1.5" height="15.0" fill="rgb(219,179,27)" rx="2" ry="2" />
<text  x="318.56" y="383.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::~ExcludeDispatchKeyGuard (2 samples, 0.13%)</title><rect x="557.0" y="341" width="1.5" height="15.0" fill="rgb(217,19,50)" rx="2" ry="2" />
<text  x="559.99" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (1 samples, 0.06%)</title><rect x="205.4" y="309" width="0.8" height="15.0" fill="rgb(237,34,32)" rx="2" ry="2" />
<text  x="208.41" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="280.9" y="181" width="0.7" height="15.0" fill="rgb(224,22,25)" rx="2" ry="2" />
<text  x="283.86" y="191.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="201.6" y="357" width="0.8" height="15.0" fill="rgb(251,212,21)" rx="2" ry="2" />
<text  x="204.64" y="367.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="14.5" y="437" width="0.8" height="15.0" fill="rgb(225,15,8)" rx="2" ry="2" />
<text  x="17.53" y="447.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="154.9" y="341" width="0.7" height="15.0" fill="rgb(236,58,39)" rx="2" ry="2" />
<text  x="157.86" y="351.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (1 samples, 0.06%)</title><rect x="15.3" y="437" width="0.7" height="15.0" fill="rgb(228,87,20)" rx="2" ry="2" />
<text  x="18.28" y="447.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator-- (1 samples, 0.06%)</title><rect x="861.8" y="325" width="0.8" height="15.0" fill="rgb(250,19,26)" rx="2" ry="2" />
<text  x="864.80" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (5 samples, 0.32%)</title><rect x="147.3" y="293" width="3.8" height="15.0" fill="rgb(208,150,20)" rx="2" ry="2" />
<text  x="150.31" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="359.3" y="341" width="0.8" height="15.0" fill="rgb(212,2,15)" rx="2" ry="2" />
<text  x="362.32" y="351.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (1 samples, 0.06%)</title><rect x="200.1" y="325" width="0.8" height="15.0" fill="rgb(219,98,5)" rx="2" ry="2" />
<text  x="203.13" y="335.5" ></text>
</g>
<g >
<title>c10::IValue::equals (1 samples, 0.06%)</title><rect x="298.2" y="309" width="0.8" height="15.0" fill="rgb(219,228,8)" rx="2" ry="2" />
<text  x="301.21" y="319.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.06%)</title><rect x="197.9" y="357" width="0.7" height="15.0" fill="rgb(240,132,27)" rx="2" ry="2" />
<text  x="200.86" y="367.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (6 samples, 0.38%)</title><rect x="317.8" y="357" width="4.6" height="15.0" fill="rgb(229,89,32)" rx="2" ry="2" />
<text  x="320.83" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.06%)</title><rect x="167.7" y="261" width="0.7" height="15.0" fill="rgb(243,108,21)" rx="2" ry="2" />
<text  x="170.69" y="271.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_CPUType.cpp (16 samples, 1.02%)</title><rect x="161.6" y="405" width="12.1" height="15.0" fill="rgb(247,164,8)" rx="2" ry="2" />
<text  x="164.65" y="415.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (4 samples, 0.26%)</title><rect x="274.8" y="389" width="3.0" height="15.0" fill="rgb(216,228,25)" rx="2" ry="2" />
<text  x="277.82" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="206.2" y="181" width="0.7" height="15.0" fill="rgb(205,18,10)" rx="2" ry="2" />
<text  x="209.16" y="191.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (3 samples, 0.19%)</title><rect x="173.7" y="341" width="2.3" height="15.0" fill="rgb(245,33,1)" rx="2" ry="2" />
<text  x="176.72" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (2 samples, 0.13%)</title><rect x="302.7" y="357" width="1.5" height="15.0" fill="rgb(220,44,9)" rx="2" ry="2" />
<text  x="305.74" y="367.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.06%)</title><rect x="194.8" y="341" width="0.8" height="15.0" fill="rgb(226,203,44)" rx="2" ry="2" />
<text  x="197.85" y="351.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.06%)</title><rect x="466.5" y="341" width="0.7" height="15.0" fill="rgb(239,17,1)" rx="2" ry="2" />
<text  x="469.46" y="351.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.06%)</title><rect x="419.7" y="277" width="0.7" height="15.0" fill="rgb(243,33,18)" rx="2" ry="2" />
<text  x="422.68" y="287.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.06%)</title><rect x="195.6" y="309" width="0.8" height="15.0" fill="rgb(229,215,18)" rx="2" ry="2" />
<text  x="198.60" y="319.5" ></text>
</g>
<g >
<title>c10::isFloatingType (1 samples, 0.06%)</title><rect x="396.3" y="437" width="0.7" height="15.0" fill="rgb(253,170,19)" rx="2" ry="2" />
<text  x="399.29" y="447.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (8 samples, 0.51%)</title><rect x="1118.3" y="149" width="6.1" height="15.0" fill="rgb(241,84,10)" rx="2" ry="2" />
<text  x="1121.32" y="159.5" ></text>
</g>
<g >
<title>__default_morecore (1 samples, 0.06%)</title><rect x="228.0" y="245" width="0.8" height="15.0" fill="rgb(211,35,44)" rx="2" ry="2" />
<text  x="231.04" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;, std::allocator&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; &gt;::_M_realloc_insert&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; (1 samples, 0.06%)</title><rect x="274.8" y="325" width="0.8" height="15.0" fill="rgb(228,78,27)" rx="2" ry="2" />
<text  x="277.82" y="335.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_dtype (3 samples, 0.19%)</title><rect x="829.4" y="357" width="2.2" height="15.0" fill="rgb(254,122,53)" rx="2" ry="2" />
<text  x="832.36" y="367.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (53 samples, 3.39%)</title><rect x="224.3" y="341" width="40.0" height="15.0" fill="rgb(206,41,52)" rx="2" ry="2" />
<text  x="227.27" y="351.5" >tor..</text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (2 samples, 0.13%)</title><rect x="827.9" y="357" width="1.5" height="15.0" fill="rgb(230,206,23)" rx="2" ry="2" />
<text  x="830.85" y="367.5" ></text>
</g>
<g >
<title>get_nprocs_conf (1 samples, 0.06%)</title><rect x="157.9" y="357" width="0.7" height="15.0" fill="rgb(206,146,11)" rx="2" ry="2" />
<text  x="160.88" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (1 samples, 0.06%)</title><rect x="188.1" y="293" width="0.7" height="15.0" fill="rgb(217,166,8)" rx="2" ry="2" />
<text  x="191.06" y="303.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (1 samples, 0.06%)</title><rect x="209.2" y="373" width="0.7" height="15.0" fill="rgb(219,176,8)" rx="2" ry="2" />
<text  x="212.18" y="383.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (1 samples, 0.06%)</title><rect x="946.3" y="261" width="0.8" height="15.0" fill="rgb(231,176,35)" rx="2" ry="2" />
<text  x="949.30" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.32%)</title><rect x="147.3" y="309" width="3.8" height="15.0" fill="rgb(220,10,2)" rx="2" ry="2" />
<text  x="150.31" y="319.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (1 samples, 0.06%)</title><rect x="1177.9" y="229" width="0.8" height="15.0" fill="rgb(238,53,40)" rx="2" ry="2" />
<text  x="1180.93" y="239.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="327.6" y="229" width="0.8" height="15.0" fill="rgb(244,218,13)" rx="2" ry="2" />
<text  x="330.63" y="239.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (4 samples, 0.26%)</title><rect x="688.3" y="229" width="3.0" height="15.0" fill="rgb(233,197,21)" rx="2" ry="2" />
<text  x="691.27" y="239.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MergePartialFromImpl&lt;false&gt; (1 samples, 0.06%)</title><rect x="327.6" y="341" width="0.8" height="15.0" fill="rgb(214,99,44)" rx="2" ry="2" />
<text  x="330.63" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="216.0" y="181" width="0.7" height="15.0" fill="rgb(234,194,24)" rx="2" ry="2" />
<text  x="218.97" y="191.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (2 samples, 0.13%)</title><rect x="280.9" y="341" width="1.5" height="15.0" fill="rgb(211,43,47)" rx="2" ry="2" />
<text  x="283.86" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (5 samples, 0.32%)</title><rect x="858.8" y="341" width="3.8" height="15.0" fill="rgb(224,93,29)" rx="2" ry="2" />
<text  x="861.79" y="351.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="89.2" y="437" width="0.8" height="15.0" fill="rgb(218,21,45)" rx="2" ry="2" />
<text  x="92.22" y="447.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="265.0" y="357" width="0.8" height="15.0" fill="rgb(239,88,49)" rx="2" ry="2" />
<text  x="268.01" y="367.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.13%)</title><rect x="1101.0" y="165" width="1.5" height="15.0" fill="rgb(252,171,33)" rx="2" ry="2" />
<text  x="1103.97" y="175.5" ></text>
</g>
<g >
<title>c10::detail::getTypePtr_&lt;at::Tensor&gt;::call (1 samples, 0.06%)</title><rect x="283.1" y="293" width="0.8" height="15.0" fill="rgb(216,76,12)" rx="2" ry="2" />
<text  x="286.12" y="303.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::shared_ptr (1 samples, 0.06%)</title><rect x="922.9" y="325" width="0.8" height="15.0" fill="rgb(213,77,9)" rx="2" ry="2" />
<text  x="925.92" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::get_deleter (7 samples, 0.45%)</title><rect x="967.4" y="341" width="5.3" height="15.0" fill="rgb(213,13,0)" rx="2" ry="2" />
<text  x="970.43" y="351.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (2 samples, 0.13%)</title><rect x="222.0" y="341" width="1.5" height="15.0" fill="rgb(212,226,6)" rx="2" ry="2" />
<text  x="225.01" y="351.5" ></text>
</g>
<g >
<title>at::native::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_quantized_QuantizedCPU (1 samples, 0.06%)</title><rect x="291.4" y="373" width="0.8" height="15.0" fill="rgb(225,51,16)" rx="2" ry="2" />
<text  x="294.42" y="383.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_device (6 samples, 0.38%)</title><rect x="795.4" y="357" width="4.5" height="15.0" fill="rgb(211,57,47)" rx="2" ry="2" />
<text  x="798.41" y="367.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::type_index, std::hash&lt;std::type_index&gt;, ska::detailv3::KeyOrValueHasher&lt;std::type_index, std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::hash&lt;std::type_index&gt; &gt;, std::equal_to&lt;std::type_index&gt;, ska::detailv3::KeyOrValueEquality&lt;std::type_index, std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::equal_to&lt;std::type_index&gt; &gt;, std::allocator&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt; &gt; &gt; &gt;::emplace_new_key&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt; const&amp;&gt; (1 samples, 0.06%)</title><rect x="291.4" y="277" width="0.8" height="15.0" fill="rgb(212,14,24)" rx="2" ry="2" />
<text  x="294.42" y="287.5" ></text>
</g>
<g >
<title>search_binary_handler (2 samples, 0.13%)</title><rect x="1168.9" y="389" width="1.5" height="15.0" fill="rgb(213,43,28)" rx="2" ry="2" />
<text  x="1171.87" y="399.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.06%)</title><rect x="419.7" y="309" width="0.7" height="15.0" fill="rgb(223,4,36)" rx="2" ry="2" />
<text  x="422.68" y="319.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.06%)</title><rect x="326.9" y="181" width="0.7" height="15.0" fill="rgb(236,33,26)" rx="2" ry="2" />
<text  x="329.88" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_insert&lt;c10::Symbol const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;c10::Symbol, true&gt; &gt; &gt; &gt; (2 samples, 0.13%)</title><rect x="365.4" y="325" width="1.5" height="15.0" fill="rgb(247,19,53)" rx="2" ry="2" />
<text  x="368.36" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="281.6" y="245" width="0.8" height="15.0" fill="rgb(252,119,52)" rx="2" ry="2" />
<text  x="284.61" y="255.5" ></text>
</g>
<g >
<title>__pthread_initialize_minimal_internal (1 samples, 0.06%)</title><rect x="407.6" y="437" width="0.8" height="15.0" fill="rgb(254,2,46)" rx="2" ry="2" />
<text  x="410.61" y="447.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.06%)</title><rect x="263.5" y="277" width="0.8" height="15.0" fill="rgb(249,7,41)" rx="2" ry="2" />
<text  x="266.50" y="287.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::Device&gt;::constexpr_storage_t (1 samples, 0.06%)</title><rect x="800.7" y="325" width="0.7" height="15.0" fill="rgb(232,149,31)" rx="2" ry="2" />
<text  x="803.69" y="335.5" ></text>
</g>
<g >
<title>__schedule (7 samples, 0.45%)</title><rect x="337.4" y="133" width="5.3" height="15.0" fill="rgb(223,10,11)" rx="2" ry="2" />
<text  x="340.44" y="143.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.06%)</title><rect x="169.9" y="181" width="0.8" height="15.0" fill="rgb(232,65,17)" rx="2" ry="2" />
<text  x="172.95" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;, std::allocator&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; &gt;::_M_realloc_insert&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; (1 samples, 0.06%)</title><rect x="277.1" y="293" width="0.7" height="15.0" fill="rgb(244,199,46)" rx="2" ry="2" />
<text  x="280.08" y="303.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="412.1" y="101" width="0.8" height="15.0" fill="rgb(206,132,43)" rx="2" ry="2" />
<text  x="415.14" y="111.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (5 samples, 0.32%)</title><rect x="724.5" y="341" width="3.8" height="15.0" fill="rgb(243,212,28)" rx="2" ry="2" />
<text  x="727.49" y="351.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="281.6" y="261" width="0.8" height="15.0" fill="rgb(210,71,23)" rx="2" ry="2" />
<text  x="284.61" y="271.5" ></text>
</g>
<g >
<title>c10::detail::getTypePtr_&lt;long&gt;::call (1 samples, 0.06%)</title><rect x="163.2" y="325" width="0.7" height="15.0" fill="rgb(233,67,32)" rx="2" ry="2" />
<text  x="166.16" y="335.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (54 samples, 3.45%)</title><rect x="223.5" y="357" width="40.8" height="15.0" fill="rgb(221,160,37)" rx="2" ry="2" />
<text  x="226.52" y="367.5" >tor..</text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;c10::AutogradMetaInterface&gt;, true&gt;::_Head_base&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.06%)</title><rect x="965.9" y="277" width="0.8" height="15.0" fill="rgb(239,70,16)" rx="2" ry="2" />
<text  x="968.92" y="287.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="307.3" y="325" width="0.7" height="15.0" fill="rgb(211,94,41)" rx="2" ry="2" />
<text  x="310.26" y="335.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::type_index, std::hash&lt;std::type_index&gt;, ska::detailv3::KeyOrValueHasher&lt;std::type_index, std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::hash&lt;std::type_index&gt; &gt;, std::equal_to&lt;std::type_index&gt;, ska::detailv3::KeyOrValueEquality&lt;std::type_index, std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::equal_to&lt;std::type_index&gt; &gt;, std::allocator&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt; &gt; &gt; &gt;::rehash (1 samples, 0.06%)</title><rect x="292.2" y="309" width="0.7" height="15.0" fill="rgb(241,132,5)" rx="2" ry="2" />
<text  x="295.17" y="319.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.06%)</title><rect x="185.8" y="309" width="0.7" height="15.0" fill="rgb(253,207,54)" rx="2" ry="2" />
<text  x="188.79" y="319.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.06%)</title><rect x="148.8" y="197" width="0.8" height="15.0" fill="rgb(222,80,8)" rx="2" ry="2" />
<text  x="151.82" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.06%)</title><rect x="369.9" y="357" width="0.7" height="15.0" fill="rgb(243,89,39)" rx="2" ry="2" />
<text  x="372.88" y="367.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.06%)</title><rect x="252.2" y="229" width="0.7" height="15.0" fill="rgb(248,139,11)" rx="2" ry="2" />
<text  x="255.19" y="239.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="195.6" y="213" width="0.8" height="15.0" fill="rgb(247,85,45)" rx="2" ry="2" />
<text  x="198.60" y="223.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="262.0" y="309" width="0.7" height="15.0" fill="rgb(235,185,24)" rx="2" ry="2" />
<text  x="264.99" y="319.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="449.9" y="261" width="0.7" height="15.0" fill="rgb(230,74,36)" rx="2" ry="2" />
<text  x="452.86" y="271.5" ></text>
</g>
<g >
<title>std::mutex::mutex (1 samples, 0.06%)</title><rect x="908.6" y="325" width="0.7" height="15.0" fill="rgb(247,52,41)" rx="2" ry="2" />
<text  x="911.58" y="335.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (2 samples, 0.13%)</title><rect x="188.1" y="373" width="1.5" height="15.0" fill="rgb(205,125,28)" rx="2" ry="2" />
<text  x="191.06" y="383.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="300.5" y="165" width="0.7" height="15.0" fill="rgb(217,159,22)" rx="2" ry="2" />
<text  x="303.47" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.06%)</title><rect x="189.6" y="309" width="0.7" height="15.0" fill="rgb(221,103,6)" rx="2" ry="2" />
<text  x="192.57" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_rehash (1 samples, 0.06%)</title><rect x="365.4" y="309" width="0.7" height="15.0" fill="rgb(240,127,40)" rx="2" ry="2" />
<text  x="368.36" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.13%)</title><rect x="143.5" y="309" width="1.6" height="15.0" fill="rgb(228,200,36)" rx="2" ry="2" />
<text  x="146.54" y="319.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (2 samples, 0.13%)</title><rect x="206.9" y="309" width="1.5" height="15.0" fill="rgb(236,61,22)" rx="2" ry="2" />
<text  x="209.92" y="319.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.19%)</title><rect x="228.8" y="245" width="2.3" height="15.0" fill="rgb(250,217,3)" rx="2" ry="2" />
<text  x="231.80" y="255.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.06%)</title><rect x="210.7" y="341" width="0.7" height="15.0" fill="rgb(243,188,6)" rx="2" ry="2" />
<text  x="213.69" y="351.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;torch::autograd::Node,  (1 samples, 0.06%)</title><rect x="775.8" y="277" width="0.7" height="15.0" fill="rgb(214,27,14)" rx="2" ry="2" />
<text  x="778.79" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::count (1 samples, 0.06%)</title><rect x="215.2" y="277" width="0.8" height="15.0" fill="rgb(242,127,23)" rx="2" ry="2" />
<text  x="218.22" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="385.0" y="325" width="0.7" height="15.0" fill="rgb(207,78,49)" rx="2" ry="2" />
<text  x="387.97" y="335.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.06%)</title><rect x="264.3" y="341" width="0.7" height="15.0" fill="rgb(214,79,38)" rx="2" ry="2" />
<text  x="267.26" y="351.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (1 samples, 0.06%)</title><rect x="170.7" y="341" width="0.8" height="15.0" fill="rgb(208,151,1)" rx="2" ry="2" />
<text  x="173.70" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (2 samples, 0.13%)</title><rect x="268.0" y="341" width="1.5" height="15.0" fill="rgb(242,202,38)" rx="2" ry="2" />
<text  x="271.03" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="436.3" y="373" width="0.7" height="15.0" fill="rgb(238,50,16)" rx="2" ry="2" />
<text  x="439.28" y="383.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_allow_tensor_metadata_change (2 samples, 0.13%)</title><rect x="529.1" y="357" width="1.5" height="15.0" fill="rgb(214,107,22)" rx="2" ry="2" />
<text  x="532.08" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.06%)</title><rect x="360.1" y="293" width="0.7" height="15.0" fill="rgb(234,143,53)" rx="2" ry="2" />
<text  x="363.08" y="303.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.06%)</title><rect x="360.8" y="325" width="0.8" height="15.0" fill="rgb(229,41,6)" rx="2" ry="2" />
<text  x="363.83" y="335.5" ></text>
</g>
<g >
<title>c10::KernelFunction::makeFromUnboxedRuntimeFunction&lt;false, std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.06%)</title><rect x="274.1" y="357" width="0.7" height="15.0" fill="rgb(216,0,17)" rx="2" ry="2" />
<text  x="277.07" y="367.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="366.9" y="309" width="0.7" height="15.0" fill="rgb(225,10,26)" rx="2" ry="2" />
<text  x="369.87" y="319.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.06%)</title><rect x="271.8" y="357" width="0.8" height="15.0" fill="rgb(227,28,54)" rx="2" ry="2" />
<text  x="274.80" y="367.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.06%)</title><rect x="412.1" y="245" width="0.8" height="15.0" fill="rgb(208,161,43)" rx="2" ry="2" />
<text  x="415.14" y="255.5" ></text>
</g>
<g >
<title>google::protobuf::EncodedDescriptorDatabase::Add (1 samples, 0.06%)</title><rect x="327.6" y="373" width="0.8" height="15.0" fill="rgb(215,145,40)" rx="2" ry="2" />
<text  x="330.63" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (7 samples, 0.45%)</title><rect x="732.0" y="341" width="5.3" height="15.0" fill="rgb(214,185,46)" rx="2" ry="2" />
<text  x="735.03" y="351.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.06%)</title><rect x="66.6" y="437" width="0.7" height="15.0" fill="rgb(228,56,29)" rx="2" ry="2" />
<text  x="69.59" y="447.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::New (4 samples, 0.26%)</title><rect x="1099.5" y="213" width="3.0" height="15.0" fill="rgb(211,94,50)" rx="2" ry="2" />
<text  x="1102.46" y="223.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::size (2 samples, 0.13%)</title><rect x="471.0" y="341" width="1.5" height="15.0" fill="rgb(232,213,9)" rx="2" ry="2" />
<text  x="473.98" y="351.5" ></text>
</g>
<g >
<title>c10::isFloatingType (2 samples, 0.13%)</title><rect x="953.1" y="293" width="1.5" height="15.0" fill="rgb(243,9,53)" rx="2" ry="2" />
<text  x="956.09" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_Tuple_impl (1 samples, 0.06%)</title><rect x="547.2" y="309" width="0.7" height="15.0" fill="rgb(205,75,44)" rx="2" ry="2" />
<text  x="550.19" y="319.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.06%)</title><rect x="277.1" y="325" width="0.7" height="15.0" fill="rgb(242,153,36)" rx="2" ry="2" />
<text  x="280.08" y="335.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_init_aten (10 samples, 0.64%)</title><rect x="335.2" y="389" width="7.5" height="15.0" fill="rgb(220,15,27)" rx="2" ry="2" />
<text  x="338.18" y="399.5" ></text>
</g>
<g >
<title>c10::TensorOptions::TensorOptions (10 samples, 0.64%)</title><rect x="821.8" y="373" width="7.6" height="15.0" fill="rgb(210,36,38)" rx="2" ry="2" />
<text  x="824.82" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional&lt;bool, false&gt; (4 samples, 0.26%)</title><rect x="846.0" y="389" width="3.0" height="15.0" fill="rgb(227,60,49)" rx="2" ry="2" />
<text  x="848.96" y="399.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (3 samples, 0.19%)</title><rect x="404.6" y="421" width="2.3" height="15.0" fill="rgb(225,21,24)" rx="2" ry="2" />
<text  x="407.59" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.45%)</title><rect x="1184.7" y="437" width="5.3" height="15.0" fill="rgb(206,18,3)" rx="2" ry="2" />
<text  x="1187.72" y="447.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="308.0" y="229" width="0.8" height="15.0" fill="rgb(238,26,21)" rx="2" ry="2" />
<text  x="311.02" y="239.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;torch::autograd::Node&gt;::weak_ptr (3 samples, 0.19%)</title><rect x="931.2" y="325" width="2.3" height="15.0" fill="rgb(237,19,19)" rx="2" ry="2" />
<text  x="934.21" y="335.5" ></text>
</g>
<g >
<title>c10::TensorImpl::release_resources (2 samples, 0.13%)</title><rect x="39.4" y="437" width="1.5" height="15.0" fill="rgb(239,145,47)" rx="2" ry="2" />
<text  x="42.42" y="447.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_library.cpp (4 samples, 0.26%)</title><rect x="287.6" y="405" width="3.1" height="15.0" fill="rgb(243,225,22)" rx="2" ry="2" />
<text  x="290.65" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.06%)</title><rect x="295.2" y="389" width="0.7" height="15.0" fill="rgb(219,151,31)" rx="2" ry="2" />
<text  x="298.19" y="399.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="155.6" y="325" width="0.8" height="15.0" fill="rgb(214,10,26)" rx="2" ry="2" />
<text  x="158.61" y="335.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (7 samples, 0.45%)</title><rect x="337.4" y="101" width="5.3" height="15.0" fill="rgb(213,30,34)" rx="2" ry="2" />
<text  x="340.44" y="111.5" ></text>
</g>
<g >
<title>c10::Device::validate (3 samples, 0.19%)</title><rect x="708.6" y="245" width="2.3" height="15.0" fill="rgb(241,211,1)" rx="2" ry="2" />
<text  x="711.64" y="255.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.06%)</title><rect x="265.8" y="325" width="0.7" height="15.0" fill="rgb(214,192,4)" rx="2" ry="2" />
<text  x="268.77" y="335.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.06%)</title><rect x="291.4" y="341" width="0.8" height="15.0" fill="rgb(221,57,1)" rx="2" ry="2" />
<text  x="294.42" y="351.5" ></text>
</g>
<g >
<title>c10::detail::getTypePtr_&lt;c10::intrusive_ptr&lt;ConvPackedParamsBase&lt;2&gt;, c10::detail::intrusive_target_default_null_type&lt;ConvPackedParamsBase&lt;2&gt; &gt; &gt; &gt;::call (1 samples, 0.06%)</title><rect x="292.2" y="341" width="0.7" height="15.0" fill="rgb(249,211,14)" rx="2" ry="2" />
<text  x="295.17" y="351.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.06%)</title><rect x="148.8" y="245" width="0.8" height="15.0" fill="rgb(248,205,32)" rx="2" ry="2" />
<text  x="151.82" y="255.5" ></text>
</g>
<g >
<title>std::swap&lt;torch::autograd::Node*&gt; (2 samples, 0.13%)</title><rect x="920.7" y="277" width="1.5" height="15.0" fill="rgb(218,146,25)" rx="2" ry="2" />
<text  x="923.65" y="287.5" ></text>
</g>
<g >
<title>c10::IntType::operator== (1 samples, 0.06%)</title><rect x="211.4" y="293" width="0.8" height="15.0" fill="rgb(245,8,28)" rx="2" ry="2" />
<text  x="214.45" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="407.6" y="341" width="0.8" height="15.0" fill="rgb(236,43,54)" rx="2" ry="2" />
<text  x="410.61" y="351.5" ></text>
</g>
<g >
<title>std::move&lt;torch::autograd::Node*&amp;&gt; (1 samples, 0.06%)</title><rect x="22.1" y="437" width="0.7" height="15.0" fill="rgb(234,125,33)" rx="2" ry="2" />
<text  x="25.07" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_insert&lt;c10::Symbol const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;c10::Symbol, true&gt; &gt; &gt; &gt; (1 samples, 0.06%)</title><rect x="237.9" y="277" width="0.7" height="15.0" fill="rgb(222,152,49)" rx="2" ry="2" />
<text  x="240.85" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_M_ptr (1 samples, 0.06%)</title><rect x="543.4" y="357" width="0.8" height="15.0" fill="rgb(213,90,38)" rx="2" ry="2" />
<text  x="546.41" y="367.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::~VersionCounter (1 samples, 0.06%)</title><rect x="45.5" y="437" width="0.7" height="15.0" fill="rgb(239,163,25)" rx="2" ry="2" />
<text  x="48.46" y="447.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.06%)</title><rect x="194.1" y="341" width="0.7" height="15.0" fill="rgb(223,131,37)" rx="2" ry="2" />
<text  x="197.09" y="351.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.06%)</title><rect x="262.0" y="277" width="0.7" height="15.0" fill="rgb(242,29,36)" rx="2" ry="2" />
<text  x="264.99" y="287.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (6 samples, 0.38%)</title><rect x="182.8" y="357" width="4.5" height="15.0" fill="rgb(244,171,28)" rx="2" ry="2" />
<text  x="185.77" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="203.1" y="277" width="0.8" height="15.0" fill="rgb(228,42,33)" rx="2" ry="2" />
<text  x="206.15" y="287.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOp (1 samples, 0.06%)</title><rect x="203.9" y="309" width="0.8" height="15.0" fill="rgb(235,112,3)" rx="2" ry="2" />
<text  x="206.90" y="319.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="273.3" y="357" width="0.8" height="15.0" fill="rgb(241,71,14)" rx="2" ry="2" />
<text  x="276.31" y="367.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (1 samples, 0.06%)</title><rect x="865.6" y="373" width="0.7" height="15.0" fill="rgb(226,81,31)" rx="2" ry="2" />
<text  x="868.58" y="383.5" ></text>
</g>
<g >
<title>[example-app] (2 samples, 0.13%)</title><rect x="394.8" y="421" width="1.5" height="15.0" fill="rgb(245,87,10)" rx="2" ry="2" />
<text  x="397.78" y="431.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (1 samples, 0.06%)</title><rect x="409.1" y="325" width="0.8" height="15.0" fill="rgb(236,147,52)" rx="2" ry="2" />
<text  x="412.12" y="335.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (5 samples, 0.32%)</title><rect x="202.4" y="389" width="3.8" height="15.0" fill="rgb(205,97,39)" rx="2" ry="2" />
<text  x="205.39" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;, std::allocator&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; &gt;::_M_realloc_insert&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; (1 samples, 0.06%)</title><rect x="195.6" y="293" width="0.8" height="15.0" fill="rgb(254,83,13)" rx="2" ry="2" />
<text  x="198.60" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="371.4" y="309" width="0.7" height="15.0" fill="rgb(214,26,17)" rx="2" ry="2" />
<text  x="374.39" y="319.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="308.8" y="341" width="0.7" height="15.0" fill="rgb(244,218,37)" rx="2" ry="2" />
<text  x="311.77" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="169.9" y="213" width="0.8" height="15.0" fill="rgb(248,169,16)" rx="2" ry="2" />
<text  x="172.95" y="223.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.06%)</title><rect x="658.8" y="213" width="0.8" height="15.0" fill="rgb(208,56,17)" rx="2" ry="2" />
<text  x="661.85" y="223.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::load (3 samples, 0.19%)</title><rect x="464.2" y="277" width="2.3" height="15.0" fill="rgb(232,216,15)" rx="2" ry="2" />
<text  x="467.19" y="287.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="275.6" y="357" width="0.7" height="15.0" fill="rgb(226,153,23)" rx="2" ry="2" />
<text  x="278.58" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="213.0" y="357" width="0.7" height="15.0" fill="rgb(246,49,36)" rx="2" ry="2" />
<text  x="215.95" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.13%)</title><rect x="74.9" y="437" width="1.5" height="15.0" fill="rgb(242,99,6)" rx="2" ry="2" />
<text  x="77.88" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="178.2" y="309" width="0.8" height="15.0" fill="rgb(215,49,9)" rx="2" ry="2" />
<text  x="181.25" y="319.5" ></text>
</g>
<g >
<title>std::end&lt;long&gt; (2 samples, 0.13%)</title><rect x="791.6" y="373" width="1.5" height="15.0" fill="rgb(235,54,17)" rx="2" ry="2" />
<text  x="794.64" y="383.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (4 samples, 0.26%)</title><rect x="182.8" y="309" width="3.0" height="15.0" fill="rgb(245,16,21)" rx="2" ry="2" />
<text  x="185.77" y="319.5" ></text>
</g>
<g >
<title>at::empty (225 samples, 14.39%)</title><rect x="558.5" y="357" width="169.8" height="15.0" fill="rgb(221,72,50)" rx="2" ry="2" />
<text  x="561.50" y="367.5" >at::empty</text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (2 samples, 0.13%)</title><rect x="366.9" y="373" width="1.5" height="15.0" fill="rgb(225,1,18)" rx="2" ry="2" />
<text  x="369.87" y="383.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::emplace_new_key&lt;c10::DispatchKey const&amp;, ska::flat_hash_map&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt;, std::hash&lt;c10::DispatchKey&gt;, std::equal_to&lt;c10::DispatchKey&gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt;::convertible_to_value&gt; (1 samples, 0.06%)</title><rect x="67.3" y="437" width="0.8" height="15.0" fill="rgb(228,113,38)" rx="2" ry="2" />
<text  x="70.34" y="447.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (3 samples, 0.19%)</title><rect x="288.4" y="325" width="2.3" height="15.0" fill="rgb(254,151,16)" rx="2" ry="2" />
<text  x="291.40" y="335.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.06%)</title><rect x="386.5" y="437" width="0.7" height="15.0" fill="rgb(249,65,54)" rx="2" ry="2" />
<text  x="389.48" y="447.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="168.4" y="133" width="0.8" height="15.0" fill="rgb(236,60,34)" rx="2" ry="2" />
<text  x="171.44" y="143.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.06%)</title><rect x="230.3" y="101" width="0.8" height="15.0" fill="rgb(243,140,28)" rx="2" ry="2" />
<text  x="233.31" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_base (6 samples, 0.38%)</title><rect x="926.7" y="309" width="4.5" height="15.0" fill="rgb(252,129,53)" rx="2" ry="2" />
<text  x="929.69" y="319.5" ></text>
</g>
<g >
<title>c10::Device::Device (1 samples, 0.06%)</title><rect x="821.1" y="373" width="0.7" height="15.0" fill="rgb(245,210,27)" rx="2" ry="2" />
<text  x="824.06" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="329.9" y="277" width="0.8" height="15.0" fill="rgb(221,88,36)" rx="2" ry="2" />
<text  x="332.90" y="287.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.06%)</title><rect x="281.6" y="133" width="0.8" height="15.0" fill="rgb(239,15,18)" rx="2" ry="2" />
<text  x="284.61" y="143.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.06%)</title><rect x="142.8" y="245" width="0.7" height="15.0" fill="rgb(238,100,44)" rx="2" ry="2" />
<text  x="145.79" y="255.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="329.9" y="293" width="0.8" height="15.0" fill="rgb(212,106,19)" rx="2" ry="2" />
<text  x="332.90" y="303.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (3 samples, 0.19%)</title><rect x="218.2" y="309" width="2.3" height="15.0" fill="rgb(220,194,23)" rx="2" ry="2" />
<text  x="221.24" y="319.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (1 samples, 0.06%)</title><rect x="1164.3" y="341" width="0.8" height="15.0" fill="rgb(212,150,18)" rx="2" ry="2" />
<text  x="1167.35" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.06%)</title><rect x="272.6" y="357" width="0.7" height="15.0" fill="rgb(245,134,51)" rx="2" ry="2" />
<text  x="275.56" y="367.5" ></text>
</g>
<g >
<title>at::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_BackendSelect (2 samples, 0.13%)</title><rect x="158.6" y="389" width="1.5" height="15.0" fill="rgb(243,106,38)" rx="2" ry="2" />
<text  x="161.63" y="399.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::set_requires_grad (28 samples, 1.79%)</title><rect x="933.5" y="325" width="21.1" height="15.0" fill="rgb(206,176,37)" rx="2" ry="2" />
<text  x="936.48" y="335.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_init_quantized (4 samples, 0.26%)</title><rect x="287.6" y="373" width="3.1" height="15.0" fill="rgb(212,194,16)" rx="2" ry="2" />
<text  x="290.65" y="383.5" ></text>
</g>
<g >
<title>_start (1,007 samples, 64.39%)</title><rect x="408.4" y="453" width="759.7" height="15.0" fill="rgb(207,130,6)" rx="2" ry="2" />
<text  x="411.36" y="463.5" >_start</text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.06%)</title><rect x="367.6" y="341" width="0.8" height="15.0" fill="rgb(237,65,18)" rx="2" ry="2" />
<text  x="370.62" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.06%)</title><rect x="364.6" y="325" width="0.8" height="15.0" fill="rgb(243,133,15)" rx="2" ry="2" />
<text  x="367.60" y="335.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.06%)</title><rect x="167.7" y="245" width="0.7" height="15.0" fill="rgb(211,36,14)" rx="2" ry="2" />
<text  x="170.69" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="411.4" y="245" width="0.7" height="15.0" fill="rgb(218,89,37)" rx="2" ry="2" />
<text  x="414.38" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.19%)</title><rect x="228.8" y="197" width="2.3" height="15.0" fill="rgb(253,143,10)" rx="2" ry="2" />
<text  x="231.80" y="207.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_dtype (1 samples, 0.06%)</title><rect x="836.9" y="373" width="0.8" height="15.0" fill="rgb(212,92,0)" rx="2" ry="2" />
<text  x="839.91" y="383.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.19%)</title><rect x="242.4" y="245" width="2.2" height="15.0" fill="rgb(218,140,49)" rx="2" ry="2" />
<text  x="245.38" y="255.5" ></text>
</g>
<g >
<title>posix_memalign (28 samples, 1.79%)</title><rect x="1103.2" y="197" width="21.2" height="15.0" fill="rgb(206,72,27)" rx="2" ry="2" />
<text  x="1106.24" y="207.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.06%)</title><rect x="142.8" y="261" width="0.7" height="15.0" fill="rgb(218,223,50)" rx="2" ry="2" />
<text  x="145.79" y="271.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor&amp;  (1 samples, 0.06%)</title><rect x="200.1" y="373" width="0.8" height="15.0" fill="rgb(205,170,8)" rx="2" ry="2" />
<text  x="203.13" y="383.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (3 samples, 0.19%)</title><rect x="28.9" y="437" width="2.2" height="15.0" fill="rgb(252,134,33)" rx="2" ry="2" />
<text  x="31.86" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="412.1" y="293" width="0.8" height="15.0" fill="rgb(236,41,26)" rx="2" ry="2" />
<text  x="415.14" y="303.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::~RegisterOperators (1 samples, 0.06%)</title><rect x="412.9" y="341" width="0.7" height="15.0" fill="rgb(241,88,20)" rx="2" ry="2" />
<text  x="415.89" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.06%)</title><rect x="246.2" y="277" width="0.7" height="15.0" fill="rgb(211,68,23)" rx="2" ry="2" />
<text  x="249.15" y="287.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.06%)</title><rect x="1168.9" y="309" width="0.7" height="15.0" fill="rgb(224,114,48)" rx="2" ry="2" />
<text  x="1171.87" y="319.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (307 samples, 19.63%)</title><rect x="99.0" y="453" width="231.7" height="15.0" fill="rgb(205,59,36)" rx="2" ry="2" />
<text  x="102.03" y="463.5" >[ld-2.31.so]</text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (1 samples, 0.06%)</title><rect x="188.1" y="325" width="0.7" height="15.0" fill="rgb(249,72,27)" rx="2" ry="2" />
<text  x="191.06" y="335.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="228.0" y="293" width="0.8" height="15.0" fill="rgb(246,77,25)" rx="2" ry="2" />
<text  x="231.04" y="303.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.32%)</title><rect x="1180.2" y="453" width="3.8" height="15.0" fill="rgb(209,20,37)" rx="2" ry="2" />
<text  x="1183.19" y="463.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (1 samples, 0.06%)</title><rect x="157.1" y="405" width="0.8" height="15.0" fill="rgb(254,165,39)" rx="2" ry="2" />
<text  x="160.12" y="415.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::makeBitsetForDispatchArgs (1 samples, 0.06%)</title><rect x="217.5" y="309" width="0.7" height="15.0" fill="rgb(239,152,4)" rx="2" ry="2" />
<text  x="220.48" y="319.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.13%)</title><rect x="326.1" y="325" width="1.5" height="15.0" fill="rgb(249,73,11)" rx="2" ry="2" />
<text  x="329.13" y="335.5" ></text>
</g>
<g >
<title>torch::CppFunction::makeUnboxedOnly&lt;at::Tensor&amp;  (1 samples, 0.06%)</title><rect x="164.7" y="373" width="0.7" height="15.0" fill="rgb(238,226,3)" rx="2" ry="2" />
<text  x="167.67" y="383.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (149 samples, 9.53%)</title><rect x="1033.8" y="293" width="112.4" height="15.0" fill="rgb(218,19,39)" rx="2" ry="2" />
<text  x="1036.82" y="303.5" >c10::Dispatch..</text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="271.0" y="277" width="0.8" height="15.0" fill="rgb(219,185,51)" rx="2" ry="2" />
<text  x="274.05" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::~unique_ptr (8 samples, 0.51%)</title><rect x="548.7" y="357" width="6.0" height="15.0" fill="rgb(244,146,30)" rx="2" ry="2" />
<text  x="551.70" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="142.0" y="277" width="0.8" height="15.0" fill="rgb(253,99,46)" rx="2" ry="2" />
<text  x="145.03" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.06%)</title><rect x="219.7" y="261" width="0.8" height="15.0" fill="rgb(225,105,14)" rx="2" ry="2" />
<text  x="222.74" y="271.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (1 samples, 0.06%)</title><rect x="384.2" y="437" width="0.8" height="15.0" fill="rgb(219,60,4)" rx="2" ry="2" />
<text  x="387.22" y="447.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseList (1 samples, 0.06%)</title><rect x="335.2" y="277" width="0.7" height="15.0" fill="rgb(211,195,31)" rx="2" ry="2" />
<text  x="338.18" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.13%)</title><rect x="326.1" y="277" width="1.5" height="15.0" fill="rgb(246,186,5)" rx="2" ry="2" />
<text  x="329.13" y="287.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="184.3" y="293" width="0.7" height="15.0" fill="rgb(222,73,4)" rx="2" ry="2" />
<text  x="187.28" y="303.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.06%)</title><rect x="364.6" y="405" width="0.8" height="15.0" fill="rgb(216,116,43)" rx="2" ry="2" />
<text  x="367.60" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (2 samples, 0.13%)</title><rect x="982.5" y="325" width="1.5" height="15.0" fill="rgb(250,31,34)" rx="2" ry="2" />
<text  x="985.52" y="335.5" ></text>
</g>
<g >
<title>onnx_torch::OpSchema::TypeConstraint (1 samples, 0.06%)</title><rect x="294.4" y="341" width="0.8" height="15.0" fill="rgb(206,70,40)" rx="2" ry="2" />
<text  x="297.44" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="278.6" y="341" width="0.7" height="15.0" fill="rgb(217,173,48)" rx="2" ry="2" />
<text  x="281.59" y="351.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.06%)</title><rect x="1168.9" y="325" width="0.7" height="15.0" fill="rgb(247,155,2)" rx="2" ry="2" />
<text  x="1171.87" y="335.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.06%)</title><rect x="285.4" y="357" width="0.7" height="15.0" fill="rgb(210,143,51)" rx="2" ry="2" />
<text  x="288.38" y="367.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.06%)</title><rect x="287.6" y="213" width="0.8" height="15.0" fill="rgb(252,178,21)" rx="2" ry="2" />
<text  x="290.65" y="223.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="274.8" y="373" width="0.8" height="15.0" fill="rgb(235,150,10)" rx="2" ry="2" />
<text  x="277.82" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="323.9" y="309" width="0.7" height="15.0" fill="rgb(228,96,2)" rx="2" ry="2" />
<text  x="326.86" y="319.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="308.0" y="309" width="0.8" height="15.0" fill="rgb(254,61,49)" rx="2" ry="2" />
<text  x="311.02" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (1 samples, 0.06%)</title><rect x="296.7" y="373" width="0.8" height="15.0" fill="rgb(249,226,51)" rx="2" ry="2" />
<text  x="299.70" y="383.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (1 samples, 0.06%)</title><rect x="22.8" y="421" width="0.8" height="15.0" fill="rgb(222,124,25)" rx="2" ry="2" />
<text  x="25.83" y="431.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::RegistrationListener::onOperatorRegistered (1 samples, 0.06%)</title><rect x="329.9" y="373" width="0.8" height="15.0" fill="rgb(214,218,15)" rx="2" ry="2" />
<text  x="332.90" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::operator* (2 samples, 0.13%)</title><rect x="481.5" y="341" width="1.6" height="15.0" fill="rgb(208,81,3)" rx="2" ry="2" />
<text  x="484.55" y="351.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.06%)</title><rect x="84.7" y="437" width="0.7" height="15.0" fill="rgb(226,218,48)" rx="2" ry="2" />
<text  x="87.69" y="447.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.06%)</title><rect x="279.3" y="293" width="0.8" height="15.0" fill="rgb(245,12,38)" rx="2" ry="2" />
<text  x="282.35" y="303.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="157.1" y="357" width="0.8" height="15.0" fill="rgb(208,56,2)" rx="2" ry="2" />
<text  x="160.12" y="367.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (2 samples, 0.13%)</title><rect x="360.1" y="373" width="1.5" height="15.0" fill="rgb(242,181,30)" rx="2" ry="2" />
<text  x="363.08" y="383.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.06%)</title><rect x="284.6" y="261" width="0.8" height="15.0" fill="rgb(242,143,8)" rx="2" ry="2" />
<text  x="287.63" y="271.5" ></text>
</g>
<g >
<title>torch::class_&lt;ConvPackedParamsBase&lt;2&gt; &gt;::def_pickle&lt;register_conv_params&lt;2&gt; (1 samples, 0.06%)</title><rect x="285.4" y="373" width="0.7" height="15.0" fill="rgb(207,36,24)" rx="2" ry="2" />
<text  x="288.38" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt; (7 samples, 0.45%)</title><rect x="549.5" y="325" width="5.2" height="15.0" fill="rgb(225,93,42)" rx="2" ry="2" />
<text  x="552.45" y="335.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (2 samples, 0.13%)</title><rect x="268.0" y="325" width="1.5" height="15.0" fill="rgb(207,19,16)" rx="2" ry="2" />
<text  x="271.03" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (2 samples, 0.13%)</title><rect x="394.8" y="437" width="1.5" height="15.0" fill="rgb(231,211,52)" rx="2" ry="2" />
<text  x="397.78" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_realloc_insert&lt;c10::Argument&gt; (6 samples, 0.38%)</title><rect x="240.1" y="309" width="4.5" height="15.0" fill="rgb(247,80,6)" rx="2" ry="2" />
<text  x="243.12" y="319.5" ></text>
</g>
<g >
<title>c10::TensorImpl::dtype (1 samples, 0.06%)</title><rect x="38.7" y="437" width="0.7" height="15.0" fill="rgb(219,141,35)" rx="2" ry="2" />
<text  x="41.67" y="447.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="169.9" y="261" width="0.8" height="15.0" fill="rgb(249,80,35)" rx="2" ry="2" />
<text  x="172.95" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="407.6" y="357" width="0.8" height="15.0" fill="rgb(231,51,51)" rx="2" ry="2" />
<text  x="410.61" y="367.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.06%)</title><rect x="238.6" y="229" width="0.8" height="15.0" fill="rgb(240,218,5)" rx="2" ry="2" />
<text  x="241.61" y="239.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (3 samples, 0.19%)</title><rect x="320.1" y="293" width="2.3" height="15.0" fill="rgb(245,59,20)" rx="2" ry="2" />
<text  x="323.09" y="303.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (4 samples, 0.26%)</title><rect x="271.8" y="389" width="3.0" height="15.0" fill="rgb(230,115,16)" rx="2" ry="2" />
<text  x="274.80" y="399.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, at::Tensor  (1 samples, 0.06%)</title><rect x="283.1" y="357" width="0.8" height="15.0" fill="rgb(215,92,14)" rx="2" ry="2" />
<text  x="286.12" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="176.0" y="341" width="0.7" height="15.0" fill="rgb(222,79,35)" rx="2" ry="2" />
<text  x="178.98" y="351.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.13%)</title><rect x="153.4" y="213" width="1.5" height="15.0" fill="rgb(229,133,15)" rx="2" ry="2" />
<text  x="156.35" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;*&gt; (2 samples, 0.13%)</title><rect x="771.3" y="261" width="1.5" height="15.0" fill="rgb(227,187,21)" rx="2" ry="2" />
<text  x="774.27" y="271.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.06%)</title><rect x="289.2" y="229" width="0.7" height="15.0" fill="rgb(238,161,49)" rx="2" ry="2" />
<text  x="292.16" y="239.5" ></text>
</g>
<g >
<title>c10::operator== (1 samples, 0.06%)</title><rect x="298.2" y="325" width="0.8" height="15.0" fill="rgb(223,111,2)" rx="2" ry="2" />
<text  x="301.21" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator (1 samples, 0.06%)</title><rect x="866.3" y="373" width="0.8" height="15.0" fill="rgb(251,104,3)" rx="2" ry="2" />
<text  x="869.33" y="383.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VariableType_1.cpp (4 samples, 0.26%)</title><rect x="271.8" y="405" width="3.0" height="15.0" fill="rgb(253,96,46)" rx="2" ry="2" />
<text  x="274.80" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="206.2" y="309" width="0.7" height="15.0" fill="rgb(252,221,46)" rx="2" ry="2" />
<text  x="209.16" y="319.5" ></text>
</g>
<g >
<title>c10::demangle[abi:cxx11] (1 samples, 0.06%)</title><rect x="305.8" y="373" width="0.7" height="15.0" fill="rgb(208,229,32)" rx="2" ry="2" />
<text  x="308.75" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="288.4" y="293" width="0.8" height="15.0" fill="rgb(222,37,26)" rx="2" ry="2" />
<text  x="291.40" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;c10::TensorImpl*&gt; (1 samples, 0.06%)</title><rect x="891.2" y="341" width="0.8" height="15.0" fill="rgb(212,25,44)" rx="2" ry="2" />
<text  x="894.23" y="351.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="222.0" y="213" width="0.8" height="15.0" fill="rgb(211,118,10)" rx="2" ry="2" />
<text  x="225.01" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.06%)</title><rect x="400.1" y="437" width="0.7" height="15.0" fill="rgb(211,226,40)" rx="2" ry="2" />
<text  x="403.06" y="447.5" ></text>
</g>
<g >
<title>main (969 samples, 61.96%)</title><rect x="437.0" y="421" width="731.1" height="15.0" fill="rgb(217,21,42)" rx="2" ry="2" />
<text  x="440.03" y="431.5" >main</text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.06%)</title><rect x="419.7" y="293" width="0.7" height="15.0" fill="rgb(234,45,35)" rx="2" ry="2" />
<text  x="422.68" y="303.5" ></text>
</g>
<g >
<title>torch::autograd::Edge::Edge (1 samples, 0.06%)</title><rect x="954.6" y="341" width="0.8" height="15.0" fill="rgb(205,89,17)" rx="2" ry="2" />
<text  x="957.60" y="351.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.06%)</title><rect x="307.3" y="181" width="0.7" height="15.0" fill="rgb(211,105,24)" rx="2" ry="2" />
<text  x="310.26" y="191.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.06%)</title><rect x="932.7" y="293" width="0.8" height="15.0" fill="rgb(214,27,26)" rx="2" ry="2" />
<text  x="935.72" y="303.5" ></text>
</g>
<g >
<title>torch::Library::_impl (11 samples, 0.70%)</title><rect x="165.4" y="357" width="8.3" height="15.0" fill="rgb(233,143,36)" rx="2" ry="2" />
<text  x="168.42" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="176.0" y="309" width="0.7" height="15.0" fill="rgb(227,208,38)" rx="2" ry="2" />
<text  x="178.98" y="319.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base (1 samples, 0.06%)</title><rect x="477.0" y="357" width="0.8" height="15.0" fill="rgb(214,196,43)" rx="2" ry="2" />
<text  x="480.02" y="367.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.06%)</title><rect x="21.3" y="405" width="0.8" height="15.0" fill="rgb(249,159,1)" rx="2" ry="2" />
<text  x="24.32" y="415.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (2 samples, 0.13%)</title><rect x="262.7" y="325" width="1.6" height="15.0" fill="rgb(209,84,23)" rx="2" ry="2" />
<text  x="265.75" y="335.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_BackendSelectRegister.cpp (2 samples, 0.13%)</title><rect x="158.6" y="405" width="1.5" height="15.0" fill="rgb(216,191,36)" rx="2" ry="2" />
<text  x="161.63" y="415.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.32%)</title><rect x="1091.9" y="213" width="3.8" height="15.0" fill="rgb(208,65,54)" rx="2" ry="2" />
<text  x="1094.92" y="223.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.06%)</title><rect x="287.6" y="277" width="0.8" height="15.0" fill="rgb(213,145,44)" rx="2" ry="2" />
<text  x="290.65" y="287.5" ></text>
</g>
<g >
<title>std::__addressof&lt;caffe2::TypeMeta&gt; (1 samples, 0.06%)</title><rect x="504.2" y="309" width="0.7" height="15.0" fill="rgb(218,226,26)" rx="2" ry="2" />
<text  x="507.18" y="319.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (2 samples, 0.13%)</title><rect x="1165.1" y="341" width="1.5" height="15.0" fill="rgb(248,206,15)" rx="2" ry="2" />
<text  x="1168.10" y="351.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::rehash (2 samples, 0.13%)</title><rect x="169.2" y="293" width="1.5" height="15.0" fill="rgb(205,198,18)" rx="2" ry="2" />
<text  x="172.19" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.13%)</title><rect x="423.5" y="245" width="1.5" height="15.0" fill="rgb(248,52,6)" rx="2" ry="2" />
<text  x="426.45" y="255.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::dataptr (1 samples, 0.06%)</title><rect x="816.5" y="357" width="0.8" height="15.0" fill="rgb(217,175,8)" rx="2" ry="2" />
<text  x="819.53" y="367.5" ></text>
</g>
<g >
<title>[libc10.so] (2 samples, 0.13%)</title><rect x="353.3" y="437" width="1.5" height="15.0" fill="rgb(205,219,39)" rx="2" ry="2" />
<text  x="356.29" y="447.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.06%)</title><rect x="169.9" y="149" width="0.8" height="15.0" fill="rgb(206,56,6)" rx="2" ry="2" />
<text  x="172.95" y="159.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="159.4" y="325" width="0.7" height="15.0" fill="rgb(239,216,16)" rx="2" ry="2" />
<text  x="162.39" y="335.5" ></text>
</g>
<g >
<title>walk_component (1 samples, 0.06%)</title><rect x="145.1" y="181" width="0.7" height="15.0" fill="rgb(235,166,20)" rx="2" ry="2" />
<text  x="148.05" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.06%)</title><rect x="170.7" y="293" width="0.8" height="15.0" fill="rgb(208,17,27)" rx="2" ry="2" />
<text  x="173.70" y="303.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional&lt;caffe2::TypeMeta, false&gt; (3 samples, 0.19%)</title><rect x="507.2" y="373" width="2.3" height="15.0" fill="rgb(247,156,5)" rx="2" ry="2" />
<text  x="510.20" y="383.5" ></text>
</g>
<g >
<title>torch::Library::_impl (4 samples, 0.26%)</title><rect x="176.7" y="357" width="3.1" height="15.0" fill="rgb(220,119,28)" rx="2" ry="2" />
<text  x="179.74" y="367.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3 samples, 0.19%)</title><rect x="242.4" y="197" width="2.2" height="15.0" fill="rgb(222,57,31)" rx="2" ry="2" />
<text  x="245.38" y="207.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::AutogradMeta (73 samples, 4.67%)</title><rect x="899.5" y="341" width="55.1" height="15.0" fill="rgb(235,224,25)" rx="2" ry="2" />
<text  x="902.53" y="351.5" >torch..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.06%)</title><rect x="402.3" y="357" width="0.8" height="15.0" fill="rgb(232,130,0)" rx="2" ry="2" />
<text  x="405.33" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (3 samples, 0.19%)</title><rect x="975.0" y="309" width="2.2" height="15.0" fill="rgb(254,228,39)" rx="2" ry="2" />
<text  x="977.97" y="319.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TraceType_2.cpp (2 samples, 0.13%)</title><rect x="200.9" y="405" width="1.5" height="15.0" fill="rgb(209,105,54)" rx="2" ry="2" />
<text  x="203.88" y="415.5" ></text>
</g>
<g >
<title>at::native::empty_cpu@plt (1 samples, 0.06%)</title><rect x="707.9" y="245" width="0.7" height="15.0" fill="rgb(206,122,45)" rx="2" ry="2" />
<text  x="710.89" y="255.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.06%)</title><rect x="239.4" y="245" width="0.7" height="15.0" fill="rgb(239,29,6)" rx="2" ry="2" />
<text  x="242.36" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.13%)</title><rect x="143.5" y="277" width="1.6" height="15.0" fill="rgb(217,0,20)" rx="2" ry="2" />
<text  x="146.54" y="287.5" ></text>
</g>
<g >
<title>std::begin&lt;long&gt; (2 samples, 0.13%)</title><rect x="790.1" y="373" width="1.5" height="15.0" fill="rgb(214,174,38)" rx="2" ry="2" />
<text  x="793.13" y="383.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.06%)</title><rect x="196.4" y="357" width="0.7" height="15.0" fill="rgb(251,174,25)" rx="2" ry="2" />
<text  x="199.36" y="367.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (13 samples, 0.83%)</title><rect x="810.5" y="389" width="9.8" height="15.0" fill="rgb(235,146,31)" rx="2" ry="2" />
<text  x="813.50" y="399.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_NamedRegistrations.cpp (10 samples, 0.64%)</title><rect x="179.8" y="405" width="7.5" height="15.0" fill="rgb(251,33,0)" rx="2" ry="2" />
<text  x="182.76" y="415.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.06%)</title><rect x="216.0" y="165" width="0.7" height="15.0" fill="rgb(212,113,32)" rx="2" ry="2" />
<text  x="218.97" y="175.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.06%)</title><rect x="181.3" y="261" width="0.7" height="15.0" fill="rgb(223,42,40)" rx="2" ry="2" />
<text  x="184.27" y="271.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;long&gt;@plt (1 samples, 0.06%)</title><rect x="1146.2" y="277" width="0.8" height="15.0" fill="rgb(207,146,8)" rx="2" ry="2" />
<text  x="1149.24" y="287.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="188.8" y="309" width="0.8" height="15.0" fill="rgb(252,8,54)" rx="2" ry="2" />
<text  x="191.81" y="319.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator* (1 samples, 0.06%)</title><rect x="815.0" y="373" width="0.8" height="15.0" fill="rgb(214,115,18)" rx="2" ry="2" />
<text  x="818.03" y="383.5" ></text>
</g>
<g >
<title>c10::AutogradMetaInterface::AutogradMetaInterface (3 samples, 0.19%)</title><rect x="903.3" y="325" width="2.3" height="15.0" fill="rgb(254,28,14)" rx="2" ry="2" />
<text  x="906.30" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.06%)</title><rect x="158.6" y="293" width="0.8" height="15.0" fill="rgb(214,108,10)" rx="2" ry="2" />
<text  x="161.63" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="235.6" y="277" width="0.7" height="15.0" fill="rgb(220,203,30)" rx="2" ry="2" />
<text  x="238.59" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="768.2" y="293" width="0.8" height="15.0" fill="rgb(234,47,53)" rx="2" ry="2" />
<text  x="771.25" y="303.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TraceType_1.cpp (5 samples, 0.32%)</title><rect x="197.1" y="405" width="3.8" height="15.0" fill="rgb(219,108,2)" rx="2" ry="2" />
<text  x="200.11" y="415.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (2 samples, 0.13%)</title><rect x="277.8" y="389" width="1.5" height="15.0" fill="rgb(223,215,1)" rx="2" ry="2" />
<text  x="280.84" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="373.7" y="437" width="0.7" height="15.0" fill="rgb(240,45,6)" rx="2" ry="2" />
<text  x="376.66" y="447.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (10 samples, 0.64%)</title><rect x="829.4" y="373" width="7.5" height="15.0" fill="rgb(240,71,14)" rx="2" ry="2" />
<text  x="832.36" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="407.6" y="405" width="0.8" height="15.0" fill="rgb(221,192,0)" rx="2" ry="2" />
<text  x="410.61" y="415.5" ></text>
</g>
<g >
<title>at::native::compute_cpu_capability (1 samples, 0.06%)</title><rect x="192.6" y="357" width="0.7" height="15.0" fill="rgb(243,72,18)" rx="2" ry="2" />
<text  x="195.58" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.06%)</title><rect x="273.3" y="325" width="0.8" height="15.0" fill="rgb(220,5,4)" rx="2" ry="2" />
<text  x="276.31" y="335.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="178.2" y="293" width="0.8" height="15.0" fill="rgb(238,71,4)" rx="2" ry="2" />
<text  x="181.25" y="303.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="142.0" y="325" width="0.8" height="15.0" fill="rgb(210,74,48)" rx="2" ry="2" />
<text  x="145.03" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.13%)</title><rect x="314.1" y="389" width="1.5" height="15.0" fill="rgb(213,14,51)" rx="2" ry="2" />
<text  x="317.05" y="399.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="196.4" y="341" width="0.7" height="15.0" fill="rgb(211,184,0)" rx="2" ry="2" />
<text  x="199.36" y="351.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.06%)</title><rect x="179.0" y="309" width="0.8" height="15.0" fill="rgb(225,149,47)" rx="2" ry="2" />
<text  x="182.00" y="319.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 0.06%)</title><rect x="142.8" y="309" width="0.7" height="15.0" fill="rgb(219,226,29)" rx="2" ry="2" />
<text  x="145.79" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="142.8" y="357" width="0.7" height="15.0" fill="rgb(222,7,0)" rx="2" ry="2" />
<text  x="145.79" y="367.5" ></text>
</g>
<g >
<title>c10::ArrayRef&lt;long&gt;::ArrayRef (6 samples, 0.38%)</title><rect x="468.0" y="389" width="4.5" height="15.0" fill="rgb(244,113,23)" rx="2" ry="2" />
<text  x="470.97" y="399.5" ></text>
</g>
<g >
<title>torch::autograd::isDifferentiableType (2 samples, 0.13%)</title><rect x="953.1" y="309" width="1.5" height="15.0" fill="rgb(230,229,8)" rx="2" ry="2" />
<text  x="956.09" y="319.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.06%)</title><rect x="762.2" y="309" width="0.8" height="15.0" fill="rgb(229,56,33)" rx="2" ry="2" />
<text  x="765.21" y="319.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.06%)</title><rect x="183.5" y="261" width="0.8" height="15.0" fill="rgb(225,65,21)" rx="2" ry="2" />
<text  x="186.53" y="271.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::dataptr (1 samples, 0.06%)</title><rect x="60.5" y="437" width="0.8" height="15.0" fill="rgb(239,186,15)" rx="2" ry="2" />
<text  x="63.55" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.06%)</title><rect x="13.8" y="437" width="0.7" height="15.0" fill="rgb(241,62,0)" rx="2" ry="2" />
<text  x="16.77" y="447.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="300.5" y="277" width="0.7" height="15.0" fill="rgb(229,220,30)" rx="2" ry="2" />
<text  x="303.47" y="287.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.06%)</title><rect x="199.4" y="341" width="0.7" height="15.0" fill="rgb(251,225,33)" rx="2" ry="2" />
<text  x="202.37" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (6 samples, 0.38%)</title><rect x="962.9" y="341" width="4.5" height="15.0" fill="rgb(249,9,15)" rx="2" ry="2" />
<text  x="965.90" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.13%)</title><rect x="317.8" y="325" width="1.5" height="15.0" fill="rgb(219,29,2)" rx="2" ry="2" />
<text  x="320.83" y="335.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.06%)</title><rect x="155.6" y="245" width="0.8" height="15.0" fill="rgb(235,133,21)" rx="2" ry="2" />
<text  x="158.61" y="255.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (1 samples, 0.06%)</title><rect x="408.4" y="341" width="0.7" height="15.0" fill="rgb(253,121,4)" rx="2" ry="2" />
<text  x="411.36" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (18 samples, 1.15%)</title><rect x="420.4" y="325" width="13.6" height="15.0" fill="rgb(236,193,1)" rx="2" ry="2" />
<text  x="423.43" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="366.9" y="245" width="0.7" height="15.0" fill="rgb(246,169,3)" rx="2" ry="2" />
<text  x="369.87" y="255.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="322.4" y="261" width="0.7" height="15.0" fill="rgb(232,152,48)" rx="2" ry="2" />
<text  x="325.35" y="271.5" ></text>
</g>
<g >
<title>std::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt;, true&gt; (2 samples, 0.13%)</title><rect x="546.4" y="325" width="1.5" height="15.0" fill="rgb(244,37,53)" rx="2" ry="2" />
<text  x="549.43" y="335.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VariableType_4.cpp (2 samples, 0.13%)</title><rect x="279.3" y="405" width="1.6" height="15.0" fill="rgb(242,115,11)" rx="2" ry="2" />
<text  x="282.35" y="415.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.06%)</title><rect x="280.9" y="101" width="0.7" height="15.0" fill="rgb(242,1,9)" rx="2" ry="2" />
<text  x="283.86" y="111.5" ></text>
</g>
<g >
<title>torch::Library::def&lt;char const  (2 samples, 0.13%)</title><rect x="360.1" y="405" width="1.5" height="15.0" fill="rgb(237,229,16)" rx="2" ry="2" />
<text  x="363.08" y="415.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (2 samples, 0.13%)</title><rect x="365.4" y="341" width="1.5" height="15.0" fill="rgb(209,80,39)" rx="2" ry="2" />
<text  x="368.36" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="216.0" y="213" width="0.7" height="15.0" fill="rgb(229,127,15)" rx="2" ry="2" />
<text  x="218.97" y="223.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.06%)</title><rect x="232.6" y="117" width="0.7" height="15.0" fill="rgb(251,149,18)" rx="2" ry="2" />
<text  x="235.57" y="127.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (7 samples, 0.45%)</title><rect x="1150.0" y="341" width="5.3" height="15.0" fill="rgb(217,65,21)" rx="2" ry="2" />
<text  x="1153.01" y="351.5" ></text>
</g>
<g >
<title>caffe2::OpSchemaRegistry::NewSchema (4 samples, 0.26%)</title><rect x="309.5" y="389" width="3.0" height="15.0" fill="rgb(233,138,21)" rx="2" ry="2" />
<text  x="312.53" y="399.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;  (1 samples, 0.06%)</title><rect x="278.6" y="357" width="0.7" height="15.0" fill="rgb(248,28,53)" rx="2" ry="2" />
<text  x="281.59" y="367.5" ></text>
</g>
<g >
<title>torch::Library::def&lt;char const  (10 samples, 0.64%)</title><rect x="335.2" y="373" width="7.5" height="15.0" fill="rgb(236,180,49)" rx="2" ry="2" />
<text  x="338.18" y="383.5" ></text>
</g>
<g >
<title>torch::empty (248 samples, 15.86%)</title><rect x="554.7" y="373" width="187.1" height="15.0" fill="rgb(225,162,22)" rx="2" ry="2" />
<text  x="557.73" y="383.5" >torch::empty</text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_SparseCUDA (1 samples, 0.06%)</title><rect x="191.8" y="389" width="0.8" height="15.0" fill="rgb(232,78,13)" rx="2" ry="2" />
<text  x="194.83" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.96%)</title><rect x="1168.9" y="453" width="11.3" height="15.0" fill="rgb(232,216,3)" rx="2" ry="2" />
<text  x="1171.87" y="463.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="246.9" y="277" width="0.8" height="15.0" fill="rgb(208,54,8)" rx="2" ry="2" />
<text  x="249.91" y="287.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.06%)</title><rect x="292.9" y="389" width="0.8" height="15.0" fill="rgb(218,134,28)" rx="2" ry="2" />
<text  x="295.93" y="399.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.06%)</title><rect x="198.6" y="341" width="0.8" height="15.0" fill="rgb(241,159,7)" rx="2" ry="2" />
<text  x="201.62" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="184.3" y="261" width="0.7" height="15.0" fill="rgb(222,139,32)" rx="2" ry="2" />
<text  x="187.28" y="271.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (3 samples, 0.19%)</title><rect x="43.2" y="437" width="2.3" height="15.0" fill="rgb(215,116,4)" rx="2" ry="2" />
<text  x="46.20" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.19%)</title><rect x="242.4" y="165" width="2.2" height="15.0" fill="rgb(208,40,18)" rx="2" ry="2" />
<text  x="245.38" y="175.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="323.9" y="341" width="0.7" height="15.0" fill="rgb(212,95,42)" rx="2" ry="2" />
<text  x="326.86" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::cleanup (4 samples, 0.26%)</title><rect x="421.9" y="293" width="3.1" height="15.0" fill="rgb(235,65,49)" rx="2" ry="2" />
<text  x="424.94" y="303.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="307.3" y="245" width="0.7" height="15.0" fill="rgb(209,21,12)" rx="2" ry="2" />
<text  x="310.26" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.06%)</title><rect x="76.4" y="437" width="0.7" height="15.0" fill="rgb(240,96,30)" rx="2" ry="2" />
<text  x="79.39" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable (1 samples, 0.06%)</title><rect x="237.1" y="277" width="0.8" height="15.0" fill="rgb(253,133,19)" rx="2" ry="2" />
<text  x="240.10" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="323.9" y="325" width="0.7" height="15.0" fill="rgb(252,196,3)" rx="2" ry="2" />
<text  x="326.86" y="335.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_ParallelThreadPoolNative.cpp (1 samples, 0.06%)</title><rect x="187.3" y="405" width="0.8" height="15.0" fill="rgb(237,138,36)" rx="2" ry="2" />
<text  x="190.30" y="415.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.06%)</title><rect x="282.4" y="341" width="0.7" height="15.0" fill="rgb(209,140,19)" rx="2" ry="2" />
<text  x="285.37" y="351.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.06%)</title><rect x="77.1" y="437" width="0.8" height="15.0" fill="rgb(232,10,37)" rx="2" ry="2" />
<text  x="80.15" y="447.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::dataptr (1 samples, 0.06%)</title><rect x="480.0" y="341" width="0.8" height="15.0" fill="rgb(254,122,24)" rx="2" ry="2" />
<text  x="483.04" y="351.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="169.9" y="245" width="0.8" height="15.0" fill="rgb(249,194,50)" rx="2" ry="2" />
<text  x="172.95" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.06%)</title><rect x="171.5" y="325" width="0.7" height="15.0" fill="rgb(244,55,13)" rx="2" ry="2" />
<text  x="174.46" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.06%)</title><rect x="198.6" y="309" width="0.8" height="15.0" fill="rgb(222,76,7)" rx="2" ry="2" />
<text  x="201.62" y="319.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.06%)</title><rect x="293.7" y="341" width="0.7" height="15.0" fill="rgb(212,95,2)" rx="2" ry="2" />
<text  x="296.68" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (2 samples, 0.13%)</title><rect x="211.4" y="357" width="1.6" height="15.0" fill="rgb(242,23,43)" rx="2" ry="2" />
<text  x="214.45" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::RegistrationHandleRAII, std::allocator&lt;c10::RegistrationHandleRAII&gt; &gt;::emplace_back&lt;c10::RegistrationHandleRAII&gt; (1 samples, 0.06%)</title><rect x="221.3" y="341" width="0.7" height="15.0" fill="rgb(246,224,42)" rx="2" ry="2" />
<text  x="224.25" y="351.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="232.6" y="197" width="0.7" height="15.0" fill="rgb(240,17,25)" rx="2" ry="2" />
<text  x="235.57" y="207.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (4 samples, 0.26%)</title><rect x="443.1" y="325" width="3.0" height="15.0" fill="rgb(215,158,43)" rx="2" ry="2" />
<text  x="446.07" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_M_ptr (2 samples, 0.13%)</title><rect x="979.5" y="341" width="1.5" height="15.0" fill="rgb(239,97,24)" rx="2" ry="2" />
<text  x="982.50" y="351.5" ></text>
</g>
<g >
<title>torch::jit::parseName (3 samples, 0.19%)</title><rect x="171.5" y="341" width="2.2" height="15.0" fill="rgb(249,26,54)" rx="2" ry="2" />
<text  x="174.46" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="203.1" y="309" width="0.8" height="15.0" fill="rgb(210,161,9)" rx="2" ry="2" />
<text  x="206.15" y="319.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="182.8" y="245" width="0.7" height="15.0" fill="rgb(254,139,2)" rx="2" ry="2" />
<text  x="185.77" y="255.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.06%)</title><rect x="273.3" y="261" width="0.8" height="15.0" fill="rgb(214,27,16)" rx="2" ry="2" />
<text  x="276.31" y="271.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="412.1" y="85" width="0.8" height="15.0" fill="rgb(243,25,29)" rx="2" ry="2" />
<text  x="415.14" y="95.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.06%)</title><rect x="784.8" y="261" width="0.8" height="15.0" fill="rgb(232,78,7)" rx="2" ry="2" />
<text  x="787.85" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.06%)</title><rect x="265.8" y="293" width="0.7" height="15.0" fill="rgb(242,136,43)" rx="2" ry="2" />
<text  x="268.77" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="289.9" y="197" width="0.8" height="15.0" fill="rgb(240,181,53)" rx="2" ry="2" />
<text  x="292.91" y="207.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp;  (1 samples, 0.06%)</title><rect x="198.6" y="373" width="0.8" height="15.0" fill="rgb(226,6,6)" rx="2" ry="2" />
<text  x="201.62" y="383.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (2 samples, 0.13%)</title><rect x="1155.3" y="341" width="1.5" height="15.0" fill="rgb(214,55,36)" rx="2" ry="2" />
<text  x="1158.29" y="351.5" ></text>
</g>
<g >
<title>[example-app] (1 samples, 0.06%)</title><rect x="778.8" y="309" width="0.8" height="15.0" fill="rgb(245,201,38)" rx="2" ry="2" />
<text  x="781.81" y="319.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.06%)</title><rect x="279.3" y="277" width="0.8" height="15.0" fill="rgb(231,217,25)" rx="2" ry="2" />
<text  x="282.35" y="287.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="300.5" y="261" width="0.7" height="15.0" fill="rgb(254,2,41)" rx="2" ry="2" />
<text  x="303.47" y="271.5" ></text>
</g>
<g >
<title>c10::Registry&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;, caffe2::OperatorDef const&amp;, caffe2::Workspace*&gt;::Register (2 samples, 0.13%)</title><rect x="302.7" y="373" width="1.5" height="15.0" fill="rgb(213,167,49)" rx="2" ry="2" />
<text  x="305.74" y="383.5" ></text>
</g>
<g >
<title>cpuinfo_x86_linux_parse_proc_cpuinfo (1 samples, 0.06%)</title><rect x="192.6" y="293" width="0.7" height="15.0" fill="rgb(234,201,16)" rx="2" ry="2" />
<text  x="195.58" y="303.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (1 samples, 0.06%)</title><rect x="59.8" y="437" width="0.7" height="15.0" fill="rgb(214,97,18)" rx="2" ry="2" />
<text  x="62.80" y="447.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.06%)</title><rect x="786.4" y="309" width="0.7" height="15.0" fill="rgb(253,55,25)" rx="2" ry="2" />
<text  x="789.36" y="319.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator (1 samples, 0.06%)</title><rect x="884.4" y="357" width="0.8" height="15.0" fill="rgb(232,59,1)" rx="2" ry="2" />
<text  x="887.44" y="367.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.06%)</title><rect x="290.7" y="389" width="0.7" height="15.0" fill="rgb(215,190,34)" rx="2" ry="2" />
<text  x="293.66" y="399.5" ></text>
</g>
<g >
<title>torch::jit::deregisterOperator (1 samples, 0.06%)</title><rect x="412.9" y="293" width="0.7" height="15.0" fill="rgb(236,219,27)" rx="2" ry="2" />
<text  x="415.89" y="303.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="277.8" y="373" width="0.8" height="15.0" fill="rgb(235,112,39)" rx="2" ry="2" />
<text  x="280.84" y="383.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor&amp;  (2 samples, 0.13%)</title><rect x="276.3" y="373" width="1.5" height="15.0" fill="rgb(220,217,8)" rx="2" ry="2" />
<text  x="279.33" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="300.5" y="229" width="0.7" height="15.0" fill="rgb(241,97,50)" rx="2" ry="2" />
<text  x="303.47" y="239.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (3 samples, 0.19%)</title><rect x="404.6" y="405" width="2.3" height="15.0" fill="rgb(236,116,32)" rx="2" ry="2" />
<text  x="407.59" y="415.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.06%)</title><rect x="300.5" y="197" width="0.7" height="15.0" fill="rgb(220,223,54)" rx="2" ry="2" />
<text  x="303.47" y="207.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_Tuple_impl (1 samples, 0.06%)</title><rect x="68.8" y="437" width="0.8" height="15.0" fill="rgb(220,19,50)" rx="2" ry="2" />
<text  x="71.85" y="447.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (3 samples, 0.19%)</title><rect x="145.1" y="309" width="2.2" height="15.0" fill="rgb(247,109,36)" rx="2" ry="2" />
<text  x="148.05" y="319.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (3 samples, 0.19%)</title><rect x="218.2" y="293" width="2.3" height="15.0" fill="rgb(232,137,34)" rx="2" ry="2" />
<text  x="221.24" y="303.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::dataptr (2 samples, 0.13%)</title><rect x="832.4" y="341" width="1.5" height="15.0" fill="rgb(229,227,51)" rx="2" ry="2" />
<text  x="835.38" y="351.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.06%)</title><rect x="283.1" y="309" width="0.8" height="15.0" fill="rgb(237,122,2)" rx="2" ry="2" />
<text  x="286.12" y="319.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.06%)</title><rect x="407.6" y="325" width="0.8" height="15.0" fill="rgb(252,184,43)" rx="2" ry="2" />
<text  x="410.61" y="335.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.06%)</title><rect x="200.1" y="309" width="0.8" height="15.0" fill="rgb(222,103,29)" rx="2" ry="2" />
<text  x="203.13" y="319.5" ></text>
</g>
<g >
<title>at::empty (221 samples, 14.13%)</title><rect x="990.1" y="357" width="166.7" height="15.0" fill="rgb(253,160,15)" rx="2" ry="2" />
<text  x="993.06" y="367.5" >at::empty</text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="260.5" y="229" width="0.7" height="15.0" fill="rgb(208,194,14)" rx="2" ry="2" />
<text  x="263.49" y="239.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (4 samples, 0.26%)</title><rect x="757.7" y="293" width="3.0" height="15.0" fill="rgb(242,189,12)" rx="2" ry="2" />
<text  x="760.69" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="415.2" y="213" width="0.7" height="15.0" fill="rgb(236,40,7)" rx="2" ry="2" />
<text  x="418.15" y="223.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (3 samples, 0.19%)</title><rect x="203.1" y="373" width="2.3" height="15.0" fill="rgb(221,174,29)" rx="2" ry="2" />
<text  x="206.15" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::FileDescriptorProto::_InternalParse (1 samples, 0.06%)</title><rect x="327.6" y="325" width="0.8" height="15.0" fill="rgb(230,61,35)" rx="2" ry="2" />
<text  x="330.63" y="335.5" ></text>
</g>
<g >
<title>c10::TensorOptions::TensorOptions (1 samples, 0.06%)</title><rect x="41.7" y="437" width="0.7" height="15.0" fill="rgb(228,52,6)" rx="2" ry="2" />
<text  x="44.69" y="447.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional (6 samples, 0.38%)</title><rect x="832.4" y="357" width="4.5" height="15.0" fill="rgb(231,188,19)" rx="2" ry="2" />
<text  x="835.38" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="182.8" y="261" width="0.7" height="15.0" fill="rgb(250,38,34)" rx="2" ry="2" />
<text  x="185.77" y="271.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="204.7" y="309" width="0.7" height="15.0" fill="rgb(211,169,18)" rx="2" ry="2" />
<text  x="207.65" y="319.5" ></text>
</g>
<g >
<title>get_unmapped_area (1 samples, 0.06%)</title><rect x="1168.9" y="293" width="0.7" height="15.0" fill="rgb(253,190,9)" rx="2" ry="2" />
<text  x="1171.87" y="303.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::rehash (1 samples, 0.06%)</title><rect x="185.0" y="277" width="0.8" height="15.0" fill="rgb(233,122,24)" rx="2" ry="2" />
<text  x="188.04" y="287.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="279.3" y="373" width="0.8" height="15.0" fill="rgb(218,72,18)" rx="2" ry="2" />
<text  x="282.35" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="307.3" y="229" width="0.7" height="15.0" fill="rgb(230,69,31)" rx="2" ry="2" />
<text  x="310.26" y="239.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VariableType_3.cpp (2 samples, 0.13%)</title><rect x="277.8" y="405" width="1.5" height="15.0" fill="rgb(231,137,5)" rx="2" ry="2" />
<text  x="280.84" y="415.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="200.9" y="357" width="0.7" height="15.0" fill="rgb(242,116,31)" rx="2" ry="2" />
<text  x="203.88" y="367.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::end (1 samples, 0.06%)</title><rect x="792.4" y="357" width="0.7" height="15.0" fill="rgb(234,100,1)" rx="2" ry="2" />
<text  x="795.39" y="367.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (4 samples, 0.26%)</title><rect x="702.6" y="213" width="3.0" height="15.0" fill="rgb(218,130,18)" rx="2" ry="2" />
<text  x="705.61" y="223.5" ></text>
</g>
<g >
<title>at::empty (1 samples, 0.06%)</title><rect x="862.6" y="373" width="0.7" height="15.0" fill="rgb(216,195,20)" rx="2" ry="2" />
<text  x="865.56" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (4 samples, 0.26%)</title><rect x="241.6" y="261" width="3.0" height="15.0" fill="rgb(213,158,44)" rx="2" ry="2" />
<text  x="244.62" y="271.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (1 samples, 0.06%)</title><rect x="209.2" y="357" width="0.7" height="15.0" fill="rgb(240,156,41)" rx="2" ry="2" />
<text  x="212.18" y="367.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.06%)</title><rect x="200.1" y="293" width="0.8" height="15.0" fill="rgb(240,219,19)" rx="2" ry="2" />
<text  x="203.13" y="303.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (1 samples, 0.06%)</title><rect x="539.6" y="325" width="0.8" height="15.0" fill="rgb(212,186,18)" rx="2" ry="2" />
<text  x="542.64" y="335.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::Device&gt;::constexpr_storage_t&lt;c10::DeviceType const&amp;, int&gt; (5 samples, 0.32%)</title><rect x="806.0" y="341" width="3.7" height="15.0" fill="rgb(228,228,12)" rx="2" ry="2" />
<text  x="808.97" y="351.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="404.6" y="357" width="0.7" height="15.0" fill="rgb(213,33,0)" rx="2" ry="2" />
<text  x="407.59" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::~unique_ptr (2 samples, 0.13%)</title><rect x="86.2" y="437" width="1.5" height="15.0" fill="rgb(211,4,42)" rx="2" ry="2" />
<text  x="89.20" y="447.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (56 samples, 3.58%)</title><rect x="745.6" y="373" width="42.3" height="15.0" fill="rgb(222,112,31)" rx="2" ry="2" />
<text  x="748.61" y="383.5" >c10..</text>
</g>
<g >
<title>[libcufft.so.10.2.0.218] (3 samples, 0.19%)</title><rect x="154.9" y="405" width="2.2" height="15.0" fill="rgb(226,81,30)" rx="2" ry="2" />
<text  x="157.86" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="205.4" y="261" width="0.8" height="15.0" fill="rgb(211,207,16)" rx="2" ry="2" />
<text  x="208.41" y="271.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::size (1 samples, 0.06%)</title><rect x="792.4" y="341" width="0.7" height="15.0" fill="rgb(224,19,45)" rx="2" ry="2" />
<text  x="795.39" y="351.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;torch::autograd::AutogradMeta&gt;, true&gt;::_M_head (2 samples, 0.13%)</title><rect x="970.4" y="261" width="1.6" height="15.0" fill="rgb(247,60,15)" rx="2" ry="2" />
<text  x="973.45" y="271.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (1 samples, 0.06%)</title><rect x="142.8" y="229" width="0.7" height="15.0" fill="rgb(217,208,9)" rx="2" ry="2" />
<text  x="145.79" y="239.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="404.6" y="341" width="0.7" height="15.0" fill="rgb(250,180,40)" rx="2" ry="2" />
<text  x="407.59" y="351.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.06%)</title><rect x="335.2" y="197" width="0.7" height="15.0" fill="rgb(219,173,40)" rx="2" ry="2" />
<text  x="338.18" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.06%)</title><rect x="288.4" y="309" width="0.8" height="15.0" fill="rgb(253,89,23)" rx="2" ry="2" />
<text  x="291.40" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="142.8" y="341" width="0.7" height="15.0" fill="rgb(213,105,3)" rx="2" ry="2" />
<text  x="145.79" y="351.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="197.1" y="373" width="0.8" height="15.0" fill="rgb(222,223,44)" rx="2" ry="2" />
<text  x="200.11" y="383.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOp (1 samples, 0.06%)</title><rect x="280.1" y="309" width="0.8" height="15.0" fill="rgb(212,163,5)" rx="2" ry="2" />
<text  x="283.10" y="319.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;bool&gt;::constexpr_storage_t (1 samples, 0.06%)</title><rect x="1161.3" y="309" width="0.8" height="15.0" fill="rgb(248,202,52)" rx="2" ry="2" />
<text  x="1164.33" y="319.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::AutoNonVariableTypeMode (2 samples, 0.13%)</title><rect x="987.8" y="357" width="1.5" height="15.0" fill="rgb(223,58,38)" rx="2" ry="2" />
<text  x="990.80" y="367.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (5 samples, 0.32%)</title><rect x="249.2" y="277" width="3.7" height="15.0" fill="rgb(236,134,9)" rx="2" ry="2" />
<text  x="252.17" y="287.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_RegisterOpContextClass.cpp (1 samples, 0.06%)</title><rect x="189.6" y="405" width="0.7" height="15.0" fill="rgb(210,42,9)" rx="2" ry="2" />
<text  x="192.57" y="415.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (13 samples, 0.83%)</title><rect x="363.8" y="437" width="9.9" height="15.0" fill="rgb(238,3,1)" rx="2" ry="2" />
<text  x="366.85" y="447.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.06%)</title><rect x="412.1" y="181" width="0.8" height="15.0" fill="rgb(234,71,16)" rx="2" ry="2" />
<text  x="415.14" y="191.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="206.2" y="373" width="0.7" height="15.0" fill="rgb(242,145,19)" rx="2" ry="2" />
<text  x="209.16" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.06%)</title><rect x="186.5" y="277" width="0.8" height="15.0" fill="rgb(240,73,8)" rx="2" ry="2" />
<text  x="189.55" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (13 samples, 0.83%)</title><rect x="1170.4" y="421" width="9.8" height="15.0" fill="rgb(209,62,13)" rx="2" ry="2" />
<text  x="1173.38" y="431.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="308.8" y="309" width="0.7" height="15.0" fill="rgb(211,155,9)" rx="2" ry="2" />
<text  x="311.77" y="319.5" ></text>
</g>
<g >
<title>torch::empty (421 samples, 26.92%)</title><rect x="850.5" y="389" width="317.6" height="15.0" fill="rgb(251,158,5)" rx="2" ry="2" />
<text  x="853.49" y="399.5" >torch::empty</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.06%)</title><rect x="265.8" y="309" width="0.7" height="15.0" fill="rgb(241,84,18)" rx="2" ry="2" />
<text  x="268.77" y="319.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;c10::DeviceType const&amp;&gt; (1 samples, 0.06%)</title><rect x="805.2" y="341" width="0.8" height="15.0" fill="rgb(241,199,26)" rx="2" ry="2" />
<text  x="808.22" y="351.5" ></text>
</g>
<g >
<title>__cxa_finalize (1 samples, 0.06%)</title><rect x="408.4" y="357" width="0.7" height="15.0" fill="rgb(229,148,12)" rx="2" ry="2" />
<text  x="411.36" y="367.5" ></text>
</g>
<g >
<title>c10::Dispatcher::singleton@plt (1 samples, 0.06%)</title><rect x="723.0" y="341" width="0.7" height="15.0" fill="rgb(231,48,34)" rx="2" ry="2" />
<text  x="725.98" y="351.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.06%)</title><rect x="281.6" y="117" width="0.8" height="15.0" fill="rgb(215,210,26)" rx="2" ry="2" />
<text  x="284.61" y="127.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="200.9" y="373" width="0.7" height="15.0" fill="rgb(213,173,14)" rx="2" ry="2" />
<text  x="203.88" y="383.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor  (1 samples, 0.06%)</title><rect x="199.4" y="373" width="0.7" height="15.0" fill="rgb(237,158,36)" rx="2" ry="2" />
<text  x="202.37" y="383.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (2 samples, 0.13%)</title><rect x="526.8" y="357" width="1.5" height="15.0" fill="rgb(233,2,25)" rx="2" ry="2" />
<text  x="529.82" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.06%)</title><rect x="172.2" y="293" width="0.8" height="15.0" fill="rgb(233,214,44)" rx="2" ry="2" />
<text  x="175.21" y="303.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="232.6" y="165" width="0.7" height="15.0" fill="rgb(206,151,30)" rx="2" ry="2" />
<text  x="235.57" y="175.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="232.6" y="181" width="0.7" height="15.0" fill="rgb(222,142,19)" rx="2" ry="2" />
<text  x="235.57" y="191.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="277.1" y="261" width="0.7" height="15.0" fill="rgb(225,51,5)" rx="2" ry="2" />
<text  x="280.08" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="359.3" y="293" width="0.8" height="15.0" fill="rgb(227,201,48)" rx="2" ry="2" />
<text  x="362.32" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="185.8" y="277" width="0.7" height="15.0" fill="rgb(220,19,34)" rx="2" ry="2" />
<text  x="188.79" y="287.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.06%)</title><rect x="659.6" y="213" width="0.8" height="15.0" fill="rgb(206,45,40)" rx="2" ry="2" />
<text  x="662.60" y="223.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::emplace_new_key&lt;c10::OperatorName const&amp;, c10::OperatorHandle&amp;&gt; (1 samples, 0.06%)</title><rect x="185.0" y="293" width="0.8" height="15.0" fill="rgb(218,143,46)" rx="2" ry="2" />
<text  x="188.04" y="303.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.06%)</title><rect x="412.1" y="229" width="0.8" height="15.0" fill="rgb(209,171,22)" rx="2" ry="2" />
<text  x="415.14" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.06%)</title><rect x="299.0" y="373" width="0.7" height="15.0" fill="rgb(207,43,18)" rx="2" ry="2" />
<text  x="301.96" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="408.4" y="293" width="0.7" height="15.0" fill="rgb(209,218,2)" rx="2" ry="2" />
<text  x="411.36" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_M_ptr (1 samples, 0.06%)</title><rect x="401.6" y="437" width="0.7" height="15.0" fill="rgb(237,91,9)" rx="2" ry="2" />
<text  x="404.57" y="447.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (2 samples, 0.13%)</title><rect x="541.9" y="357" width="1.5" height="15.0" fill="rgb(251,204,7)" rx="2" ry="2" />
<text  x="544.91" y="367.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;unsigned char&gt; (1 samples, 0.06%)</title><rect x="63.6" y="437" width="0.7" height="15.0" fill="rgb(251,89,49)" rx="2" ry="2" />
<text  x="66.57" y="447.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (3 samples, 0.19%)</title><rect x="320.1" y="309" width="2.3" height="15.0" fill="rgb(220,145,45)" rx="2" ry="2" />
<text  x="323.09" y="319.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::allocate (39 samples, 2.49%)</title><rect x="658.1" y="229" width="29.4" height="15.0" fill="rgb(224,94,17)" rx="2" ry="2" />
<text  x="661.09" y="239.5" >c1..</text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (6 samples, 0.38%)</title><rect x="1125.9" y="229" width="4.5" height="15.0" fill="rgb(215,61,9)" rx="2" ry="2" />
<text  x="1128.87" y="239.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.06%)</title><rect x="514.0" y="389" width="0.7" height="15.0" fill="rgb(254,52,40)" rx="2" ry="2" />
<text  x="516.99" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.06%)</title><rect x="366.9" y="341" width="0.7" height="15.0" fill="rgb(213,161,50)" rx="2" ry="2" />
<text  x="369.87" y="351.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="157.1" y="389" width="0.8" height="15.0" fill="rgb(227,107,39)" rx="2" ry="2" />
<text  x="160.12" y="399.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.13%)</title><rect x="229.6" y="165" width="1.5" height="15.0" fill="rgb(253,85,43)" rx="2" ry="2" />
<text  x="232.55" y="175.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (3 samples, 0.19%)</title><rect x="145.1" y="357" width="2.2" height="15.0" fill="rgb(214,138,6)" rx="2" ry="2" />
<text  x="148.05" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::OperatorEntry (1 samples, 0.06%)</title><rect x="215.2" y="309" width="0.8" height="15.0" fill="rgb(254,210,35)" rx="2" ry="2" />
<text  x="218.22" y="319.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (2 samples, 0.13%)</title><rect x="16.0" y="437" width="1.5" height="15.0" fill="rgb(227,50,11)" rx="2" ry="2" />
<text  x="19.04" y="447.5" ></text>
</g>
<g >
<title>torch::Library::_impl (3 samples, 0.19%)</title><rect x="280.9" y="357" width="2.2" height="15.0" fill="rgb(210,81,20)" rx="2" ry="2" />
<text  x="283.86" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (23 samples, 1.47%)</title><rect x="1107.0" y="165" width="17.4" height="15.0" fill="rgb(245,201,39)" rx="2" ry="2" />
<text  x="1110.01" y="175.5" ></text>
</g>
<g >
<title>search_binary_handler (7 samples, 0.45%)</title><rect x="1184.7" y="389" width="5.3" height="15.0" fill="rgb(230,163,12)" rx="2" ry="2" />
<text  x="1187.72" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="170.7" y="277" width="0.8" height="15.0" fill="rgb(229,46,50)" rx="2" ry="2" />
<text  x="173.70" y="287.5" ></text>
</g>
<g >
<title>torch::jit::parseName (2 samples, 0.13%)</title><rect x="270.3" y="341" width="1.5" height="15.0" fill="rgb(245,217,42)" rx="2" ry="2" />
<text  x="273.29" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (7 samples, 0.45%)</title><rect x="165.4" y="325" width="5.3" height="15.0" fill="rgb(227,31,41)" rx="2" ry="2" />
<text  x="168.42" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::DescriptorPool::InternalAddGeneratedFile (2 samples, 0.13%)</title><rect x="327.6" y="389" width="1.5" height="15.0" fill="rgb(237,200,23)" rx="2" ry="2" />
<text  x="330.63" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="157.1" y="309" width="0.8" height="15.0" fill="rgb(205,226,44)" rx="2" ry="2" />
<text  x="160.12" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_brk (1 samples, 0.06%)</title><rect x="231.8" y="133" width="0.8" height="15.0" fill="rgb(207,99,49)" rx="2" ry="2" />
<text  x="234.82" y="143.5" ></text>
</g>
<g >
<title>torch::empty (301 samples, 19.25%)</title><rect x="514.7" y="389" width="227.1" height="15.0" fill="rgb(219,216,5)" rx="2" ry="2" />
<text  x="517.74" y="399.5" >torch::empty</text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.06%)</title><rect x="1175.7" y="245" width="0.7" height="15.0" fill="rgb(248,88,8)" rx="2" ry="2" />
<text  x="1178.66" y="255.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="308.0" y="261" width="0.8" height="15.0" fill="rgb(242,19,14)" rx="2" ry="2" />
<text  x="311.02" y="271.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::OperatorEntry (3 samples, 0.19%)</title><rect x="166.2" y="309" width="2.2" height="15.0" fill="rgb(241,114,42)" rx="2" ry="2" />
<text  x="169.18" y="319.5" ></text>
</g>
<g >
<title>mmput (13 samples, 0.83%)</title><rect x="1170.4" y="373" width="9.8" height="15.0" fill="rgb(252,0,9)" rx="2" ry="2" />
<text  x="1173.38" y="383.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 0.45%)</title><rect x="337.4" y="37" width="5.3" height="15.0" fill="rgb(222,228,53)" rx="2" ry="2" />
<text  x="340.44" y="47.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (3 samples, 0.19%)</title><rect x="228.8" y="277" width="2.3" height="15.0" fill="rgb(241,212,10)" rx="2" ry="2" />
<text  x="231.80" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (6 samples, 0.38%)</title><rect x="967.4" y="309" width="4.6" height="15.0" fill="rgb(235,145,46)" rx="2" ry="2" />
<text  x="970.43" y="319.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="266.5" y="293" width="0.8" height="15.0" fill="rgb(233,159,18)" rx="2" ry="2" />
<text  x="269.52" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="306.5" y="341" width="0.8" height="15.0" fill="rgb(220,137,53)" rx="2" ry="2" />
<text  x="309.51" y="351.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (24 samples, 1.53%)</title><rect x="240.1" y="325" width="18.1" height="15.0" fill="rgb(241,62,19)" rx="2" ry="2" />
<text  x="243.12" y="335.5" ></text>
</g>
<g >
<title>_dl_catch_exception (3 samples, 0.19%)</title><rect x="145.1" y="373" width="2.2" height="15.0" fill="rgb(239,121,38)" rx="2" ry="2" />
<text  x="148.05" y="383.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (196 samples, 12.53%)</title><rect x="575.1" y="325" width="147.9" height="15.0" fill="rgb(250,135,4)" rx="2" ry="2" />
<text  x="578.10" y="335.5" >c10::impl::wrap_ke..</text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.06%)</title><rect x="234.8" y="309" width="0.8" height="15.0" fill="rgb(237,84,25)" rx="2" ry="2" />
<text  x="237.83" y="319.5" ></text>
</g>
<g >
<title>isalpha@plt (1 samples, 0.06%)</title><rect x="372.9" y="293" width="0.8" height="15.0" fill="rgb(216,74,28)" rx="2" ry="2" />
<text  x="375.90" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::ParseFromArray (1 samples, 0.06%)</title><rect x="327.6" y="357" width="0.8" height="15.0" fill="rgb(213,166,9)" rx="2" ry="2" />
<text  x="330.63" y="367.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="191.8" y="373" width="0.8" height="15.0" fill="rgb(251,84,11)" rx="2" ry="2" />
<text  x="194.83" y="383.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.13%)</title><rect x="19.1" y="437" width="1.5" height="15.0" fill="rgb(244,127,26)" rx="2" ry="2" />
<text  x="22.05" y="447.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::retain_ (2 samples, 0.13%)</title><rect x="882.9" y="341" width="1.5" height="15.0" fill="rgb(232,148,8)" rx="2" ry="2" />
<text  x="885.93" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator bool (1 samples, 0.06%)</title><rect x="830.1" y="341" width="0.8" height="15.0" fill="rgb(232,83,4)" rx="2" ry="2" />
<text  x="833.12" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="228.0" y="309" width="0.8" height="15.0" fill="rgb(245,140,33)" rx="2" ry="2" />
<text  x="231.04" y="319.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="411.4" y="309" width="0.7" height="15.0" fill="rgb(208,62,49)" rx="2" ry="2" />
<text  x="414.38" y="319.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="142.0" y="341" width="0.8" height="15.0" fill="rgb(215,46,54)" rx="2" ry="2" />
<text  x="145.03" y="351.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, c10::AutogradMetaInterface*, false&gt;::_Head_base&lt;c10::AutogradMetaInterface*&amp;&gt; (1 samples, 0.06%)</title><rect x="963.7" y="293" width="0.7" height="15.0" fill="rgb(252,43,35)" rx="2" ry="2" />
<text  x="966.66" y="303.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (1 samples, 0.06%)</title><rect x="845.2" y="357" width="0.8" height="15.0" fill="rgb(233,221,15)" rx="2" ry="2" />
<text  x="848.20" y="367.5" ></text>
</g>
<g >
<title>[example-app] (1 samples, 0.06%)</title><rect x="876.9" y="357" width="0.7" height="15.0" fill="rgb(231,209,54)" rx="2" ry="2" />
<text  x="879.89" y="367.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;unsigned char&gt; (1 samples, 0.06%)</title><rect x="948.6" y="277" width="0.7" height="15.0" fill="rgb(253,50,11)" rx="2" ry="2" />
<text  x="951.57" y="287.5" ></text>
</g>
<g >
<title>exit (38 samples, 2.43%)</title><rect x="408.4" y="421" width="28.6" height="15.0" fill="rgb(236,229,15)" rx="2" ry="2" />
<text  x="411.36" y="431.5" >exit</text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.06%)</title><rect x="271.8" y="341" width="0.8" height="15.0" fill="rgb(238,91,53)" rx="2" ry="2" />
<text  x="274.80" y="351.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (3 samples, 0.19%)</title><rect x="863.3" y="373" width="2.3" height="15.0" fill="rgb(233,68,7)" rx="2" ry="2" />
<text  x="866.31" y="383.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;int&gt; (1 samples, 0.06%)</title><rect x="487.6" y="341" width="0.7" height="15.0" fill="rgb(206,194,32)" rx="2" ry="2" />
<text  x="490.58" y="351.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (2 samples, 0.13%)</title><rect x="317.8" y="309" width="1.5" height="15.0" fill="rgb(227,222,42)" rx="2" ry="2" />
<text  x="320.83" y="319.5" ></text>
</g>
<g >
<title>__libc_malloc (3 samples, 0.19%)</title><rect x="1093.4" y="197" width="2.3" height="15.0" fill="rgb(250,179,39)" rx="2" ry="2" />
<text  x="1096.43" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (5 samples, 0.32%)</title><rect x="894.2" y="309" width="3.8" height="15.0" fill="rgb(211,226,41)" rx="2" ry="2" />
<text  x="897.25" y="319.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.06%)</title><rect x="281.6" y="149" width="0.8" height="15.0" fill="rgb(220,80,30)" rx="2" ry="2" />
<text  x="284.61" y="159.5" ></text>
</g>
<g >
<title>c10::demangle_type&lt;caffe2::gloo::BroadcastOp&lt;caffe2::CPUContext&gt; &gt; (1 samples, 0.06%)</title><rect x="284.6" y="389" width="0.8" height="15.0" fill="rgb(239,226,24)" rx="2" ry="2" />
<text  x="287.63" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="252.9" y="261" width="0.8" height="15.0" fill="rgb(248,144,36)" rx="2" ry="2" />
<text  x="255.94" y="271.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="308.8" y="325" width="0.7" height="15.0" fill="rgb(242,217,6)" rx="2" ry="2" />
<text  x="311.77" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="329.9" y="229" width="0.8" height="15.0" fill="rgb(234,24,51)" rx="2" ry="2" />
<text  x="332.90" y="239.5" ></text>
</g>
<g >
<title>do_mmap (2 samples, 0.13%)</title><rect x="145.8" y="213" width="1.5" height="15.0" fill="rgb(221,202,46)" rx="2" ry="2" />
<text  x="148.81" y="223.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.06%)</title><rect x="171.5" y="309" width="0.7" height="15.0" fill="rgb(233,15,52)" rx="2" ry="2" />
<text  x="174.46" y="319.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_qnormalization.cpp (1 samples, 0.06%)</title><rect x="293.7" y="405" width="0.7" height="15.0" fill="rgb(252,200,21)" rx="2" ry="2" />
<text  x="296.68" y="415.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (56 samples, 3.58%)</title><rect x="745.6" y="389" width="42.3" height="15.0" fill="rgb(233,33,39)" rx="2" ry="2" />
<text  x="748.61" y="399.5" >at:..</text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="190.3" y="261" width="0.8" height="15.0" fill="rgb(254,1,44)" rx="2" ry="2" />
<text  x="193.32" y="271.5" ></text>
</g>
<g >
<title>std::addressof&lt;caffe2::TypeMeta&gt; (1 samples, 0.06%)</title><rect x="504.2" y="325" width="0.7" height="15.0" fill="rgb(230,229,18)" rx="2" ry="2" />
<text  x="507.18" y="335.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::ReportAndDelete (6 samples, 0.38%)</title><rect x="446.1" y="325" width="4.5" height="15.0" fill="rgb(233,127,42)" rx="2" ry="2" />
<text  x="449.09" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="231.8" y="149" width="0.8" height="15.0" fill="rgb(218,59,54)" rx="2" ry="2" />
<text  x="234.82" y="159.5" ></text>
</g>
<g >
<title>__cxa_demangle (1 samples, 0.06%)</title><rect x="305.8" y="357" width="0.7" height="15.0" fill="rgb(238,202,27)" rx="2" ry="2" />
<text  x="308.75" y="367.5" ></text>
</g>
<g >
<title>__sysconf (1 samples, 0.06%)</title><rect x="157.9" y="373" width="0.7" height="15.0" fill="rgb(236,106,9)" rx="2" ry="2" />
<text  x="160.88" y="383.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (3 samples, 0.19%)</title><rect x="661.9" y="181" width="2.2" height="15.0" fill="rgb(205,37,45)" rx="2" ry="2" />
<text  x="664.87" y="191.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (1 samples, 0.06%)</title><rect x="1146.2" y="293" width="0.8" height="15.0" fill="rgb(244,126,10)" rx="2" ry="2" />
<text  x="1149.24" y="303.5" ></text>
</g>
<g >
<title>c10::alloc_cpu (31 samples, 1.98%)</title><rect x="664.1" y="213" width="23.4" height="15.0" fill="rgb(238,110,39)" rx="2" ry="2" />
<text  x="667.13" y="223.5" >c..</text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="206.2" y="325" width="0.7" height="15.0" fill="rgb(253,212,30)" rx="2" ry="2" />
<text  x="209.16" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.06%)</title><rect x="271.0" y="293" width="0.8" height="15.0" fill="rgb(241,171,37)" rx="2" ry="2" />
<text  x="274.05" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (6 samples, 0.38%)</title><rect x="917.6" y="293" width="4.6" height="15.0" fill="rgb(224,55,37)" rx="2" ry="2" />
<text  x="920.63" y="303.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 0.06%)</title><rect x="412.1" y="149" width="0.8" height="15.0" fill="rgb(212,130,49)" rx="2" ry="2" />
<text  x="415.14" y="159.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device&lt;c10::DeviceType const&amp;, int&gt; (23 samples, 1.47%)</title><rect x="793.1" y="389" width="17.4" height="15.0" fill="rgb(210,187,36)" rx="2" ry="2" />
<text  x="796.15" y="399.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (2 samples, 0.13%)</title><rect x="365.4" y="373" width="1.5" height="15.0" fill="rgb(223,81,32)" rx="2" ry="2" />
<text  x="368.36" y="383.5" ></text>
</g>
<g >
<title>c10::Dispatcher::checkSchemaCompatibility (1 samples, 0.06%)</title><rect x="298.2" y="341" width="0.8" height="15.0" fill="rgb(243,183,31)" rx="2" ry="2" />
<text  x="301.21" y="351.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="157.9" y="293" width="0.7" height="15.0" fill="rgb(252,94,40)" rx="2" ry="2" />
<text  x="160.88" y="303.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (146 samples, 9.34%)</title><rect x="603.0" y="277" width="110.2" height="15.0" fill="rgb(205,120,52)" rx="2" ry="2" />
<text  x="606.02" y="287.5" >c10::impl::wr..</text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="329.9" y="261" width="0.8" height="15.0" fill="rgb(210,26,33)" rx="2" ry="2" />
<text  x="332.90" y="271.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::setOperatorHasFallthroughForKey (1 samples, 0.06%)</title><rect x="268.0" y="293" width="0.8" height="15.0" fill="rgb(230,76,12)" rx="2" ry="2" />
<text  x="271.03" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (1 samples, 0.06%)</title><rect x="961.4" y="309" width="0.7" height="15.0" fill="rgb(242,163,36)" rx="2" ry="2" />
<text  x="964.39" y="319.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (5 samples, 0.32%)</title><rect x="894.2" y="277" width="3.8" height="15.0" fill="rgb(243,189,14)" rx="2" ry="2" />
<text  x="897.25" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_insert_node (1 samples, 0.06%)</title><rect x="311.8" y="357" width="0.7" height="15.0" fill="rgb(213,100,26)" rx="2" ry="2" />
<text  x="314.79" y="367.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (307 samples, 19.63%)</title><rect x="99.0" y="421" width="231.7" height="15.0" fill="rgb(209,82,15)" rx="2" ry="2" />
<text  x="102.03" y="431.5" >[ld-2.31.so]</text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_QuantizedCPU (2 samples, 0.13%)</title><rect x="188.1" y="389" width="1.5" height="15.0" fill="rgb(251,143,2)" rx="2" ry="2" />
<text  x="191.06" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="411.4" y="261" width="0.7" height="15.0" fill="rgb(238,52,32)" rx="2" ry="2" />
<text  x="414.38" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.06%)</title><rect x="254.5" y="277" width="0.7" height="15.0" fill="rgb(239,138,12)" rx="2" ry="2" />
<text  x="257.45" y="287.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.06%)</title><rect x="170.7" y="325" width="0.8" height="15.0" fill="rgb(239,90,22)" rx="2" ry="2" />
<text  x="173.70" y="335.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device&lt;c10::DeviceType const&amp;, int&gt; (27 samples, 1.73%)</title><rect x="472.5" y="389" width="20.4" height="15.0" fill="rgb(220,121,37)" rx="2" ry="2" />
<text  x="475.49" y="399.5" ></text>
</g>
<g >
<title>c10::impl::check_tensor_options_and_extract_memory_format (2 samples, 0.13%)</title><rect x="51.5" y="437" width="1.5" height="15.0" fill="rgb(231,126,16)" rx="2" ry="2" />
<text  x="54.50" y="447.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;bool&gt;::constexpr_storage_t&lt;bool&gt; (1 samples, 0.06%)</title><rect x="848.2" y="357" width="0.8" height="15.0" fill="rgb(210,225,11)" rx="2" ry="2" />
<text  x="851.22" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="300.5" y="213" width="0.7" height="15.0" fill="rgb(254,155,6)" rx="2" ry="2" />
<text  x="303.47" y="223.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (1 samples, 0.06%)</title><rect x="187.3" y="373" width="0.8" height="15.0" fill="rgb(237,45,4)" rx="2" ry="2" />
<text  x="190.30" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (4 samples, 0.26%)</title><rect x="258.2" y="309" width="3.0" height="15.0" fill="rgb(216,105,27)" rx="2" ry="2" />
<text  x="261.22" y="319.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.06%)</title><rect x="146.6" y="165" width="0.7" height="15.0" fill="rgb(225,191,20)" rx="2" ry="2" />
<text  x="149.56" y="175.5" ></text>
</g>
<g >
<title>std::make_unique&lt;torch::autograd::AutogradMeta, c10::TensorImpl*, bool&amp;&gt; (101 samples, 6.46%)</title><rect x="885.9" y="357" width="76.2" height="15.0" fill="rgb(237,70,18)" rx="2" ry="2" />
<text  x="888.95" y="367.5" >std::mak..</text>
</g>
<g >
<title>do_sys_open (1 samples, 0.06%)</title><rect x="145.1" y="229" width="0.7" height="15.0" fill="rgb(218,182,49)" rx="2" ry="2" />
<text  x="148.05" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.06%)</title><rect x="366.1" y="309" width="0.8" height="15.0" fill="rgb(212,87,29)" rx="2" ry="2" />
<text  x="369.11" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.06%)</title><rect x="222.0" y="293" width="0.8" height="15.0" fill="rgb(254,182,8)" rx="2" ry="2" />
<text  x="225.01" y="303.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.06%)</title><rect x="199.4" y="309" width="0.7" height="15.0" fill="rgb(237,167,20)" rx="2" ry="2" />
<text  x="202.37" y="319.5" ></text>
</g>
<g >
<title>std::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt;, true&gt; (1 samples, 0.06%)</title><rect x="547.9" y="341" width="0.8" height="15.0" fill="rgb(233,170,33)" rx="2" ry="2" />
<text  x="550.94" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (3 samples, 0.19%)</title><rect x="231.1" y="245" width="2.2" height="15.0" fill="rgb(211,90,6)" rx="2" ry="2" />
<text  x="234.06" y="255.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::initialized (1 samples, 0.06%)</title><rect x="817.3" y="357" width="0.7" height="15.0" fill="rgb(240,15,9)" rx="2" ry="2" />
<text  x="820.29" y="367.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (12 samples, 0.77%)</title><rect x="1171.1" y="293" width="9.1" height="15.0" fill="rgb(218,98,29)" rx="2" ry="2" />
<text  x="1174.14" y="303.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::OperatorEntry (1 samples, 0.06%)</title><rect x="188.1" y="309" width="0.7" height="15.0" fill="rgb(238,199,39)" rx="2" ry="2" />
<text  x="191.06" y="319.5" ></text>
</g>
<g >
<title>[libcufft.so.10.2.0.218] (2 samples, 0.13%)</title><rect x="154.9" y="373" width="1.5" height="15.0" fill="rgb(210,79,40)" rx="2" ry="2" />
<text  x="157.86" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="195.6" y="277" width="0.8" height="15.0" fill="rgb(244,126,28)" rx="2" ry="2" />
<text  x="198.60" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.06%)</title><rect x="898.0" y="309" width="0.8" height="15.0" fill="rgb(235,183,50)" rx="2" ry="2" />
<text  x="901.02" y="319.5" ></text>
</g>
<g >
<title>[libcufft.so.10.2.0.218] (2 samples, 0.13%)</title><rect x="154.9" y="357" width="1.5" height="15.0" fill="rgb(212,209,24)" rx="2" ry="2" />
<text  x="157.86" y="367.5" ></text>
</g>
<g >
<title>torch::empty (244 samples, 15.60%)</title><rect x="984.0" y="373" width="184.1" height="15.0" fill="rgb(229,166,14)" rx="2" ry="2" />
<text  x="987.03" y="383.5" >torch::empty</text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.06%)</title><rect x="402.3" y="405" width="0.8" height="15.0" fill="rgb(238,130,12)" rx="2" ry="2" />
<text  x="405.33" y="415.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="271.8" y="245" width="0.8" height="15.0" fill="rgb(240,157,24)" rx="2" ry="2" />
<text  x="274.80" y="255.5" ></text>
</g>
<g >
<title>perf_event_exec (7 samples, 0.45%)</title><rect x="1184.7" y="341" width="5.3" height="15.0" fill="rgb(212,206,41)" rx="2" ry="2" />
<text  x="1187.72" y="351.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.06%)</title><rect x="265.8" y="373" width="0.7" height="15.0" fill="rgb(248,220,10)" rx="2" ry="2" />
<text  x="268.77" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="28.1" y="437" width="0.8" height="15.0" fill="rgb(231,4,50)" rx="2" ry="2" />
<text  x="31.11" y="447.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::OperatorEntry (2 samples, 0.13%)</title><rect x="182.8" y="293" width="1.5" height="15.0" fill="rgb(228,180,1)" rx="2" ry="2" />
<text  x="185.77" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="408.4" y="245" width="0.7" height="15.0" fill="rgb(239,33,32)" rx="2" ry="2" />
<text  x="411.36" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.06%)</title><rect x="193.3" y="341" width="0.8" height="15.0" fill="rgb(235,133,17)" rx="2" ry="2" />
<text  x="196.34" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (1 samples, 0.06%)</title><rect x="833.9" y="341" width="0.7" height="15.0" fill="rgb(247,217,6)" rx="2" ry="2" />
<text  x="836.89" y="351.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt; (1 samples, 0.06%)</title><rect x="318.6" y="293" width="0.7" height="15.0" fill="rgb(240,43,2)" rx="2" ry="2" />
<text  x="321.58" y="303.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.06%)</title><rect x="195.6" y="325" width="0.8" height="15.0" fill="rgb(252,90,51)" rx="2" ry="2" />
<text  x="198.60" y="335.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.06%)</title><rect x="402.3" y="389" width="0.8" height="15.0" fill="rgb(254,138,14)" rx="2" ry="2" />
<text  x="405.33" y="399.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (1 samples, 0.06%)</title><rect x="286.1" y="389" width="0.8" height="15.0" fill="rgb(240,37,41)" rx="2" ry="2" />
<text  x="289.14" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.06%)</title><rect x="78.7" y="437" width="0.7" height="15.0" fill="rgb(249,195,46)" rx="2" ry="2" />
<text  x="81.66" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (3 samples, 0.19%)</title><rect x="413.6" y="325" width="2.3" height="15.0" fill="rgb(211,111,7)" rx="2" ry="2" />
<text  x="416.64" y="335.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (11 samples, 0.70%)</title><rect x="165.4" y="373" width="8.3" height="15.0" fill="rgb(215,60,13)" rx="2" ry="2" />
<text  x="168.42" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::vector (1 samples, 0.06%)</title><rect x="898.8" y="341" width="0.7" height="15.0" fill="rgb(225,181,32)" rx="2" ry="2" />
<text  x="901.77" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_head (3 samples, 0.19%)</title><rect x="895.8" y="261" width="2.2" height="15.0" fill="rgb(209,64,35)" rx="2" ry="2" />
<text  x="898.75" y="271.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_requires_grad (3 samples, 0.19%)</title><rect x="811.3" y="373" width="2.2" height="15.0" fill="rgb(232,136,8)" rx="2" ry="2" />
<text  x="814.25" y="383.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (4 samples, 0.26%)</title><rect x="1159.1" y="325" width="3.0" height="15.0" fill="rgb(250,147,9)" rx="2" ry="2" />
<text  x="1162.07" y="335.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (2 samples, 0.13%)</title><rect x="279.3" y="389" width="1.6" height="15.0" fill="rgb(245,42,15)" rx="2" ry="2" />
<text  x="282.35" y="399.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (2 samples, 0.13%)</title><rect x="877.6" y="357" width="1.6" height="15.0" fill="rgb(240,89,18)" rx="2" ry="2" />
<text  x="880.65" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::~OperatorEntry (3 samples, 0.19%)</title><rect x="422.7" y="277" width="2.3" height="15.0" fill="rgb(217,147,41)" rx="2" ry="2" />
<text  x="425.70" y="287.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.06%)</title><rect x="265.0" y="245" width="0.8" height="15.0" fill="rgb(236,128,21)" rx="2" ry="2" />
<text  x="268.01" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (1 samples, 0.06%)</title><rect x="79.4" y="437" width="0.8" height="15.0" fill="rgb(233,213,38)" rx="2" ry="2" />
<text  x="82.41" y="447.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.06%)</title><rect x="293.7" y="309" width="0.7" height="15.0" fill="rgb(215,105,19)" rx="2" ry="2" />
<text  x="296.68" y="319.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="142.0" y="181" width="0.8" height="15.0" fill="rgb(250,180,2)" rx="2" ry="2" />
<text  x="145.03" y="191.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="284.6" y="341" width="0.8" height="15.0" fill="rgb(240,185,43)" rx="2" ry="2" />
<text  x="287.63" y="351.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::type_index, std::hash&lt;std::type_index&gt;, ska::detailv3::KeyOrValueHasher&lt;std::type_index, std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::hash&lt;std::type_index&gt; &gt;, std::equal_to&lt;std::type_index&gt;, ska::detailv3::KeyOrValueEquality&lt;std::type_index, std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::equal_to&lt;std::type_index&gt; &gt;, std::allocator&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt; &gt; &gt; &gt;::sherwood_v3_table (1 samples, 0.06%)</title><rect x="291.4" y="293" width="0.8" height="15.0" fill="rgb(233,134,31)" rx="2" ry="2" />
<text  x="294.42" y="303.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_SparseCPU (2 samples, 0.13%)</title><rect x="190.3" y="389" width="1.5" height="15.0" fill="rgb(230,219,14)" rx="2" ry="2" />
<text  x="193.32" y="399.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.06%)</title><rect x="360.1" y="341" width="0.7" height="15.0" fill="rgb(216,125,16)" rx="2" ry="2" />
<text  x="363.08" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.06%)</title><rect x="73.4" y="437" width="0.7" height="15.0" fill="rgb(248,85,44)" rx="2" ry="2" />
<text  x="76.38" y="447.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.06%)</title><rect x="366.9" y="277" width="0.7" height="15.0" fill="rgb(208,222,10)" rx="2" ry="2" />
<text  x="369.87" y="287.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;torch::autograd::Node,  (2 samples, 0.13%)</title><rect x="932.0" y="309" width="1.5" height="15.0" fill="rgb(242,152,43)" rx="2" ry="2" />
<text  x="934.97" y="319.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;  (1 samples, 0.06%)</title><rect x="194.8" y="373" width="0.8" height="15.0" fill="rgb(207,225,22)" rx="2" ry="2" />
<text  x="197.85" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.13%)</title><rect x="423.5" y="261" width="1.5" height="15.0" fill="rgb(241,76,44)" rx="2" ry="2" />
<text  x="426.45" y="271.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TraceType_3.cpp (5 samples, 0.32%)</title><rect x="202.4" y="405" width="3.8" height="15.0" fill="rgb(214,132,13)" rx="2" ry="2" />
<text  x="205.39" y="415.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.06%)</title><rect x="174.5" y="261" width="0.7" height="15.0" fill="rgb(249,31,48)" rx="2" ry="2" />
<text  x="177.48" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt;::allocator (3 samples, 0.19%)</title><rect x="929.0" y="277" width="2.2" height="15.0" fill="rgb(230,159,37)" rx="2" ry="2" />
<text  x="931.95" y="287.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.06%)</title><rect x="200.1" y="229" width="0.8" height="15.0" fill="rgb(236,98,21)" rx="2" ry="2" />
<text  x="203.13" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::get_deleter (1 samples, 0.06%)</title><rect x="85.4" y="437" width="0.8" height="15.0" fill="rgb(236,38,26)" rx="2" ry="2" />
<text  x="88.45" y="447.5" ></text>
</g>
<g >
<title>c10::Device::is_cpu (2 samples, 0.13%)</title><rect x="808.2" y="293" width="1.5" height="15.0" fill="rgb(213,68,25)" rx="2" ry="2" />
<text  x="811.24" y="303.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (4 samples, 0.26%)</title><rect x="206.2" y="389" width="3.0" height="15.0" fill="rgb(219,8,53)" rx="2" ry="2" />
<text  x="209.16" y="399.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.06%)</title><rect x="157.9" y="245" width="0.7" height="15.0" fill="rgb(250,91,37)" rx="2" ry="2" />
<text  x="160.88" y="255.5" ></text>
</g>
<g >
<title>torch::Library::_def (2 samples, 0.13%)</title><rect x="209.9" y="373" width="1.5" height="15.0" fill="rgb(232,142,31)" rx="2" ry="2" />
<text  x="212.94" y="383.5" ></text>
</g>
<g >
<title>c10::Registerer&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::shared_ptr&lt;c10::TaskThreadPoolBase&gt;, int, int, bool&gt;::Registerer (1 samples, 0.06%)</title><rect x="187.3" y="389" width="0.8" height="15.0" fill="rgb(243,63,54)" rx="2" ry="2" />
<text  x="190.30" y="399.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.06%)</title><rect x="293.7" y="325" width="0.7" height="15.0" fill="rgb(207,119,45)" rx="2" ry="2" />
<text  x="296.68" y="335.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (7 samples, 0.45%)</title><rect x="1086.6" y="197" width="5.3" height="15.0" fill="rgb(218,59,49)" rx="2" ry="2" />
<text  x="1089.64" y="207.5" ></text>
</g>
<g >
<title>c10::demangle_type&lt;caffe2::IntegralImageOp&lt;float, caffe2::CUDAContext&gt; &gt; (1 samples, 0.06%)</title><rect x="295.9" y="389" width="0.8" height="15.0" fill="rgb(212,98,52)" rx="2" ry="2" />
<text  x="298.95" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.13%)</title><rect x="326.1" y="261" width="1.5" height="15.0" fill="rgb(234,117,21)" rx="2" ry="2" />
<text  x="329.13" y="271.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.06%)</title><rect x="279.3" y="261" width="0.8" height="15.0" fill="rgb(249,96,0)" rx="2" ry="2" />
<text  x="282.35" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="243.1" y="133" width="0.8" height="15.0" fill="rgb(235,222,36)" rx="2" ry="2" />
<text  x="246.13" y="143.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.06%)</title><rect x="411.4" y="213" width="0.7" height="15.0" fill="rgb(254,128,16)" rx="2" ry="2" />
<text  x="414.38" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="280.9" y="197" width="0.7" height="15.0" fill="rgb(251,67,11)" rx="2" ry="2" />
<text  x="283.86" y="207.5" ></text>
</g>
<g >
<title>__default_morecore (1 samples, 0.06%)</title><rect x="231.8" y="213" width="0.8" height="15.0" fill="rgb(213,84,48)" rx="2" ry="2" />
<text  x="234.82" y="223.5" ></text>
</g>
<g >
<title>[libtorch_cuda.so] (1 samples, 0.06%)</title><rect x="295.9" y="373" width="0.8" height="15.0" fill="rgb(237,112,10)" rx="2" ry="2" />
<text  x="298.95" y="383.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (3 samples, 0.19%)</title><rect x="288.4" y="341" width="2.3" height="15.0" fill="rgb(218,28,33)" rx="2" ry="2" />
<text  x="291.40" y="351.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="308.0" y="277" width="0.8" height="15.0" fill="rgb(253,67,42)" rx="2" ry="2" />
<text  x="311.02" y="287.5" ></text>
</g>
<g >
<title>extract_crng (1 samples, 0.06%)</title><rect x="1169.6" y="325" width="0.8" height="15.0" fill="rgb(206,113,11)" rx="2" ry="2" />
<text  x="1172.63" y="335.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.06%)</title><rect x="1174.9" y="277" width="0.8" height="15.0" fill="rgb(251,215,39)" rx="2" ry="2" />
<text  x="1177.91" y="287.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="275.6" y="373" width="0.7" height="15.0" fill="rgb(234,150,8)" rx="2" ry="2" />
<text  x="278.58" y="383.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.06%)</title><rect x="157.1" y="277" width="0.8" height="15.0" fill="rgb(206,49,5)" rx="2" ry="2" />
<text  x="160.12" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::~vector (6 samples, 0.38%)</title><rect x="770.5" y="293" width="4.5" height="15.0" fill="rgb(224,31,41)" rx="2" ry="2" />
<text  x="773.51" y="303.5" ></text>
</g>
<g >
<title>at::hasCallbacks (3 samples, 0.19%)</title><rect x="570.6" y="309" width="2.2" height="15.0" fill="rgb(220,149,34)" rx="2" ry="2" />
<text  x="573.58" y="319.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.06%)</title><rect x="785.6" y="293" width="0.8" height="15.0" fill="rgb(215,119,50)" rx="2" ry="2" />
<text  x="788.60" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="366.9" y="261" width="0.7" height="15.0" fill="rgb(245,101,49)" rx="2" ry="2" />
<text  x="369.87" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.06%)</title><rect x="158.6" y="325" width="0.8" height="15.0" fill="rgb(234,56,13)" rx="2" ry="2" />
<text  x="161.63" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (6 samples, 0.38%)</title><rect x="748.6" y="341" width="4.6" height="15.0" fill="rgb(253,171,20)" rx="2" ry="2" />
<text  x="751.63" y="351.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.06%)</title><rect x="326.9" y="197" width="0.7" height="15.0" fill="rgb(230,15,26)" rx="2" ry="2" />
<text  x="329.88" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="281.6" y="181" width="0.8" height="15.0" fill="rgb(206,91,43)" rx="2" ry="2" />
<text  x="284.61" y="191.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator bool (1 samples, 0.06%)</title><rect x="1157.6" y="325" width="0.7" height="15.0" fill="rgb(206,32,6)" rx="2" ry="2" />
<text  x="1160.56" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.13%)</title><rect x="20.6" y="437" width="1.5" height="15.0" fill="rgb(236,13,15)" rx="2" ry="2" />
<text  x="23.56" y="447.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (2 samples, 0.13%)</title><rect x="360.1" y="389" width="1.5" height="15.0" fill="rgb(242,16,35)" rx="2" ry="2" />
<text  x="363.08" y="399.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.06%)</title><rect x="287.6" y="309" width="0.8" height="15.0" fill="rgb(240,106,47)" rx="2" ry="2" />
<text  x="290.65" y="319.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="382.0" y="405" width="0.7" height="15.0" fill="rgb(247,227,51)" rx="2" ry="2" />
<text  x="384.96" y="415.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (7 samples, 0.45%)</title><rect x="337.4" y="197" width="5.3" height="15.0" fill="rgb(240,6,7)" rx="2" ry="2" />
<text  x="340.44" y="207.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (3 samples, 0.19%)</title><rect x="758.4" y="277" width="2.3" height="15.0" fill="rgb(230,123,39)" rx="2" ry="2" />
<text  x="761.44" y="287.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (70 samples, 4.48%)</title><rect x="99.0" y="389" width="52.8" height="15.0" fill="rgb(224,213,40)" rx="2" ry="2" />
<text  x="102.03" y="399.5" >[ld-2..</text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="305.8" y="341" width="0.7" height="15.0" fill="rgb(229,43,11)" rx="2" ry="2" />
<text  x="308.75" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (1 samples, 0.06%)</title><rect x="301.2" y="341" width="0.8" height="15.0" fill="rgb(235,91,43)" rx="2" ry="2" />
<text  x="304.23" y="351.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (1 samples, 0.06%)</title><rect x="514.0" y="373" width="0.7" height="15.0" fill="rgb(232,43,0)" rx="2" ry="2" />
<text  x="516.99" y="383.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.06%)</title><rect x="283.9" y="357" width="0.7" height="15.0" fill="rgb(240,68,42)" rx="2" ry="2" />
<text  x="286.87" y="367.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="308.8" y="277" width="0.7" height="15.0" fill="rgb(229,119,45)" rx="2" ry="2" />
<text  x="311.77" y="287.5" ></text>
</g>
<g >
<title>brk (1 samples, 0.06%)</title><rect x="280.9" y="213" width="0.7" height="15.0" fill="rgb(241,211,31)" rx="2" ry="2" />
<text  x="283.86" y="223.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.06%)</title><rect x="292.2" y="245" width="0.7" height="15.0" fill="rgb(248,135,42)" rx="2" ry="2" />
<text  x="295.17" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="206.2" y="213" width="0.7" height="15.0" fill="rgb(209,112,43)" rx="2" ry="2" />
<text  x="209.16" y="223.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator bool (1 samples, 0.06%)</title><rect x="879.9" y="341" width="0.8" height="15.0" fill="rgb(242,25,36)" rx="2" ry="2" />
<text  x="882.91" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="434.0" y="309" width="0.8" height="15.0" fill="rgb(208,103,53)" rx="2" ry="2" />
<text  x="437.02" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="186.5" y="261" width="0.8" height="15.0" fill="rgb(235,29,20)" rx="2" ry="2" />
<text  x="189.55" y="271.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerDef (1 samples, 0.06%)</title><rect x="298.2" y="357" width="0.8" height="15.0" fill="rgb(215,218,47)" rx="2" ry="2" />
<text  x="301.21" y="367.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.06%)</title><rect x="160.1" y="341" width="0.8" height="15.0" fill="rgb(207,192,9)" rx="2" ry="2" />
<text  x="163.14" y="351.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (1 samples, 0.06%)</title><rect x="355.5" y="437" width="0.8" height="15.0" fill="rgb(224,154,14)" rx="2" ry="2" />
<text  x="358.55" y="447.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.06%)</title><rect x="277.1" y="309" width="0.7" height="15.0" fill="rgb(239,109,39)" rx="2" ry="2" />
<text  x="280.08" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.19%)</title><rect x="152.6" y="261" width="2.3" height="15.0" fill="rgb(226,75,23)" rx="2" ry="2" />
<text  x="155.60" y="271.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (12 samples, 0.77%)</title><rect x="649.0" y="229" width="9.1" height="15.0" fill="rgb(250,140,4)" rx="2" ry="2" />
<text  x="652.04" y="239.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="168.4" y="229" width="0.8" height="15.0" fill="rgb(218,90,33)" rx="2" ry="2" />
<text  x="171.44" y="239.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (39 samples, 2.49%)</title><rect x="438.5" y="373" width="29.5" height="15.0" fill="rgb(227,94,23)" rx="2" ry="2" />
<text  x="441.54" y="383.5" >c1..</text>
</g>
<g >
<title>__default_morecore (1 samples, 0.06%)</title><rect x="280.9" y="245" width="0.7" height="15.0" fill="rgb(245,5,34)" rx="2" ry="2" />
<text  x="283.86" y="255.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="309.5" y="373" width="0.8" height="15.0" fill="rgb(252,67,35)" rx="2" ry="2" />
<text  x="312.53" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;torch::jit::Operator, std::allocator&lt;torch::jit::Operator&gt;,  (1 samples, 0.06%)</title><rect x="434.8" y="325" width="0.7" height="15.0" fill="rgb(223,221,17)" rx="2" ry="2" />
<text  x="437.77" y="335.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.06%)</title><rect x="965.9" y="261" width="0.8" height="15.0" fill="rgb(246,202,7)" rx="2" ry="2" />
<text  x="968.92" y="271.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;c10::OperatorKernel*, std::default_delete&lt;c10::OperatorKernel&gt;, std::allocator&lt;void&gt;,  (1 samples, 0.06%)</title><rect x="431.8" y="245" width="0.7" height="15.0" fill="rgb(254,57,26)" rx="2" ry="2" />
<text  x="434.75" y="255.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.06%)</title><rect x="323.1" y="309" width="0.8" height="15.0" fill="rgb(251,64,20)" rx="2" ry="2" />
<text  x="326.11" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="289.9" y="261" width="0.8" height="15.0" fill="rgb(224,101,31)" rx="2" ry="2" />
<text  x="292.91" y="271.5" ></text>
</g>
<g >
<title>caffe2::operator== (3 samples, 0.19%)</title><rect x="949.3" y="277" width="2.3" height="15.0" fill="rgb(219,156,33)" rx="2" ry="2" />
<text  x="952.32" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_realloc_insert&lt;torch::jit::Token&gt; (1 samples, 0.06%)</title><rect x="371.4" y="293" width="0.7" height="15.0" fill="rgb(251,160,33)" rx="2" ry="2" />
<text  x="374.39" y="303.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional (8 samples, 0.51%)</title><rect x="501.2" y="357" width="6.0" height="15.0" fill="rgb(211,176,31)" rx="2" ry="2" />
<text  x="504.16" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="305.8" y="325" width="0.7" height="15.0" fill="rgb(207,9,40)" rx="2" ry="2" />
<text  x="308.75" y="335.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.06%)</title><rect x="210.7" y="325" width="0.7" height="15.0" fill="rgb(248,167,45)" rx="2" ry="2" />
<text  x="213.69" y="335.5" ></text>
</g>
<g >
<title>c10::GetCPUAllocator (1 samples, 0.06%)</title><rect x="1125.1" y="229" width="0.8" height="15.0" fill="rgb(238,216,50)" rx="2" ry="2" />
<text  x="1128.12" y="239.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::~AutoNonVariableTypeMode (3 samples, 0.19%)</title><rect x="556.2" y="357" width="2.3" height="15.0" fill="rgb(232,57,21)" rx="2" ry="2" />
<text  x="559.24" y="367.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.06%)</title><rect x="1170.4" y="325" width="0.7" height="15.0" fill="rgb(233,63,31)" rx="2" ry="2" />
<text  x="1173.38" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (1 samples, 0.06%)</title><rect x="216.7" y="293" width="0.8" height="15.0" fill="rgb(220,228,21)" rx="2" ry="2" />
<text  x="219.73" y="303.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (3 samples, 0.19%)</title><rect x="139.8" y="341" width="2.2" height="15.0" fill="rgb(245,133,41)" rx="2" ry="2" />
<text  x="142.77" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::retain_ (1 samples, 0.06%)</title><rect x="885.2" y="357" width="0.7" height="15.0" fill="rgb(205,2,29)" rx="2" ry="2" />
<text  x="888.19" y="367.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.06%)</title><rect x="361.6" y="437" width="0.7" height="15.0" fill="rgb(232,55,30)" rx="2" ry="2" />
<text  x="364.59" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.13%)</title><rect x="229.6" y="149" width="1.5" height="15.0" fill="rgb(210,200,17)" rx="2" ry="2" />
<text  x="232.55" y="159.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.06%)</title><rect x="279.3" y="325" width="0.8" height="15.0" fill="rgb(211,101,50)" rx="2" ry="2" />
<text  x="282.35" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="274.8" y="309" width="0.8" height="15.0" fill="rgb(244,215,38)" rx="2" ry="2" />
<text  x="277.82" y="319.5" ></text>
</g>
<g >
<title>c10::Device::validate (2 samples, 0.13%)</title><rect x="1032.3" y="293" width="1.5" height="15.0" fill="rgb(253,208,40)" rx="2" ry="2" />
<text  x="1035.31" y="303.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator-- (1 samples, 0.06%)</title><rect x="787.1" y="341" width="0.8" height="15.0" fill="rgb(244,134,38)" rx="2" ry="2" />
<text  x="790.11" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.06%)</title><rect x="294.4" y="309" width="0.8" height="15.0" fill="rgb(216,177,20)" rx="2" ry="2" />
<text  x="297.44" y="319.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_jit_avx_f32_copy_an_kern_autogen.cpp (1 samples, 0.06%)</title><rect x="286.1" y="405" width="0.8" height="15.0" fill="rgb(236,5,18)" rx="2" ry="2" />
<text  x="289.14" y="415.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (2 samples, 0.13%)</title><rect x="289.2" y="277" width="1.5" height="15.0" fill="rgb(244,196,21)" rx="2" ry="2" />
<text  x="292.16" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;c10::ClassType&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.06%)</title><rect x="289.2" y="245" width="0.7" height="15.0" fill="rgb(237,12,46)" rx="2" ry="2" />
<text  x="292.16" y="255.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.06%)</title><rect x="283.1" y="325" width="0.8" height="15.0" fill="rgb(248,37,51)" rx="2" ry="2" />
<text  x="286.12" y="335.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (140 samples, 8.95%)</title><rect x="607.5" y="261" width="105.7" height="15.0" fill="rgb(211,195,20)" rx="2" ry="2" />
<text  x="610.54" y="271.5" >c10::impl::d..</text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.06%)</title><rect x="252.9" y="245" width="0.8" height="15.0" fill="rgb(236,161,18)" rx="2" ry="2" />
<text  x="255.94" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::DispatchKey, c10::DispatchKey, std::allocator&lt;c10::DispatchKey&gt;, std::__detail::_Identity, std::equal_to&lt;c10::DispatchKey&gt;, std::hash&lt;c10::DispatchKey&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_rehash (1 samples, 0.06%)</title><rect x="297.5" y="357" width="0.7" height="15.0" fill="rgb(254,164,41)" rx="2" ry="2" />
<text  x="300.46" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (1 samples, 0.06%)</title><rect x="299.0" y="357" width="0.7" height="15.0" fill="rgb(246,122,4)" rx="2" ry="2" />
<text  x="301.96" y="367.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="195.6" y="341" width="0.8" height="15.0" fill="rgb(214,212,28)" rx="2" ry="2" />
<text  x="198.60" y="351.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="200.1" y="341" width="0.8" height="15.0" fill="rgb(208,99,15)" rx="2" ry="2" />
<text  x="203.13" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (153 samples, 9.78%)</title><rect x="597.7" y="293" width="115.5" height="15.0" fill="rgb(254,77,52)" rx="2" ry="2" />
<text  x="600.74" y="303.5" >c10::Dispatche..</text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_rehash (1 samples, 0.06%)</title><rect x="367.6" y="293" width="0.8" height="15.0" fill="rgb(206,111,15)" rx="2" ry="2" />
<text  x="370.62" y="303.5" ></text>
</g>
<g >
<title>c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt;::singleton (1 samples, 0.06%)</title><rect x="880.7" y="325" width="0.7" height="15.0" fill="rgb(248,62,11)" rx="2" ry="2" />
<text  x="883.66" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="308.8" y="357" width="0.7" height="15.0" fill="rgb(252,110,29)" rx="2" ry="2" />
<text  x="311.77" y="367.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (70 samples, 4.48%)</title><rect x="99.0" y="405" width="52.8" height="15.0" fill="rgb(238,116,30)" rx="2" ry="2" />
<text  x="102.03" y="415.5" >[ld-2..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_M_head (4 samples, 0.26%)</title><rect x="551.7" y="293" width="3.0" height="15.0" fill="rgb(235,219,3)" rx="2" ry="2" />
<text  x="554.71" y="303.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.06%)</title><rect x="196.4" y="325" width="0.7" height="15.0" fill="rgb(225,37,27)" rx="2" ry="2" />
<text  x="199.36" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.96%)</title><rect x="1168.9" y="437" width="11.3" height="15.0" fill="rgb(211,173,35)" rx="2" ry="2" />
<text  x="1171.87" y="447.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="173.7" y="309" width="0.8" height="15.0" fill="rgb(241,94,26)" rx="2" ry="2" />
<text  x="176.72" y="319.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.06%)</title><rect x="203.1" y="341" width="0.8" height="15.0" fill="rgb(231,197,44)" rx="2" ry="2" />
<text  x="206.15" y="351.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="271.8" y="277" width="0.8" height="15.0" fill="rgb(236,48,11)" rx="2" ry="2" />
<text  x="274.80" y="287.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.06%)</title><rect x="190.3" y="325" width="0.8" height="15.0" fill="rgb(212,39,8)" rx="2" ry="2" />
<text  x="193.32" y="335.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;short&gt; (1 samples, 0.06%)</title><rect x="946.3" y="277" width="0.8" height="15.0" fill="rgb(216,199,13)" rx="2" ry="2" />
<text  x="949.30" y="287.5" ></text>
</g>
<g >
<title>c10::dtype (27 samples, 1.73%)</title><rect x="493.6" y="389" width="20.4" height="15.0" fill="rgb(210,63,34)" rx="2" ry="2" />
<text  x="496.62" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_erase (2 samples, 0.13%)</title><rect x="249.2" y="261" width="1.5" height="15.0" fill="rgb(222,172,13)" rx="2" ry="2" />
<text  x="252.17" y="271.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.13%)</title><rect x="280.9" y="293" width="1.5" height="15.0" fill="rgb(251,80,1)" rx="2" ry="2" />
<text  x="283.86" y="303.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.06%)</title><rect x="159.4" y="341" width="0.7" height="15.0" fill="rgb(213,91,45)" rx="2" ry="2" />
<text  x="162.39" y="351.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.06%)</title><rect x="228.0" y="101" width="0.8" height="15.0" fill="rgb(240,12,47)" rx="2" ry="2" />
<text  x="231.04" y="111.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.06%)</title><rect x="374.4" y="437" width="0.8" height="15.0" fill="rgb(241,175,9)" rx="2" ry="2" />
<text  x="377.41" y="447.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (1 samples, 0.06%)</title><rect x="273.3" y="309" width="0.8" height="15.0" fill="rgb(209,91,22)" rx="2" ry="2" />
<text  x="276.31" y="319.5" ></text>
</g>
<g >
<title>Xbyak::Opmask::Opmask (1 samples, 0.06%)</title><rect x="286.9" y="373" width="0.7" height="15.0" fill="rgb(234,56,0)" rx="2" ry="2" />
<text  x="289.89" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (3 samples, 0.19%)</title><rect x="439.3" y="341" width="2.3" height="15.0" fill="rgb(254,194,11)" rx="2" ry="2" />
<text  x="442.30" y="351.5" ></text>
</g>
<g >
<title>c10::TensorOptions::TensorOptions (6 samples, 0.38%)</title><rect x="495.1" y="373" width="4.6" height="15.0" fill="rgb(248,83,30)" rx="2" ry="2" />
<text  x="498.13" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="300.5" y="341" width="0.7" height="15.0" fill="rgb(220,117,35)" rx="2" ry="2" />
<text  x="303.47" y="351.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.06%)</title><rect x="186.5" y="325" width="0.8" height="15.0" fill="rgb(242,66,22)" rx="2" ry="2" />
<text  x="189.55" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::EncodedDescriptorDatabase::EncodedDescriptorDatabase (1 samples, 0.06%)</title><rect x="328.4" y="373" width="0.7" height="15.0" fill="rgb(215,70,50)" rx="2" ry="2" />
<text  x="331.39" y="383.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.06%)</title><rect x="280.9" y="133" width="0.7" height="15.0" fill="rgb(254,106,52)" rx="2" ry="2" />
<text  x="283.86" y="143.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (37 samples, 2.37%)</title><rect x="296.7" y="405" width="27.9" height="15.0" fill="rgb(248,169,54)" rx="2" ry="2" />
<text  x="299.70" y="415.5" >_..</text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.06%)</title><rect x="302.0" y="357" width="0.7" height="15.0" fill="rgb(252,134,19)" rx="2" ry="2" />
<text  x="304.98" y="367.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseList (1 samples, 0.06%)</title><rect x="239.4" y="277" width="0.7" height="15.0" fill="rgb(252,226,28)" rx="2" ry="2" />
<text  x="242.36" y="287.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.06%)</title><rect x="210.7" y="357" width="0.7" height="15.0" fill="rgb(254,204,14)" rx="2" ry="2" />
<text  x="213.69" y="367.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (3 samples, 0.19%)</title><rect x="152.6" y="373" width="2.3" height="15.0" fill="rgb(222,213,10)" rx="2" ry="2" />
<text  x="155.60" y="383.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.06%)</title><rect x="364.6" y="357" width="0.8" height="15.0" fill="rgb(223,220,3)" rx="2" ry="2" />
<text  x="367.60" y="367.5" ></text>
</g>
<g >
<title>do_exit (13 samples, 0.83%)</title><rect x="1170.4" y="389" width="9.8" height="15.0" fill="rgb(223,1,42)" rx="2" ry="2" />
<text  x="1173.38" y="399.5" ></text>
</g>
<g >
<title>__cudaUnregisterBinaryUtil (1 samples, 0.06%)</title><rect x="411.4" y="341" width="0.7" height="15.0" fill="rgb(239,228,0)" rx="2" ry="2" />
<text  x="414.38" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::addRegistrationListener (2 samples, 0.13%)</title><rect x="329.1" y="389" width="1.6" height="15.0" fill="rgb(228,202,52)" rx="2" ry="2" />
<text  x="332.14" y="399.5" ></text>
</g>
<g >
<title>at::is_custom_op (1 samples, 0.06%)</title><rect x="382.0" y="437" width="0.7" height="15.0" fill="rgb(206,229,33)" rx="2" ry="2" />
<text  x="384.96" y="447.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (3 samples, 0.19%)</title><rect x="91.5" y="437" width="2.2" height="15.0" fill="rgb(233,136,38)" rx="2" ry="2" />
<text  x="94.48" y="447.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.06%)</title><rect x="157.1" y="261" width="0.8" height="15.0" fill="rgb(225,57,11)" rx="2" ry="2" />
<text  x="160.12" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.06%)</title><rect x="246.9" y="293" width="0.8" height="15.0" fill="rgb(252,192,29)" rx="2" ry="2" />
<text  x="249.91" y="303.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.06%)</title><rect x="274.8" y="357" width="0.8" height="15.0" fill="rgb(239,132,24)" rx="2" ry="2" />
<text  x="277.82" y="367.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.06%)</title><rect x="323.9" y="277" width="0.7" height="15.0" fill="rgb(215,215,1)" rx="2" ry="2" />
<text  x="326.86" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="142.0" y="293" width="0.8" height="15.0" fill="rgb(249,211,39)" rx="2" ry="2" />
<text  x="145.03" y="303.5" ></text>
</g>
<g >
<title>__sti____cudaRegisterAll (4 samples, 0.26%)</title><rect x="324.6" y="405" width="3.0" height="15.0" fill="rgb(224,229,32)" rx="2" ry="2" />
<text  x="327.62" y="415.5" ></text>
</g>
<g >
<title>c10::ObservedOperators::isObserved (1 samples, 0.06%)</title><rect x="166.9" y="293" width="0.8" height="15.0" fill="rgb(243,139,47)" rx="2" ry="2" />
<text  x="169.93" y="303.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::setOperatorHasFallthroughForKey@plt (1 samples, 0.06%)</title><rect x="315.6" y="325" width="0.7" height="15.0" fill="rgb(240,190,23)" rx="2" ry="2" />
<text  x="318.56" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator bool (1 samples, 0.06%)</title><rect x="528.3" y="341" width="0.8" height="15.0" fill="rgb(218,203,14)" rx="2" ry="2" />
<text  x="531.32" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="155.6" y="293" width="0.8" height="15.0" fill="rgb(223,112,40)" rx="2" ry="2" />
<text  x="158.61" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="360.8" y="245" width="0.8" height="15.0" fill="rgb(247,114,50)" rx="2" ry="2" />
<text  x="363.83" y="255.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::~AutogradMeta (20 samples, 1.28%)</title><rect x="761.5" y="325" width="15.0" height="15.0" fill="rgb(231,11,44)" rx="2" ry="2" />
<text  x="764.46" y="335.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (4 samples, 0.26%)</title><rect x="661.1" y="197" width="3.0" height="15.0" fill="rgb(242,207,8)" rx="2" ry="2" />
<text  x="664.11" y="207.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (18 samples, 1.15%)</title><rect x="244.6" y="309" width="13.6" height="15.0" fill="rgb(239,172,0)" rx="2" ry="2" />
<text  x="247.64" y="319.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="335.9" y="213" width="0.8" height="15.0" fill="rgb(253,183,49)" rx="2" ry="2" />
<text  x="338.93" y="223.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="272.6" y="373" width="0.7" height="15.0" fill="rgb(215,213,43)" rx="2" ry="2" />
<text  x="275.56" y="383.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (2 samples, 0.13%)</title><rect x="93.7" y="437" width="1.6" height="15.0" fill="rgb(236,112,36)" rx="2" ry="2" />
<text  x="96.75" y="447.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.06%)</title><rect x="431.0" y="245" width="0.8" height="15.0" fill="rgb(210,36,37)" rx="2" ry="2" />
<text  x="434.00" y="255.5" ></text>
</g>
<g >
<title>c10::impl::check_tensor_options_and_extract_memory_format (3 samples, 0.19%)</title><rect x="717.7" y="293" width="2.3" height="15.0" fill="rgb(233,0,15)" rx="2" ry="2" />
<text  x="720.70" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (1 samples, 0.06%)</title><rect x="249.9" y="213" width="0.8" height="15.0" fill="rgb(213,93,18)" rx="2" ry="2" />
<text  x="252.92" y="223.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (9 samples, 0.58%)</title><rect x="335.9" y="309" width="6.8" height="15.0" fill="rgb(222,7,29)" rx="2" ry="2" />
<text  x="338.93" y="319.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="327.6" y="261" width="0.8" height="15.0" fill="rgb(217,60,1)" rx="2" ry="2" />
<text  x="330.63" y="271.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.06%)</title><rect x="316.3" y="325" width="0.8" height="15.0" fill="rgb(219,63,38)" rx="2" ry="2" />
<text  x="319.32" y="335.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (5 samples, 0.32%)</title><rect x="446.8" y="293" width="3.8" height="15.0" fill="rgb(251,224,0)" rx="2" ry="2" />
<text  x="449.84" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="326.1" y="181" width="0.8" height="15.0" fill="rgb(245,19,52)" rx="2" ry="2" />
<text  x="329.13" y="191.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VariableType_2.cpp (4 samples, 0.26%)</title><rect x="274.8" y="405" width="3.0" height="15.0" fill="rgb(220,134,11)" rx="2" ry="2" />
<text  x="277.82" y="415.5" ></text>
</g>
<g >
<title>torch::CppFunction::makeUnboxedOnly&lt;at::Tensor&amp;  (1 samples, 0.06%)</title><rect x="176.0" y="373" width="0.7" height="15.0" fill="rgb(205,227,6)" rx="2" ry="2" />
<text  x="178.98" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (14 samples, 0.90%)</title><rect x="342.7" y="437" width="10.6" height="15.0" fill="rgb(228,222,6)" rx="2" ry="2" />
<text  x="345.72" y="447.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TraceType_4.cpp (4 samples, 0.26%)</title><rect x="206.2" y="405" width="3.0" height="15.0" fill="rgb(231,153,13)" rx="2" ry="2" />
<text  x="209.16" y="415.5" ></text>
</g>
<g >
<title>c10::alloc_cpu (29 samples, 1.85%)</title><rect x="1102.5" y="213" width="21.9" height="15.0" fill="rgb(236,20,35)" rx="2" ry="2" />
<text  x="1105.48" y="223.5" >c..</text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="168.4" y="181" width="0.8" height="15.0" fill="rgb(240,152,17)" rx="2" ry="2" />
<text  x="171.44" y="191.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::setOperatorHasFallthroughForKey (1 samples, 0.06%)</title><rect x="264.3" y="293" width="0.7" height="15.0" fill="rgb(244,44,20)" rx="2" ry="2" />
<text  x="267.26" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.06%)</title><rect x="194.8" y="309" width="0.8" height="15.0" fill="rgb(218,168,35)" rx="2" ry="2" />
<text  x="197.85" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="366.9" y="293" width="0.7" height="15.0" fill="rgb(254,160,40)" rx="2" ry="2" />
<text  x="369.87" y="303.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.06%)</title><rect x="335.2" y="309" width="0.7" height="15.0" fill="rgb(232,105,23)" rx="2" ry="2" />
<text  x="338.18" y="319.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="243.1" y="117" width="0.8" height="15.0" fill="rgb(223,208,31)" rx="2" ry="2" />
<text  x="246.13" y="127.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="483.1" y="341" width="0.7" height="15.0" fill="rgb(231,72,18)" rx="2" ry="2" />
<text  x="486.06" y="351.5" ></text>
</g>
<g >
<title>c10::(anonymous namespace)::entries (1 samples, 0.06%)</title><rect x="1168.1" y="453" width="0.8" height="15.0" fill="rgb(241,180,26)" rx="2" ry="2" />
<text  x="1171.12" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="292.2" y="293" width="0.7" height="15.0" fill="rgb(228,229,32)" rx="2" ry="2" />
<text  x="295.17" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="296.7" y="325" width="0.8" height="15.0" fill="rgb(215,100,31)" rx="2" ry="2" />
<text  x="299.70" y="335.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (2 samples, 0.13%)</title><rect x="394.8" y="405" width="1.5" height="15.0" fill="rgb(252,121,36)" rx="2" ry="2" />
<text  x="397.78" y="415.5" ></text>
</g>
<g >
<title>[libcudart.so.11.0.194] (2 samples, 0.13%)</title><rect x="409.9" y="341" width="1.5" height="15.0" fill="rgb(250,4,47)" rx="2" ry="2" />
<text  x="412.87" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (1 samples, 0.06%)</title><rect x="158.6" y="309" width="0.8" height="15.0" fill="rgb(243,176,6)" rx="2" ry="2" />
<text  x="161.63" y="319.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="266.5" y="309" width="0.8" height="15.0" fill="rgb(254,58,15)" rx="2" ry="2" />
<text  x="269.52" y="319.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.06%)</title><rect x="206.2" y="197" width="0.7" height="15.0" fill="rgb(240,158,41)" rx="2" ry="2" />
<text  x="209.16" y="207.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (3 samples, 0.19%)</title><rect x="320.1" y="325" width="2.3" height="15.0" fill="rgb(233,32,10)" rx="2" ry="2" />
<text  x="323.09" y="335.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="705.6" y="213" width="0.8" height="15.0" fill="rgb(211,36,48)" rx="2" ry="2" />
<text  x="708.63" y="223.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (1 samples, 0.06%)</title><rect x="181.3" y="293" width="0.7" height="15.0" fill="rgb(246,109,26)" rx="2" ry="2" />
<text  x="184.27" y="303.5" ></text>
</g>
<g >
<title>elf_map (1 samples, 0.06%)</title><rect x="1168.9" y="357" width="0.7" height="15.0" fill="rgb(253,146,15)" rx="2" ry="2" />
<text  x="1171.87" y="367.5" ></text>
</g>
<g >
<title>all (1,564 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(233,142,48)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (1 samples, 0.06%)</title><rect x="64.3" y="437" width="0.8" height="15.0" fill="rgb(221,175,13)" rx="2" ry="2" />
<text  x="67.32" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::~_Vector_base (3 samples, 0.19%)</title><rect x="772.8" y="277" width="2.2" height="15.0" fill="rgb(249,177,32)" rx="2" ry="2" />
<text  x="775.77" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="284.6" y="309" width="0.8" height="15.0" fill="rgb(206,70,43)" rx="2" ry="2" />
<text  x="287.63" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.06%)</title><rect x="322.4" y="277" width="0.7" height="15.0" fill="rgb(229,93,14)" rx="2" ry="2" />
<text  x="325.35" y="287.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="277.1" y="245" width="0.7" height="15.0" fill="rgb(236,97,38)" rx="2" ry="2" />
<text  x="280.08" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (2 samples, 0.13%)</title><rect x="405.3" y="325" width="1.6" height="15.0" fill="rgb(213,189,8)" rx="2" ry="2" />
<text  x="408.35" y="335.5" ></text>
</g>
<g >
<title>__get_free_pages (1 samples, 0.06%)</title><rect x="1175.7" y="261" width="0.7" height="15.0" fill="rgb(252,139,54)" rx="2" ry="2" />
<text  x="1178.66" y="271.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (5 samples, 0.32%)</title><rect x="236.3" y="293" width="3.8" height="15.0" fill="rgb(223,193,42)" rx="2" ry="2" />
<text  x="239.34" y="303.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.06%)</title><rect x="265.0" y="341" width="0.8" height="15.0" fill="rgb(214,143,46)" rx="2" ry="2" />
<text  x="268.01" y="351.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="403.8" y="437" width="0.8" height="15.0" fill="rgb(225,125,17)" rx="2" ry="2" />
<text  x="406.84" y="447.5" ></text>
</g>
<g >
<title>[libtorch_cpu.so] (4 samples, 0.26%)</title><rect x="332.2" y="453" width="3.0" height="15.0" fill="rgb(222,85,37)" rx="2" ry="2" />
<text  x="335.16" y="463.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.06%)</title><rect x="269.5" y="309" width="0.8" height="15.0" fill="rgb(231,192,0)" rx="2" ry="2" />
<text  x="272.54" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.06%)</title><rect x="372.1" y="341" width="0.8" height="15.0" fill="rgb(254,88,13)" rx="2" ry="2" />
<text  x="375.15" y="351.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::~VersionCounter (14 samples, 0.90%)</title><rect x="776.5" y="325" width="10.6" height="15.0" fill="rgb(219,31,47)" rx="2" ry="2" />
<text  x="779.55" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.06%)</title><rect x="238.6" y="277" width="0.8" height="15.0" fill="rgb(215,4,26)" rx="2" ry="2" />
<text  x="241.61" y="287.5" ></text>
</g>
<g >
<title>pte_alloc_one (1 samples, 0.06%)</title><rect x="323.9" y="261" width="0.7" height="15.0" fill="rgb(246,33,23)" rx="2" ry="2" />
<text  x="326.86" y="271.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (7 samples, 0.45%)</title><rect x="1184.7" y="405" width="5.3" height="15.0" fill="rgb(221,151,18)" rx="2" ry="2" />
<text  x="1187.72" y="415.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.06%)</title><rect x="264.3" y="325" width="0.7" height="15.0" fill="rgb(243,179,10)" rx="2" ry="2" />
<text  x="267.26" y="335.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.06%)</title><rect x="364.6" y="389" width="0.8" height="15.0" fill="rgb(221,215,10)" rx="2" ry="2" />
<text  x="367.60" y="399.5" ></text>
</g>
<g >
<title>[example-app] (1 samples, 0.06%)</title><rect x="193.3" y="325" width="0.8" height="15.0" fill="rgb(217,21,24)" rx="2" ry="2" />
<text  x="196.34" y="335.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="291.4" y="357" width="0.8" height="15.0" fill="rgb(241,16,10)" rx="2" ry="2" />
<text  x="294.42" y="367.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (6 samples, 0.38%)</title><rect x="387.2" y="437" width="4.6" height="15.0" fill="rgb(231,111,31)" rx="2" ry="2" />
<text  x="390.24" y="447.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::retain_ (4 samples, 0.26%)</title><rect x="537.4" y="341" width="3.0" height="15.0" fill="rgb(227,14,16)" rx="2" ry="2" />
<text  x="540.38" y="351.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base (3 samples, 0.19%)</title><rect x="477.8" y="341" width="2.2" height="15.0" fill="rgb(222,93,49)" rx="2" ry="2" />
<text  x="480.77" y="351.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.06%)</title><rect x="326.9" y="165" width="0.7" height="15.0" fill="rgb(252,116,17)" rx="2" ry="2" />
<text  x="329.88" y="175.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.06%)</title><rect x="544.2" y="357" width="0.7" height="15.0" fill="rgb(236,48,40)" rx="2" ry="2" />
<text  x="547.17" y="367.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="308.8" y="261" width="0.7" height="15.0" fill="rgb(211,161,36)" rx="2" ry="2" />
<text  x="311.77" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;*, std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; (3 samples, 0.19%)</title><rect x="770.5" y="277" width="2.3" height="15.0" fill="rgb(231,115,48)" rx="2" ry="2" />
<text  x="773.51" y="287.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.06%)</title><rect x="189.6" y="341" width="0.7" height="15.0" fill="rgb(206,153,8)" rx="2" ry="2" />
<text  x="192.57" y="351.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="292.9" y="357" width="0.8" height="15.0" fill="rgb(236,49,45)" rx="2" ry="2" />
<text  x="295.93" y="367.5" ></text>
</g>
<g >
<title>torch::Library::_impl (6 samples, 0.38%)</title><rect x="267.3" y="357" width="4.5" height="15.0" fill="rgb(208,96,8)" rx="2" ry="2" />
<text  x="270.28" y="367.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.06%)</title><rect x="292.2" y="357" width="0.7" height="15.0" fill="rgb(235,206,50)" rx="2" ry="2" />
<text  x="295.17" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (25 samples, 1.60%)</title><rect x="668.7" y="165" width="18.8" height="15.0" fill="rgb(228,30,20)" rx="2" ry="2" />
<text  x="671.66" y="175.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.06%)</title><rect x="17.5" y="421" width="0.8" height="15.0" fill="rgb(251,167,19)" rx="2" ry="2" />
<text  x="20.54" y="431.5" ></text>
</g>
<g >
<title>do_user_addr_fault (5 samples, 0.32%)</title><rect x="147.3" y="325" width="3.8" height="15.0" fill="rgb(237,198,31)" rx="2" ry="2" />
<text  x="150.31" y="335.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (2 samples, 0.13%)</title><rect x="315.6" y="341" width="1.5" height="15.0" fill="rgb(207,27,31)" rx="2" ry="2" />
<text  x="318.56" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="169.9" y="229" width="0.8" height="15.0" fill="rgb(249,39,21)" rx="2" ry="2" />
<text  x="172.95" y="239.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (8 samples, 0.51%)</title><rect x="234.1" y="325" width="6.0" height="15.0" fill="rgb(233,153,23)" rx="2" ry="2" />
<text  x="237.08" y="335.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 0.06%)</title><rect x="1175.7" y="277" width="0.7" height="15.0" fill="rgb(208,48,34)" rx="2" ry="2" />
<text  x="1178.66" y="287.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="216.0" y="293" width="0.7" height="15.0" fill="rgb(237,189,24)" rx="2" ry="2" />
<text  x="218.97" y="303.5" ></text>
</g>
<g >
<title>c10::either&lt;torch::jit::Operator::C10Operator, torch::jit::Operator::JitOnlyOperator&gt;::fold&lt;c10::FunctionSchema const&amp;, torch::jit::Operator::schema (2 samples, 0.13%)</title><rect x="322.4" y="373" width="1.5" height="15.0" fill="rgb(208,116,40)" rx="2" ry="2" />
<text  x="325.35" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="385.0" y="389" width="0.7" height="15.0" fill="rgb(240,195,13)" rx="2" ry="2" />
<text  x="387.97" y="399.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="281.6" y="229" width="0.8" height="15.0" fill="rgb(216,190,41)" rx="2" ry="2" />
<text  x="284.61" y="239.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.06%)</title><rect x="326.9" y="213" width="0.7" height="15.0" fill="rgb(207,181,17)" rx="2" ry="2" />
<text  x="329.88" y="223.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TypeDefault.cpp (83 samples, 5.31%)</title><rect x="209.2" y="405" width="62.6" height="15.0" fill="rgb(207,86,7)" rx="2" ry="2" />
<text  x="212.18" y="415.5" >_GLOBA..</text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (2 samples, 0.13%)</title><rect x="249.2" y="229" width="1.5" height="15.0" fill="rgb(208,131,42)" rx="2" ry="2" />
<text  x="252.17" y="239.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="151.8" y="357" width="0.8" height="15.0" fill="rgb(235,131,48)" rx="2" ry="2" />
<text  x="154.84" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="189.6" y="293" width="0.7" height="15.0" fill="rgb(213,193,18)" rx="2" ry="2" />
<text  x="192.57" y="303.5" ></text>
</g>
<g >
<title>do_brk_flags (1 samples, 0.06%)</title><rect x="228.0" y="149" width="0.8" height="15.0" fill="rgb(210,78,15)" rx="2" ry="2" />
<text  x="231.04" y="159.5" ></text>
</g>
<g >
<title>__libc_start_main (1,007 samples, 64.39%)</title><rect x="408.4" y="437" width="759.7" height="15.0" fill="rgb(239,29,38)" rx="2" ry="2" />
<text  x="411.36" y="447.5" >__libc_start_main</text>
</g>
<g >
<title>_GLOBAL__sub_I_SparseCPUType.cpp (2 samples, 0.13%)</title><rect x="190.3" y="405" width="1.5" height="15.0" fill="rgb(245,142,40)" rx="2" ry="2" />
<text  x="193.32" y="415.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (4 samples, 0.26%)</title><rect x="1135.7" y="213" width="3.0" height="15.0" fill="rgb(234,213,4)" rx="2" ry="2" />
<text  x="1138.68" y="223.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="284.6" y="325" width="0.8" height="15.0" fill="rgb(224,214,7)" rx="2" ry="2" />
<text  x="287.63" y="335.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (3 samples, 0.19%)</title><rect x="161.6" y="373" width="2.3" height="15.0" fill="rgb(211,149,48)" rx="2" ry="2" />
<text  x="164.65" y="383.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.06%)</title><rect x="287.6" y="357" width="0.8" height="15.0" fill="rgb(212,146,25)" rx="2" ry="2" />
<text  x="290.65" y="367.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.06%)</title><rect x="307.3" y="213" width="0.7" height="15.0" fill="rgb(219,81,13)" rx="2" ry="2" />
<text  x="310.26" y="223.5" ></text>
</g>
<g >
<title>c10::scalarTypeToTypeMeta (8 samples, 0.51%)</title><rect x="839.9" y="373" width="6.1" height="15.0" fill="rgb(224,28,42)" rx="2" ry="2" />
<text  x="842.92" y="383.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;int&gt; (1 samples, 0.06%)</title><rect x="485.3" y="357" width="0.8" height="15.0" fill="rgb(247,171,8)" rx="2" ry="2" />
<text  x="488.32" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::operator* (1 samples, 0.06%)</title><rect x="937.3" y="293" width="0.7" height="15.0" fill="rgb(240,12,41)" rx="2" ry="2" />
<text  x="940.25" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="308.8" y="165" width="0.7" height="15.0" fill="rgb(244,177,54)" rx="2" ry="2" />
<text  x="311.77" y="175.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="17.5" y="437" width="0.8" height="15.0" fill="rgb(223,162,41)" rx="2" ry="2" />
<text  x="20.54" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="142.0" y="261" width="0.8" height="15.0" fill="rgb(206,181,3)" rx="2" ry="2" />
<text  x="145.03" y="271.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (3 samples, 0.19%)</title><rect x="173.7" y="373" width="2.3" height="15.0" fill="rgb(215,142,31)" rx="2" ry="2" />
<text  x="176.72" y="383.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::type_index, std::hash&lt;std::type_index&gt;, ska::detailv3::KeyOrValueHasher&lt;std::type_index, std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::hash&lt;std::type_index&gt; &gt;, std::equal_to&lt;std::type_index&gt;, ska::detailv3::KeyOrValueEquality&lt;std::type_index, std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::equal_to&lt;std::type_index&gt; &gt;, std::allocator&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt; &gt; &gt; &gt;::sherwood_v3_table (1 samples, 0.06%)</title><rect x="292.2" y="325" width="0.7" height="15.0" fill="rgb(251,137,36)" rx="2" ry="2" />
<text  x="295.17" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_erase (1 samples, 0.06%)</title><rect x="88.5" y="437" width="0.7" height="15.0" fill="rgb(243,164,32)" rx="2" ry="2" />
<text  x="91.47" y="447.5" ></text>
</g>
<g >
<title>isalpha@plt (1 samples, 0.06%)</title><rect x="263.5" y="261" width="0.8" height="15.0" fill="rgb(239,45,14)" rx="2" ry="2" />
<text  x="266.50" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.06%)</title><rect x="304.2" y="373" width="0.8" height="15.0" fill="rgb(211,163,35)" rx="2" ry="2" />
<text  x="307.25" y="383.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.06%)</title><rect x="268.8" y="277" width="0.7" height="15.0" fill="rgb(206,208,49)" rx="2" ry="2" />
<text  x="271.79" y="287.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.06%)</title><rect x="189.6" y="325" width="0.7" height="15.0" fill="rgb(236,127,19)" rx="2" ry="2" />
<text  x="192.57" y="335.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="216.0" y="229" width="0.7" height="15.0" fill="rgb(246,222,35)" rx="2" ry="2" />
<text  x="218.97" y="239.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.06%)</title><rect x="291.4" y="325" width="0.8" height="15.0" fill="rgb(237,150,11)" rx="2" ry="2" />
<text  x="294.42" y="335.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (5 samples, 0.32%)</title><rect x="197.1" y="389" width="3.8" height="15.0" fill="rgb(253,139,46)" rx="2" ry="2" />
<text  x="200.11" y="399.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.06%)</title><rect x="189.6" y="389" width="0.7" height="15.0" fill="rgb(243,212,53)" rx="2" ry="2" />
<text  x="192.57" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="228.0" y="181" width="0.8" height="15.0" fill="rgb(220,96,21)" rx="2" ry="2" />
<text  x="231.04" y="191.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="225.8" y="325" width="0.7" height="15.0" fill="rgb(210,15,38)" rx="2" ry="2" />
<text  x="228.78" y="335.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.06%)</title><rect x="145.1" y="197" width="0.7" height="15.0" fill="rgb(243,180,4)" rx="2" ry="2" />
<text  x="148.05" y="207.5" ></text>
</g>
<g >
<title>at::RecordFunction::end (2 samples, 0.13%)</title><rect x="378.2" y="437" width="1.5" height="15.0" fill="rgb(207,78,19)" rx="2" ry="2" />
<text  x="381.18" y="447.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.06%)</title><rect x="148.8" y="229" width="0.8" height="15.0" fill="rgb(205,26,20)" rx="2" ry="2" />
<text  x="151.82" y="239.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_Named (10 samples, 0.64%)</title><rect x="179.8" y="373" width="7.5" height="15.0" fill="rgb(247,6,7)" rx="2" ry="2" />
<text  x="182.76" y="383.5" ></text>
</g>
<g >
<title>c10::profiledCPUMemoryReporter (1 samples, 0.06%)</title><rect x="760.7" y="309" width="0.8" height="15.0" fill="rgb(250,7,35)" rx="2" ry="2" />
<text  x="763.70" y="319.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.06%)</title><rect x="142.8" y="277" width="0.7" height="15.0" fill="rgb(227,13,3)" rx="2" ry="2" />
<text  x="145.79" y="287.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (2 samples, 0.13%)</title><rect x="211.4" y="341" width="1.6" height="15.0" fill="rgb(249,86,40)" rx="2" ry="2" />
<text  x="214.45" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (1 samples, 0.06%)</title><rect x="520.0" y="357" width="0.8" height="15.0" fill="rgb(239,205,41)" rx="2" ry="2" />
<text  x="523.03" y="367.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp;  (1 samples, 0.06%)</title><rect x="201.6" y="373" width="0.8" height="15.0" fill="rgb(206,141,47)" rx="2" ry="2" />
<text  x="204.64" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.13%)</title><rect x="326.1" y="341" width="1.5" height="15.0" fill="rgb(239,141,39)" rx="2" ry="2" />
<text  x="329.13" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="308.0" y="325" width="0.8" height="15.0" fill="rgb(235,48,42)" rx="2" ry="2" />
<text  x="311.02" y="335.5" ></text>
</g>
<g >
<title>c10::TensorImpl::release_resources (12 samples, 0.77%)</title><rect x="442.3" y="341" width="9.1" height="15.0" fill="rgb(208,61,43)" rx="2" ry="2" />
<text  x="445.31" y="351.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.06%)</title><rect x="90.0" y="437" width="0.7" height="15.0" fill="rgb(226,132,29)" rx="2" ry="2" />
<text  x="92.97" y="447.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="168.4" y="245" width="0.8" height="15.0" fill="rgb(236,11,33)" rx="2" ry="2" />
<text  x="171.44" y="255.5" ></text>
</g>
<g >
<title>[libcufft.so.10.2.0.218] (3 samples, 0.19%)</title><rect x="154.9" y="389" width="2.2" height="15.0" fill="rgb(222,192,38)" rx="2" ry="2" />
<text  x="157.86" y="399.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (1 samples, 0.06%)</title><rect x="704.9" y="197" width="0.7" height="15.0" fill="rgb(210,60,2)" rx="2" ry="2" />
<text  x="707.87" y="207.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="271.8" y="261" width="0.8" height="15.0" fill="rgb(252,115,18)" rx="2" ry="2" />
<text  x="274.80" y="271.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.0 (1 samples, 0.06%)</title><rect x="1170.4" y="277" width="0.7" height="15.0" fill="rgb(253,63,30)" rx="2" ry="2" />
<text  x="1173.38" y="287.5" ></text>
</g>
<g >
<title>unmap_vmas (12 samples, 0.77%)</title><rect x="1171.1" y="341" width="9.1" height="15.0" fill="rgb(220,226,17)" rx="2" ry="2" />
<text  x="1174.14" y="351.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (3 samples, 0.19%)</title><rect x="145.1" y="325" width="2.2" height="15.0" fill="rgb(225,121,31)" rx="2" ry="2" />
<text  x="148.05" y="335.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (1 samples, 0.06%)</title><rect x="905.6" y="325" width="0.7" height="15.0" fill="rgb(210,78,44)" rx="2" ry="2" />
<text  x="908.56" y="335.5" ></text>
</g>
<g >
<title>at::native::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_quantized_QuantizedCPU (1 samples, 0.06%)</title><rect x="290.7" y="373" width="0.7" height="15.0" fill="rgb(244,147,47)" rx="2" ry="2" />
<text  x="293.66" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::get (4 samples, 0.26%)</title><rect x="974.2" y="325" width="3.0" height="15.0" fill="rgb(208,21,35)" rx="2" ry="2" />
<text  x="977.22" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="409.9" y="293" width="0.7" height="15.0" fill="rgb(254,84,3)" rx="2" ry="2" />
<text  x="412.87" y="303.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="292.2" y="277" width="0.7" height="15.0" fill="rgb(250,51,8)" rx="2" ry="2" />
<text  x="295.17" y="287.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.06%)</title><rect x="145.1" y="213" width="0.7" height="15.0" fill="rgb(229,165,29)" rx="2" ry="2" />
<text  x="148.05" y="223.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.13%)</title><rect x="206.9" y="357" width="1.5" height="15.0" fill="rgb(224,226,54)" rx="2" ry="2" />
<text  x="209.92" y="367.5" ></text>
</g>
<g >
<title>torch::Library::_def (13 samples, 0.83%)</title><rect x="213.7" y="357" width="9.8" height="15.0" fill="rgb(244,106,11)" rx="2" ry="2" />
<text  x="216.71" y="367.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (1 samples, 0.06%)</title><rect x="286.9" y="389" width="0.7" height="15.0" fill="rgb(251,204,24)" rx="2" ry="2" />
<text  x="289.89" y="399.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable (43 samples, 2.75%)</title><rect x="522.3" y="373" width="32.4" height="15.0" fill="rgb(235,66,30)" rx="2" ry="2" />
<text  x="525.29" y="383.5" >to..</text>
</g>
<g >
<title>c10::scalarTypeToTypeMeta (6 samples, 0.38%)</title><rect x="509.5" y="373" width="4.5" height="15.0" fill="rgb(207,212,27)" rx="2" ry="2" />
<text  x="512.46" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="359.3" y="309" width="0.8" height="15.0" fill="rgb(219,95,39)" rx="2" ry="2" />
<text  x="362.32" y="319.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::dataptr (1 samples, 0.06%)</title><rect x="814.3" y="373" width="0.7" height="15.0" fill="rgb(223,43,7)" rx="2" ry="2" />
<text  x="817.27" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="292.2" y="261" width="0.7" height="15.0" fill="rgb(231,71,0)" rx="2" ry="2" />
<text  x="295.17" y="271.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (7 samples, 0.45%)</title><rect x="165.4" y="341" width="5.3" height="15.0" fill="rgb(243,217,6)" rx="2" ry="2" />
<text  x="168.42" y="351.5" ></text>
</g>
<g >
<title>c10::Device::Device (2 samples, 0.13%)</title><rect x="826.3" y="357" width="1.6" height="15.0" fill="rgb(227,138,34)" rx="2" ry="2" />
<text  x="829.34" y="367.5" ></text>
</g>
<g >
<title>torch::CppFunction::CppFunction (1 samples, 0.06%)</title><rect x="163.9" y="373" width="0.8" height="15.0" fill="rgb(231,15,22)" rx="2" ry="2" />
<text  x="166.91" y="383.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::shared_ptr (1 samples, 0.06%)</title><rect x="954.6" y="309" width="0.8" height="15.0" fill="rgb(231,162,15)" rx="2" ry="2" />
<text  x="957.60" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="761.5" y="309" width="0.7" height="15.0" fill="rgb(226,137,23)" rx="2" ry="2" />
<text  x="764.46" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="262.0" y="293" width="0.7" height="15.0" fill="rgb(213,134,41)" rx="2" ry="2" />
<text  x="264.99" y="303.5" ></text>
</g>
<g >
<title>c10::Dispatcher::cleanup (1 samples, 0.06%)</title><rect x="417.4" y="309" width="0.8" height="15.0" fill="rgb(218,33,44)" rx="2" ry="2" />
<text  x="420.42" y="319.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (2 samples, 0.13%)</title><rect x="276.3" y="357" width="1.5" height="15.0" fill="rgb(251,117,43)" rx="2" ry="2" />
<text  x="279.33" y="367.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.06%)</title><rect x="412.1" y="325" width="0.8" height="15.0" fill="rgb(234,10,30)" rx="2" ry="2" />
<text  x="415.14" y="335.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (5 samples, 0.32%)</title><rect x="193.3" y="389" width="3.8" height="15.0" fill="rgb(211,18,3)" rx="2" ry="2" />
<text  x="196.34" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_erase (1 samples, 0.06%)</title><rect x="372.1" y="325" width="0.8" height="15.0" fill="rgb(247,175,31)" rx="2" ry="2" />
<text  x="375.15" y="335.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.06%)</title><rect x="408.4" y="229" width="0.7" height="15.0" fill="rgb(222,139,43)" rx="2" ry="2" />
<text  x="411.36" y="239.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (39 samples, 2.49%)</title><rect x="438.5" y="389" width="29.5" height="15.0" fill="rgb(254,100,18)" rx="2" ry="2" />
<text  x="441.54" y="399.5" >at..</text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.13%)</title><rect x="662.6" y="165" width="1.5" height="15.0" fill="rgb(214,48,35)" rx="2" ry="2" />
<text  x="665.62" y="175.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.19%)</title><rect x="242.4" y="213" width="2.2" height="15.0" fill="rgb(207,71,41)" rx="2" ry="2" />
<text  x="245.38" y="223.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.13%)</title><rect x="143.5" y="325" width="1.6" height="15.0" fill="rgb(242,216,38)" rx="2" ry="2" />
<text  x="146.54" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_insert&lt;c10::Symbol const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;c10::Symbol, true&gt; &gt; &gt; &gt; (9 samples, 0.58%)</title><rect x="335.9" y="229" width="6.8" height="15.0" fill="rgb(241,229,54)" rx="2" ry="2" />
<text  x="338.93" y="239.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (3 samples, 0.19%)</title><rect x="176.7" y="325" width="2.3" height="15.0" fill="rgb(251,61,6)" rx="2" ry="2" />
<text  x="179.74" y="335.5" ></text>
</g>
<g >
<title>c10::Device::validate (3 samples, 0.19%)</title><rect x="807.5" y="309" width="2.2" height="15.0" fill="rgb(245,174,53)" rx="2" ry="2" />
<text  x="810.48" y="319.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.06%)</title><rect x="198.6" y="325" width="0.8" height="15.0" fill="rgb(242,193,20)" rx="2" ry="2" />
<text  x="201.62" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.06%)</title><rect x="366.1" y="293" width="0.8" height="15.0" fill="rgb(250,209,52)" rx="2" ry="2" />
<text  x="369.11" y="303.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (1 samples, 0.06%)</title><rect x="264.3" y="309" width="0.7" height="15.0" fill="rgb(219,201,1)" rx="2" ry="2" />
<text  x="267.26" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="228.0" y="197" width="0.8" height="15.0" fill="rgb(232,34,10)" rx="2" ry="2" />
<text  x="231.04" y="207.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="290.7" y="341" width="0.7" height="15.0" fill="rgb(210,99,44)" rx="2" ry="2" />
<text  x="293.66" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (1 samples, 0.06%)</title><rect x="246.2" y="261" width="0.7" height="15.0" fill="rgb(246,156,13)" rx="2" ry="2" />
<text  x="249.15" y="271.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_dtype (2 samples, 0.13%)</title><rect x="499.7" y="357" width="1.5" height="15.0" fill="rgb(208,125,48)" rx="2" ry="2" />
<text  x="502.65" y="367.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;c10::Half&gt; (1 samples, 0.06%)</title><rect x="944.0" y="277" width="0.8" height="15.0" fill="rgb(230,138,20)" rx="2" ry="2" />
<text  x="947.04" y="287.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (2 samples, 0.13%)</title><rect x="145.8" y="229" width="1.5" height="15.0" fill="rgb(242,74,39)" rx="2" ry="2" />
<text  x="148.81" y="239.5" ></text>
</g>
<g >
<title>finish_fault (1 samples, 0.06%)</title><rect x="148.8" y="261" width="0.8" height="15.0" fill="rgb(205,92,54)" rx="2" ry="2" />
<text  x="151.82" y="271.5" ></text>
</g>
<g >
<title>at::hasCallbacks (1 samples, 0.06%)</title><rect x="381.2" y="437" width="0.8" height="15.0" fill="rgb(226,63,1)" rx="2" ry="2" />
<text  x="384.20" y="447.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp;  (1 samples, 0.06%)</title><rect x="280.1" y="373" width="0.8" height="15.0" fill="rgb(233,183,42)" rx="2" ry="2" />
<text  x="283.10" y="383.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="199.4" y="357" width="0.7" height="15.0" fill="rgb(251,145,4)" rx="2" ry="2" />
<text  x="202.37" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="232.6" y="213" width="0.7" height="15.0" fill="rgb(232,151,48)" rx="2" ry="2" />
<text  x="235.57" y="223.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.06%)</title><rect x="157.9" y="261" width="0.7" height="15.0" fill="rgb(253,54,35)" rx="2" ry="2" />
<text  x="160.88" y="271.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.06%)</title><rect x="273.3" y="341" width="0.8" height="15.0" fill="rgb(231,48,6)" rx="2" ry="2" />
<text  x="276.31" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (2 samples, 0.13%)</title><rect x="173.7" y="325" width="1.5" height="15.0" fill="rgb(246,16,7)" rx="2" ry="2" />
<text  x="176.72" y="335.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="194.8" y="357" width="0.8" height="15.0" fill="rgb(248,77,24)" rx="2" ry="2" />
<text  x="197.85" y="367.5" ></text>
</g>
<g >
<title>posix_memalign (30 samples, 1.92%)</title><rect x="664.9" y="197" width="22.6" height="15.0" fill="rgb(219,34,21)" rx="2" ry="2" />
<text  x="667.88" y="207.5" >p..</text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.13%)</title><rect x="314.1" y="373" width="1.5" height="15.0" fill="rgb(211,112,44)" rx="2" ry="2" />
<text  x="317.05" y="383.5" ></text>
</g>
<g >
<title>c10::impl::check_tensor_options_and_extract_memory_format (1 samples, 0.06%)</title><rect x="723.7" y="341" width="0.8" height="15.0" fill="rgb(241,193,25)" rx="2" ry="2" />
<text  x="726.73" y="351.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.13%)</title><rect x="243.1" y="149" width="1.5" height="15.0" fill="rgb(252,191,32)" rx="2" ry="2" />
<text  x="246.13" y="159.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.13%)</title><rect x="919.1" y="277" width="1.6" height="15.0" fill="rgb(223,53,2)" rx="2" ry="2" />
<text  x="922.14" y="287.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="323.1" y="293" width="0.8" height="15.0" fill="rgb(221,44,5)" rx="2" ry="2" />
<text  x="326.11" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::AddDescriptorsImpl (2 samples, 0.13%)</title><rect x="327.6" y="405" width="1.5" height="15.0" fill="rgb(208,92,23)" rx="2" ry="2" />
<text  x="330.63" y="415.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.06%)</title><rect x="404.6" y="325" width="0.7" height="15.0" fill="rgb(219,135,40)" rx="2" ry="2" />
<text  x="407.59" y="335.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::optional&lt;c10::DeviceType const&amp;, int&gt; (8 samples, 0.51%)</title><rect x="803.7" y="373" width="6.0" height="15.0" fill="rgb(228,161,4)" rx="2" ry="2" />
<text  x="806.71" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_brk (1 samples, 0.06%)</title><rect x="228.0" y="165" width="0.8" height="15.0" fill="rgb(248,156,9)" rx="2" ry="2" />
<text  x="231.04" y="175.5" ></text>
</g>
<g >
<title>filemap_map_pages (2 samples, 0.13%)</title><rect x="143.5" y="245" width="1.6" height="15.0" fill="rgb(253,174,6)" rx="2" ry="2" />
<text  x="146.54" y="255.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (1 samples, 0.06%)</title><rect x="269.5" y="325" width="0.8" height="15.0" fill="rgb(212,66,3)" rx="2" ry="2" />
<text  x="272.54" y="335.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (10 samples, 0.64%)</title><rect x="335.2" y="421" width="7.5" height="15.0" fill="rgb(229,151,0)" rx="2" ry="2" />
<text  x="338.18" y="431.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (2 samples, 0.13%)</title><rect x="206.9" y="293" width="1.5" height="15.0" fill="rgb(240,113,28)" rx="2" ry="2" />
<text  x="209.92" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="409.1" y="309" width="0.8" height="15.0" fill="rgb(236,170,19)" rx="2" ry="2" />
<text  x="412.12" y="319.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.06%)</title><rect x="186.5" y="309" width="0.8" height="15.0" fill="rgb(224,20,21)" rx="2" ry="2" />
<text  x="189.55" y="319.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (2 samples, 0.13%)</title><rect x="766.7" y="261" width="1.5" height="15.0" fill="rgb(230,69,20)" rx="2" ry="2" />
<text  x="769.74" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.06%)</title><rect x="976.5" y="293" width="0.7" height="15.0" fill="rgb(212,168,40)" rx="2" ry="2" />
<text  x="979.48" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="231.8" y="229" width="0.8" height="15.0" fill="rgb(219,86,38)" rx="2" ry="2" />
<text  x="234.82" y="239.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.06%)</title><rect x="210.7" y="309" width="0.7" height="15.0" fill="rgb(216,131,31)" rx="2" ry="2" />
<text  x="213.69" y="319.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (1 samples, 0.06%)</title><rect x="18.3" y="437" width="0.8" height="15.0" fill="rgb(241,60,54)" rx="2" ry="2" />
<text  x="21.30" y="447.5" ></text>
</g>
<g >
<title>register_conv_params&lt;2&gt; (1 samples, 0.06%)</title><rect x="285.4" y="389" width="0.7" height="15.0" fill="rgb(248,209,7)" rx="2" ry="2" />
<text  x="288.38" y="399.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;torch::autograd::Node&gt;&amp;&gt; (2 samples, 0.13%)</title><rect x="907.1" y="325" width="1.5" height="15.0" fill="rgb(248,114,25)" rx="2" ry="2" />
<text  x="910.07" y="335.5" ></text>
</g>
<g >
<title>[example-app] (1 samples, 0.06%)</title><rect x="513.2" y="341" width="0.8" height="15.0" fill="rgb(240,166,11)" rx="2" ry="2" />
<text  x="516.24" y="351.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.06%)</title><rect x="287.6" y="325" width="0.8" height="15.0" fill="rgb(220,70,0)" rx="2" ry="2" />
<text  x="290.65" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (9 samples, 0.58%)</title><rect x="855.8" y="357" width="6.8" height="15.0" fill="rgb(228,210,33)" rx="2" ry="2" />
<text  x="858.77" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::~OperatorEntry (1 samples, 0.06%)</title><rect x="417.4" y="293" width="0.8" height="15.0" fill="rgb(222,151,19)" rx="2" ry="2" />
<text  x="420.42" y="303.5" ></text>
</g>
<g >
<title>c10::Dispatcher::deregisterDef_ (1 samples, 0.06%)</title><rect x="412.9" y="325" width="0.7" height="15.0" fill="rgb(209,109,50)" rx="2" ry="2" />
<text  x="415.89" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="415.2" y="229" width="0.7" height="15.0" fill="rgb(221,10,43)" rx="2" ry="2" />
<text  x="418.15" y="239.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (3 samples, 0.19%)</title><rect x="179.8" y="341" width="2.2" height="15.0" fill="rgb(214,51,35)" rx="2" ry="2" />
<text  x="182.76" y="351.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="290.7" y="357" width="0.7" height="15.0" fill="rgb(232,110,36)" rx="2" ry="2" />
<text  x="293.66" y="367.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="290.7" y="325" width="0.7" height="15.0" fill="rgb(225,204,6)" rx="2" ry="2" />
<text  x="293.66" y="335.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.13%)</title><rect x="1153.8" y="325" width="1.5" height="15.0" fill="rgb(212,42,32)" rx="2" ry="2" />
<text  x="1156.79" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="145.1" y="261" width="0.7" height="15.0" fill="rgb(209,92,45)" rx="2" ry="2" />
<text  x="148.05" y="271.5" ></text>
</g>
<g >
<title>torch::jit::registerOperator (7 samples, 0.45%)</title><rect x="368.4" y="421" width="5.3" height="15.0" fill="rgb(242,153,28)" rx="2" ry="2" />
<text  x="371.38" y="431.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator (1 samples, 0.06%)</title><rect x="540.4" y="357" width="0.8" height="15.0" fill="rgb(232,208,36)" rx="2" ry="2" />
<text  x="543.40" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="323.9" y="357" width="0.7" height="15.0" fill="rgb(205,219,11)" rx="2" ry="2" />
<text  x="326.86" y="367.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (4 samples, 0.26%)</title><rect x="176.7" y="373" width="3.1" height="15.0" fill="rgb(244,110,5)" rx="2" ry="2" />
<text  x="179.74" y="383.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.06%)</title><rect x="272.6" y="341" width="0.7" height="15.0" fill="rgb(237,161,48)" rx="2" ry="2" />
<text  x="275.56" y="351.5" ></text>
</g>
<g >
<title>__libc_malloc (3 samples, 0.19%)</title><rect x="231.1" y="261" width="2.2" height="15.0" fill="rgb(221,117,49)" rx="2" ry="2" />
<text  x="234.06" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.06%)</title><rect x="319.3" y="293" width="0.8" height="15.0" fill="rgb(213,13,35)" rx="2" ry="2" />
<text  x="322.34" y="303.5" ></text>
</g>
<g >
<title>__cxa_finalize (1 samples, 0.06%)</title><rect x="409.1" y="357" width="0.8" height="15.0" fill="rgb(233,138,4)" rx="2" ry="2" />
<text  x="412.12" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.06%)</title><rect x="202.4" y="341" width="0.7" height="15.0" fill="rgb(212,138,5)" rx="2" ry="2" />
<text  x="205.39" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.06%)</title><rect x="216.7" y="309" width="0.8" height="15.0" fill="rgb(242,114,24)" rx="2" ry="2" />
<text  x="219.73" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.06%)</title><rect x="928.2" y="277" width="0.8" height="15.0" fill="rgb(226,22,47)" rx="2" ry="2" />
<text  x="931.20" y="287.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.06%)</title><rect x="208.4" y="325" width="0.8" height="15.0" fill="rgb(234,172,43)" rx="2" ry="2" />
<text  x="211.43" y="335.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="264.3" y="373" width="0.7" height="15.0" fill="rgb(205,182,4)" rx="2" ry="2" />
<text  x="267.26" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2 samples, 0.13%)</title><rect x="358.6" y="357" width="1.5" height="15.0" fill="rgb(216,150,12)" rx="2" ry="2" />
<text  x="361.57" y="367.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.06%)</title><rect x="572.1" y="293" width="0.7" height="15.0" fill="rgb(249,36,31)" rx="2" ry="2" />
<text  x="575.08" y="303.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.13%)</title><rect x="153.4" y="229" width="1.5" height="15.0" fill="rgb(238,137,21)" rx="2" ry="2" />
<text  x="156.35" y="239.5" ></text>
</g>
<g >
<title>std::forward&lt;c10::TensorImpl*&gt; (1 samples, 0.06%)</title><rect x="82.4" y="437" width="0.8" height="15.0" fill="rgb(231,176,5)" rx="2" ry="2" />
<text  x="85.43" y="447.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.06%)</title><rect x="352.5" y="421" width="0.8" height="15.0" fill="rgb(238,2,23)" rx="2" ry="2" />
<text  x="355.53" y="431.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (1 samples, 0.06%)</title><rect x="157.9" y="389" width="0.7" height="15.0" fill="rgb(242,74,44)" rx="2" ry="2" />
<text  x="160.88" y="399.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="295.2" y="373" width="0.7" height="15.0" fill="rgb(230,24,20)" rx="2" ry="2" />
<text  x="298.19" y="383.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.06%)</title><rect x="1100.2" y="197" width="0.8" height="15.0" fill="rgb(227,46,27)" rx="2" ry="2" />
<text  x="1103.22" y="207.5" ></text>
</g>
<g >
<title>c10::demangle[abi:cxx11] (1 samples, 0.06%)</title><rect x="306.5" y="373" width="0.8" height="15.0" fill="rgb(208,135,16)" rx="2" ry="2" />
<text  x="309.51" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="277.1" y="277" width="0.7" height="15.0" fill="rgb(254,88,52)" rx="2" ry="2" />
<text  x="280.08" y="287.5" ></text>
</g>
<g >
<title>at::Tensor::defined (1 samples, 0.06%)</title><rect x="528.3" y="357" width="0.8" height="15.0" fill="rgb(230,217,32)" rx="2" ry="2" />
<text  x="531.32" y="367.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.06%)</title><rect x="412.1" y="261" width="0.8" height="15.0" fill="rgb(234,138,27)" rx="2" ry="2" />
<text  x="415.14" y="271.5" ></text>
</g>
<g >
<title>c10::VariableVersion::unique (1 samples, 0.06%)</title><rect x="532.9" y="341" width="0.7" height="15.0" fill="rgb(216,52,39)" rx="2" ry="2" />
<text  x="535.85" y="351.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.06%)</title><rect x="414.4" y="261" width="0.8" height="15.0" fill="rgb(243,116,49)" rx="2" ry="2" />
<text  x="417.40" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (5 samples, 0.32%)</title><rect x="894.2" y="293" width="3.8" height="15.0" fill="rgb(225,56,33)" rx="2" ry="2" />
<text  x="897.25" y="303.5" ></text>
</g>
<g >
<title>c10::VariableVersion::unique (1 samples, 0.06%)</title><rect x="880.7" y="341" width="0.7" height="15.0" fill="rgb(232,24,40)" rx="2" ry="2" />
<text  x="883.66" y="351.5" ></text>
</g>
<g >
<title>at::native::xnnpack::TORCH_LIBRARY_IMPL_init_prepacked_CPU (1 samples, 0.06%)</title><rect x="189.6" y="373" width="0.7" height="15.0" fill="rgb(228,144,42)" rx="2" ry="2" />
<text  x="192.57" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="601.5" y="229" width="0.8" height="15.0" fill="rgb(223,152,37)" rx="2" ry="2" />
<text  x="604.51" y="239.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (1 samples, 0.06%)</title><rect x="705.6" y="229" width="0.8" height="15.0" fill="rgb(247,43,45)" rx="2" ry="2" />
<text  x="708.63" y="239.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.06%)</title><rect x="371.4" y="325" width="0.7" height="15.0" fill="rgb(211,220,28)" rx="2" ry="2" />
<text  x="374.39" y="335.5" ></text>
</g>
<g >
<title>caffe2::OpSchema::AllowInplace (1 samples, 0.06%)</title><rect x="307.3" y="389" width="0.7" height="15.0" fill="rgb(206,83,21)" rx="2" ry="2" />
<text  x="310.26" y="399.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="335.9" y="197" width="0.8" height="15.0" fill="rgb(229,52,42)" rx="2" ry="2" />
<text  x="338.93" y="207.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="329.9" y="341" width="0.8" height="15.0" fill="rgb(248,10,6)" rx="2" ry="2" />
<text  x="332.90" y="351.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (4 samples, 0.26%)</title><rect x="287.6" y="389" width="3.1" height="15.0" fill="rgb(212,59,47)" rx="2" ry="2" />
<text  x="290.65" y="399.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::end (2 samples, 0.13%)</title><rect x="471.0" y="357" width="1.5" height="15.0" fill="rgb(221,227,7)" rx="2" ry="2" />
<text  x="473.98" y="367.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="411.4" y="277" width="0.7" height="15.0" fill="rgb(221,79,6)" rx="2" ry="2" />
<text  x="414.38" y="287.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.06%)</title><rect x="193.3" y="357" width="0.8" height="15.0" fill="rgb(232,132,49)" rx="2" ry="2" />
<text  x="196.34" y="367.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_qadd.cpp (1 samples, 0.06%)</title><rect x="290.7" y="405" width="0.7" height="15.0" fill="rgb(213,93,8)" rx="2" ry="2" />
<text  x="293.66" y="415.5" ></text>
</g>
<g >
<title>do_fault (3 samples, 0.19%)</title><rect x="147.3" y="277" width="2.3" height="15.0" fill="rgb(206,209,8)" rx="2" ry="2" />
<text  x="150.31" y="287.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable (152 samples, 9.72%)</title><rect x="869.3" y="373" width="114.7" height="15.0" fill="rgb(229,221,41)" rx="2" ry="2" />
<text  x="872.35" y="383.5" >torch::autogra..</text>
</g>
<g >
<title>rmqueue (1 samples, 0.06%)</title><rect x="206.2" y="133" width="0.7" height="15.0" fill="rgb(214,199,7)" rx="2" ry="2" />
<text  x="209.16" y="143.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="195.6" y="245" width="0.8" height="15.0" fill="rgb(253,81,21)" rx="2" ry="2" />
<text  x="198.60" y="255.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (1 samples, 0.06%)</title><rect x="62.8" y="437" width="0.8" height="15.0" fill="rgb(207,131,12)" rx="2" ry="2" />
<text  x="65.81" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (1 samples, 0.06%)</title><rect x="922.9" y="309" width="0.8" height="15.0" fill="rgb(243,69,18)" rx="2" ry="2" />
<text  x="925.92" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2 samples, 0.13%)</title><rect x="358.6" y="373" width="1.5" height="15.0" fill="rgb(250,61,33)" rx="2" ry="2" />
<text  x="361.57" y="383.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.06%)</title><rect x="25.1" y="437" width="0.7" height="15.0" fill="rgb(248,173,7)" rx="2" ry="2" />
<text  x="28.09" y="447.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.06%)</title><rect x="280.9" y="117" width="0.7" height="15.0" fill="rgb(239,97,0)" rx="2" ry="2" />
<text  x="283.86" y="127.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.06%)</title><rect x="266.5" y="341" width="0.8" height="15.0" fill="rgb(233,32,21)" rx="2" ry="2" />
<text  x="269.52" y="351.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.06%)</title><rect x="173.0" y="277" width="0.7" height="15.0" fill="rgb(236,221,24)" rx="2" ry="2" />
<text  x="175.97" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::~unique_ptr (4 samples, 0.26%)</title><rect x="981.0" y="357" width="3.0" height="15.0" fill="rgb(252,37,3)" rx="2" ry="2" />
<text  x="984.01" y="367.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="300.5" y="293" width="0.7" height="15.0" fill="rgb(252,169,11)" rx="2" ry="2" />
<text  x="303.47" y="303.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="296.7" y="341" width="0.8" height="15.0" fill="rgb(247,206,11)" rx="2" ry="2" />
<text  x="299.70" y="351.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="160.1" y="357" width="0.8" height="15.0" fill="rgb(249,37,26)" rx="2" ry="2" />
<text  x="163.14" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="382.0" y="421" width="0.7" height="15.0" fill="rgb(212,14,36)" rx="2" ry="2" />
<text  x="384.96" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="385.0" y="373" width="0.7" height="15.0" fill="rgb(248,164,17)" rx="2" ry="2" />
<text  x="387.97" y="383.5" ></text>
</g>
<g >
<title>c10::Argument::~Argument (1 samples, 0.06%)</title><rect x="31.9" y="437" width="0.7" height="15.0" fill="rgb(217,215,39)" rx="2" ry="2" />
<text  x="34.88" y="447.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.06%)</title><rect x="408.4" y="213" width="0.7" height="15.0" fill="rgb(249,103,0)" rx="2" ry="2" />
<text  x="411.36" y="223.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="189.6" y="277" width="0.7" height="15.0" fill="rgb(210,78,25)" rx="2" ry="2" />
<text  x="192.57" y="287.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.06%)</title><rect x="827.1" y="341" width="0.8" height="15.0" fill="rgb(212,189,11)" rx="2" ry="2" />
<text  x="830.10" y="351.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1 samples, 0.06%)</title><rect x="192.6" y="325" width="0.7" height="15.0" fill="rgb(212,84,0)" rx="2" ry="2" />
<text  x="195.58" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.06%)</title><rect x="1168.1" y="437" width="0.8" height="15.0" fill="rgb(235,216,26)" rx="2" ry="2" />
<text  x="1171.12" y="447.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::OperatorRegistry::~OperatorRegistry (2 samples, 0.13%)</title><rect x="434.0" y="341" width="1.5" height="15.0" fill="rgb(225,55,49)" rx="2" ry="2" />
<text  x="437.02" y="351.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="173.0" y="309" width="0.7" height="15.0" fill="rgb(217,182,37)" rx="2" ry="2" />
<text  x="175.97" y="319.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.06%)</title><rect x="269.5" y="341" width="0.8" height="15.0" fill="rgb(232,146,16)" rx="2" ry="2" />
<text  x="272.54" y="351.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::RegistrationListener::onOperatorDeregistered (1 samples, 0.06%)</title><rect x="412.9" y="309" width="0.7" height="15.0" fill="rgb(217,152,46)" rx="2" ry="2" />
<text  x="415.89" y="319.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.06%)</title><rect x="188.1" y="245" width="0.7" height="15.0" fill="rgb(221,40,28)" rx="2" ry="2" />
<text  x="191.06" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_head (2 samples, 0.13%)</title><rect x="982.5" y="293" width="1.5" height="15.0" fill="rgb(236,158,47)" rx="2" ry="2" />
<text  x="985.52" y="303.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::Registerer::op (4 samples, 0.26%)</title><rect x="365.4" y="421" width="3.0" height="15.0" fill="rgb(236,149,26)" rx="2" ry="2" />
<text  x="368.36" y="431.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="328.4" y="293" width="0.7" height="15.0" fill="rgb(231,100,42)" rx="2" ry="2" />
<text  x="331.39" y="303.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_autocast_mode.cpp (5 samples, 0.32%)</title><rect x="280.9" y="405" width="3.7" height="15.0" fill="rgb(212,200,53)" rx="2" ry="2" />
<text  x="283.86" y="415.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.06%)</title><rect x="435.5" y="309" width="0.8" height="15.0" fill="rgb(251,5,39)" rx="2" ry="2" />
<text  x="438.52" y="319.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.06%)</title><rect x="328.4" y="261" width="0.7" height="15.0" fill="rgb(237,2,52)" rx="2" ry="2" />
<text  x="331.39" y="271.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (3 samples, 0.19%)</title><rect x="95.3" y="437" width="2.2" height="15.0" fill="rgb(209,101,13)" rx="2" ry="2" />
<text  x="98.26" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (1 samples, 0.06%)</title><rect x="415.2" y="261" width="0.7" height="15.0" fill="rgb(231,112,11)" rx="2" ry="2" />
<text  x="418.15" y="271.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.06%)</title><rect x="148.8" y="213" width="0.8" height="15.0" fill="rgb(214,91,48)" rx="2" ry="2" />
<text  x="151.82" y="223.5" ></text>
</g>
<g >
<title>caffe2::OpSchema::SetDoc (1 samples, 0.06%)</title><rect x="308.0" y="357" width="0.8" height="15.0" fill="rgb(229,185,44)" rx="2" ry="2" />
<text  x="311.02" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::initialized (1 samples, 0.06%)</title><rect x="818.0" y="341" width="0.8" height="15.0" fill="rgb(217,155,44)" rx="2" ry="2" />
<text  x="821.04" y="351.5" ></text>
</g>
<g >
<title>[libcudart.so.11.0.194] (2 samples, 0.13%)</title><rect x="326.1" y="373" width="1.5" height="15.0" fill="rgb(209,33,45)" rx="2" ry="2" />
<text  x="329.13" y="383.5" ></text>
</g>
<g >
<title>__cudaRegisterFunction (2 samples, 0.13%)</title><rect x="326.1" y="389" width="1.5" height="15.0" fill="rgb(208,224,2)" rx="2" ry="2" />
<text  x="329.13" y="399.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;signed char&gt;@plt (1 samples, 0.06%)</title><rect x="714.7" y="277" width="0.7" height="15.0" fill="rgb(224,7,6)" rx="2" ry="2" />
<text  x="717.68" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="206.2" y="229" width="0.7" height="15.0" fill="rgb(210,217,8)" rx="2" ry="2" />
<text  x="209.16" y="239.5" ></text>
</g>
<g >
<title>std::addressof&lt;bool&gt; (1 samples, 0.06%)</title><rect x="819.6" y="357" width="0.7" height="15.0" fill="rgb(234,132,24)" rx="2" ry="2" />
<text  x="822.55" y="367.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;unsigned char&gt; (1 samples, 0.06%)</title><rect x="952.3" y="293" width="0.8" height="15.0" fill="rgb(252,166,6)" rx="2" ry="2" />
<text  x="955.34" y="303.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.32%)</title><rect x="147.3" y="357" width="3.8" height="15.0" fill="rgb(251,209,46)" rx="2" ry="2" />
<text  x="150.31" y="367.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (1 samples, 0.06%)</title><rect x="849.0" y="373" width="0.7" height="15.0" fill="rgb(228,0,46)" rx="2" ry="2" />
<text  x="851.98" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="155.6" y="277" width="0.8" height="15.0" fill="rgb(248,168,26)" rx="2" ry="2" />
<text  x="158.61" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.13%)</title><rect x="143.5" y="341" width="1.6" height="15.0" fill="rgb(233,187,37)" rx="2" ry="2" />
<text  x="146.54" y="351.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.06%)</title><rect x="335.2" y="325" width="0.7" height="15.0" fill="rgb(231,167,12)" rx="2" ry="2" />
<text  x="338.18" y="335.5" ></text>
</g>
<g >
<title>cpuinfo_initialize (1 samples, 0.06%)</title><rect x="192.6" y="341" width="0.7" height="15.0" fill="rgb(218,229,5)" rx="2" ry="2" />
<text  x="195.58" y="351.5" ></text>
</g>
<g >
<title>__libc_malloc (3 samples, 0.19%)</title><rect x="152.6" y="357" width="2.3" height="15.0" fill="rgb(214,185,25)" rx="2" ry="2" />
<text  x="155.60" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="365.4" y="277" width="0.7" height="15.0" fill="rgb(207,99,22)" rx="2" ry="2" />
<text  x="368.36" y="287.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (1 samples, 0.06%)</title><rect x="146.6" y="149" width="0.7" height="15.0" fill="rgb(241,12,43)" rx="2" ry="2" />
<text  x="149.56" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;c10::ClassType&gt; &gt;, true&gt; &gt; &gt;::_M_allocate_buckets (3 samples, 0.19%)</title><rect x="231.1" y="293" width="2.2" height="15.0" fill="rgb(217,170,34)" rx="2" ry="2" />
<text  x="234.06" y="303.5" ></text>
</g>
<g >
<title>caffe2::OpSchema::FillUsing (1 samples, 0.06%)</title><rect x="308.0" y="389" width="0.8" height="15.0" fill="rgb(210,52,34)" rx="2" ry="2" />
<text  x="311.02" y="399.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.19%)</title><rect x="228.8" y="309" width="2.3" height="15.0" fill="rgb(247,57,22)" rx="2" ry="2" />
<text  x="231.80" y="319.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="409.9" y="277" width="0.7" height="15.0" fill="rgb(250,191,38)" rx="2" ry="2" />
<text  x="412.87" y="287.5" ></text>
</g>
<g >
<title>c10::Dispatcher::deregisterImpl_ (16 samples, 1.02%)</title><rect x="421.9" y="309" width="12.1" height="15.0" fill="rgb(234,172,47)" rx="2" ry="2" />
<text  x="424.94" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_head (4 samples, 0.26%)</title><rect x="968.9" y="277" width="3.1" height="15.0" fill="rgb(230,56,29)" rx="2" ry="2" />
<text  x="971.94" y="287.5" ></text>
</g>
<g >
<title>cpuinfo_linux_parse_multiline_file (1 samples, 0.06%)</title><rect x="192.6" y="277" width="0.7" height="15.0" fill="rgb(225,192,39)" rx="2" ry="2" />
<text  x="195.58" y="287.5" ></text>
</g>
<g >
<title>get_unmapped_area (1 samples, 0.06%)</title><rect x="231.8" y="117" width="0.8" height="15.0" fill="rgb(213,216,2)" rx="2" ry="2" />
<text  x="234.82" y="127.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (6 samples, 0.38%)</title><rect x="235.6" y="309" width="4.5" height="15.0" fill="rgb(253,130,5)" rx="2" ry="2" />
<text  x="238.59" y="319.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (1 samples, 0.06%)</title><rect x="883.7" y="325" width="0.7" height="15.0" fill="rgb(229,10,29)" rx="2" ry="2" />
<text  x="886.68" y="335.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="571.3" y="293" width="0.8" height="15.0" fill="rgb(220,146,19)" rx="2" ry="2" />
<text  x="574.33" y="303.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="327.6" y="213" width="0.8" height="15.0" fill="rgb(222,77,18)" rx="2" ry="2" />
<text  x="330.63" y="223.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;  (1 samples, 0.06%)</title><rect x="271.8" y="373" width="0.8" height="15.0" fill="rgb(232,110,21)" rx="2" ry="2" />
<text  x="274.80" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.13%)</title><rect x="153.4" y="245" width="1.5" height="15.0" fill="rgb(227,11,52)" rx="2" ry="2" />
<text  x="156.35" y="255.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.32%)</title><rect x="147.3" y="373" width="3.8" height="15.0" fill="rgb(209,144,36)" rx="2" ry="2" />
<text  x="150.31" y="383.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.06%)</title><rect x="200.1" y="261" width="0.8" height="15.0" fill="rgb(210,58,13)" rx="2" ry="2" />
<text  x="203.13" y="271.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (1 samples, 0.06%)</title><rect x="354.8" y="437" width="0.7" height="15.0" fill="rgb(254,105,17)" rx="2" ry="2" />
<text  x="357.80" y="447.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (18 samples, 1.15%)</title><rect x="1083.6" y="229" width="13.6" height="15.0" fill="rgb(217,205,5)" rx="2" ry="2" />
<text  x="1086.62" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.06%)</title><rect x="70.4" y="437" width="0.7" height="15.0" fill="rgb(232,44,47)" rx="2" ry="2" />
<text  x="73.36" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMaybeMessage&lt;google::protobuf::FieldDescriptorProto&gt; (1 samples, 0.06%)</title><rect x="327.6" y="277" width="0.8" height="15.0" fill="rgb(216,193,23)" rx="2" ry="2" />
<text  x="330.63" y="287.5" ></text>
</g>
<g >
<title>torch::jit::registerOperator (1 samples, 0.06%)</title><rect x="329.9" y="357" width="0.8" height="15.0" fill="rgb(223,198,11)" rx="2" ry="2" />
<text  x="332.90" y="367.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOp (1 samples, 0.06%)</title><rect x="213.7" y="309" width="0.8" height="15.0" fill="rgb(210,120,12)" rx="2" ry="2" />
<text  x="216.71" y="319.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="328.4" y="341" width="0.7" height="15.0" fill="rgb(223,197,1)" rx="2" ry="2" />
<text  x="331.39" y="351.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (2 samples, 0.13%)</title><rect x="520.8" y="373" width="1.5" height="15.0" fill="rgb(214,143,31)" rx="2" ry="2" />
<text  x="523.78" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.13%)</title><rect x="326.1" y="309" width="1.5" height="15.0" fill="rgb(214,118,12)" rx="2" ry="2" />
<text  x="329.13" y="319.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (7 samples, 0.45%)</title><rect x="1156.8" y="357" width="5.3" height="15.0" fill="rgb(215,180,26)" rx="2" ry="2" />
<text  x="1159.80" y="367.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="280.1" y="357" width="0.8" height="15.0" fill="rgb(223,223,25)" rx="2" ry="2" />
<text  x="283.10" y="367.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (6 samples, 0.38%)</title><rect x="267.3" y="373" width="4.5" height="15.0" fill="rgb(241,197,19)" rx="2" ry="2" />
<text  x="270.28" y="383.5" ></text>
</g>
<g >
<title>c10::Device::validate (3 samples, 0.19%)</title><rect x="595.5" y="293" width="2.2" height="15.0" fill="rgb(242,174,45)" rx="2" ry="2" />
<text  x="598.47" y="303.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (2 samples, 0.13%)</title><rect x="1147.0" y="293" width="1.5" height="15.0" fill="rgb(225,110,23)" rx="2" ry="2" />
<text  x="1149.99" y="303.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::MemoryFormat&gt;::constexpr_storage_t (1 samples, 0.06%)</title><rect x="514.0" y="357" width="0.7" height="15.0" fill="rgb(210,105,17)" rx="2" ry="2" />
<text  x="516.99" y="367.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.06%)</title><rect x="411.4" y="229" width="0.7" height="15.0" fill="rgb(231,178,19)" rx="2" ry="2" />
<text  x="414.38" y="239.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.13%)</title><rect x="143.5" y="357" width="1.6" height="15.0" fill="rgb(230,82,28)" rx="2" ry="2" />
<text  x="146.54" y="367.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;double  (1 samples, 0.06%)</title><rect x="205.4" y="373" width="0.8" height="15.0" fill="rgb(246,19,46)" rx="2" ry="2" />
<text  x="208.41" y="383.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::FunctionSchema (1 samples, 0.06%)</title><rect x="296.7" y="389" width="0.8" height="15.0" fill="rgb(220,208,10)" rx="2" ry="2" />
<text  x="299.70" y="399.5" ></text>
</g>
<g >
<title>__libc_calloc (1 samples, 0.06%)</title><rect x="409.9" y="309" width="0.7" height="15.0" fill="rgb(220,38,1)" rx="2" ry="2" />
<text  x="412.87" y="319.5" ></text>
</g>
<g >
<title>onnx_torch::OpSet_PyTorch_ver1::ForEachSchema (1 samples, 0.06%)</title><rect x="294.4" y="373" width="0.8" height="15.0" fill="rgb(250,173,38)" rx="2" ry="2" />
<text  x="297.44" y="383.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (2 samples, 0.13%)</title><rect x="353.3" y="421" width="1.5" height="15.0" fill="rgb(212,54,8)" rx="2" ry="2" />
<text  x="356.29" y="431.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (2 samples, 0.13%)</title><rect x="289.2" y="293" width="1.5" height="15.0" fill="rgb(233,175,18)" rx="2" ry="2" />
<text  x="292.16" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="238.6" y="245" width="0.8" height="15.0" fill="rgb(209,9,26)" rx="2" ry="2" />
<text  x="241.61" y="255.5" ></text>
</g>
<g >
<title>[example-app] (1 samples, 0.06%)</title><rect x="22.8" y="437" width="0.8" height="15.0" fill="rgb(231,209,38)" rx="2" ry="2" />
<text  x="25.83" y="447.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (2 samples, 0.13%)</title><rect x="520.8" y="357" width="1.5" height="15.0" fill="rgb(236,85,25)" rx="2" ry="2" />
<text  x="523.78" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.06%)</title><rect x="216.0" y="149" width="0.7" height="15.0" fill="rgb(229,12,15)" rx="2" ry="2" />
<text  x="218.97" y="159.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="335.2" y="229" width="0.7" height="15.0" fill="rgb(210,74,48)" rx="2" ry="2" />
<text  x="338.18" y="239.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.06%)</title><rect x="322.4" y="309" width="0.7" height="15.0" fill="rgb(218,16,48)" rx="2" ry="2" />
<text  x="325.35" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="281.6" y="213" width="0.8" height="15.0" fill="rgb(234,160,38)" rx="2" ry="2" />
<text  x="284.61" y="223.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="184.3" y="245" width="0.7" height="15.0" fill="rgb(247,85,54)" rx="2" ry="2" />
<text  x="187.28" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (1 samples, 0.06%)</title><rect x="890.5" y="341" width="0.7" height="15.0" fill="rgb(248,3,17)" rx="2" ry="2" />
<text  x="893.47" y="351.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.06%)</title><rect x="1170.4" y="293" width="0.7" height="15.0" fill="rgb(219,94,26)" rx="2" ry="2" />
<text  x="1173.38" y="303.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.06%)</title><rect x="1175.7" y="197" width="0.7" height="15.0" fill="rgb(231,214,25)" rx="2" ry="2" />
<text  x="1178.66" y="207.5" ></text>
</g>
<g >
<title>__close_nocancel (1 samples, 0.06%)</title><rect x="157.9" y="341" width="0.7" height="15.0" fill="rgb(238,1,50)" rx="2" ry="2" />
<text  x="160.88" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="216.0" y="309" width="0.7" height="15.0" fill="rgb(239,101,53)" rx="2" ry="2" />
<text  x="218.97" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="287.6" y="245" width="0.8" height="15.0" fill="rgb(253,95,44)" rx="2" ry="2" />
<text  x="290.65" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.06%)</title><rect x="237.9" y="261" width="0.7" height="15.0" fill="rgb(210,16,12)" rx="2" ry="2" />
<text  x="240.85" y="271.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (3 samples, 0.19%)</title><rect x="735.1" y="325" width="2.2" height="15.0" fill="rgb(234,178,45)" rx="2" ry="2" />
<text  x="738.05" y="335.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (24 samples, 1.53%)</title><rect x="935.0" y="309" width="18.1" height="15.0" fill="rgb(214,154,20)" rx="2" ry="2" />
<text  x="937.99" y="319.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::contained_val (1 samples, 0.06%)</title><rect x="815.8" y="357" width="0.7" height="15.0" fill="rgb(207,85,46)" rx="2" ry="2" />
<text  x="818.78" y="367.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="300.5" y="245" width="0.7" height="15.0" fill="rgb(223,99,44)" rx="2" ry="2" />
<text  x="303.47" y="255.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (1 samples, 0.06%)</title><rect x="513.2" y="357" width="0.8" height="15.0" fill="rgb(224,101,48)" rx="2" ry="2" />
<text  x="516.24" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator bool (1 samples, 0.06%)</title><rect x="729.8" y="325" width="0.7" height="15.0" fill="rgb(225,40,39)" rx="2" ry="2" />
<text  x="732.77" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.06%)</title><rect x="307.3" y="165" width="0.7" height="15.0" fill="rgb(234,75,17)" rx="2" ry="2" />
<text  x="310.26" y="175.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (4 samples, 0.26%)</title><rect x="765.2" y="293" width="3.0" height="15.0" fill="rgb(235,97,29)" rx="2" ry="2" />
<text  x="768.23" y="303.5" ></text>
</g>
<g >
<title>c10::Device::validate (4 samples, 0.26%)</title><rect x="489.1" y="309" width="3.0" height="15.0" fill="rgb(243,55,51)" rx="2" ry="2" />
<text  x="492.09" y="319.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_THVector.cpp (1 samples, 0.06%)</title><rect x="192.6" y="405" width="0.7" height="15.0" fill="rgb(230,219,33)" rx="2" ry="2" />
<text  x="195.58" y="415.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="205.4" y="357" width="0.8" height="15.0" fill="rgb(251,208,46)" rx="2" ry="2" />
<text  x="208.41" y="367.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (2 samples, 0.13%)</title><rect x="1101.0" y="197" width="1.5" height="15.0" fill="rgb(250,155,5)" rx="2" ry="2" />
<text  x="1103.97" y="207.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="206.2" y="261" width="0.7" height="15.0" fill="rgb(216,200,7)" rx="2" ry="2" />
<text  x="209.16" y="271.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (1 samples, 0.06%)</title><rect x="151.8" y="389" width="0.8" height="15.0" fill="rgb(207,220,18)" rx="2" ry="2" />
<text  x="154.84" y="399.5" ></text>
</g>
<g >
<title>[libcudart.so.11.0.194] (2 samples, 0.13%)</title><rect x="409.9" y="325" width="1.5" height="15.0" fill="rgb(235,52,53)" rx="2" ry="2" />
<text  x="412.87" y="335.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;caffe2::TypeMeta&gt;::constexpr_storage_t&lt;caffe2::TypeMeta&gt; (1 samples, 0.06%)</title><rect x="839.2" y="341" width="0.7" height="15.0" fill="rgb(242,170,8)" rx="2" ry="2" />
<text  x="842.17" y="351.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.06%)</title><rect x="97.5" y="437" width="0.8" height="15.0" fill="rgb(238,194,34)" rx="2" ry="2" />
<text  x="100.52" y="447.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;bool&gt;::constexpr_storage_t (1 samples, 0.06%)</title><rect x="1164.3" y="325" width="0.8" height="15.0" fill="rgb(207,31,24)" rx="2" ry="2" />
<text  x="1167.35" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="836.2" y="341" width="0.7" height="15.0" fill="rgb(214,86,40)" rx="2" ry="2" />
<text  x="839.15" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="306.5" y="325" width="0.8" height="15.0" fill="rgb(254,147,22)" rx="2" ry="2" />
<text  x="309.51" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.06%)</title><rect x="407.6" y="309" width="0.8" height="15.0" fill="rgb(219,186,49)" rx="2" ry="2" />
<text  x="410.61" y="319.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (1 samples, 0.06%)</title><rect x="412.1" y="165" width="0.8" height="15.0" fill="rgb(220,27,46)" rx="2" ry="2" />
<text  x="415.14" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_insert&lt;c10::Symbol const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;c10::Symbol, true&gt; &gt; &gt; &gt; (1 samples, 0.06%)</title><rect x="367.6" y="309" width="0.8" height="15.0" fill="rgb(205,28,28)" rx="2" ry="2" />
<text  x="370.62" y="319.5" ></text>
</g>
<g >
<title>at::autocast::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autocast (5 samples, 0.32%)</title><rect x="280.9" y="373" width="3.7" height="15.0" fill="rgb(217,54,9)" rx="2" ry="2" />
<text  x="283.86" y="383.5" ></text>
</g>
<g >
<title>c10::tryTypeMetaToScalarType (17 samples, 1.09%)</title><rect x="938.8" y="293" width="12.8" height="15.0" fill="rgb(222,163,28)" rx="2" ry="2" />
<text  x="941.76" y="303.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (3 samples, 0.19%)</title><rect x="57.5" y="437" width="2.3" height="15.0" fill="rgb(222,219,1)" rx="2" ry="2" />
<text  x="60.53" y="447.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="300.5" y="309" width="0.7" height="15.0" fill="rgb(246,163,40)" rx="2" ry="2" />
<text  x="303.47" y="319.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (3 samples, 0.19%)</title><rect x="1128.1" y="213" width="2.3" height="15.0" fill="rgb(222,179,9)" rx="2" ry="2" />
<text  x="1131.13" y="223.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="329.9" y="245" width="0.8" height="15.0" fill="rgb(242,174,35)" rx="2" ry="2" />
<text  x="332.90" y="255.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (2 samples, 0.13%)</title><rect x="322.4" y="357" width="1.5" height="15.0" fill="rgb(217,147,38)" rx="2" ry="2" />
<text  x="325.35" y="367.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (3 samples, 0.19%)</title><rect x="404.6" y="437" width="2.3" height="15.0" fill="rgb(214,41,8)" rx="2" ry="2" />
<text  x="407.59" y="447.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (1 samples, 0.06%)</title><rect x="280.1" y="325" width="0.8" height="15.0" fill="rgb(221,148,10)" rx="2" ry="2" />
<text  x="283.10" y="335.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.19%)</title><rect x="228.8" y="261" width="2.3" height="15.0" fill="rgb(237,22,23)" rx="2" ry="2" />
<text  x="231.80" y="271.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.06%)</title><rect x="293.7" y="357" width="0.7" height="15.0" fill="rgb(226,177,15)" rx="2" ry="2" />
<text  x="296.68" y="367.5" ></text>
</g>
<g >
<title>schedule (7 samples, 0.45%)</title><rect x="337.4" y="149" width="5.3" height="15.0" fill="rgb(229,227,43)" rx="2" ry="2" />
<text  x="340.44" y="159.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr_target::~intrusive_ptr_target (6 samples, 0.38%)</title><rect x="781.1" y="293" width="4.5" height="15.0" fill="rgb(205,35,35)" rx="2" ry="2" />
<text  x="784.07" y="303.5" ></text>
</g>
<g >
<title>__cxa_demangle (1 samples, 0.06%)</title><rect x="306.5" y="357" width="0.8" height="15.0" fill="rgb(230,206,54)" rx="2" ry="2" />
<text  x="309.51" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.06%)</title><rect x="155.6" y="213" width="0.8" height="15.0" fill="rgb(218,217,31)" rx="2" ry="2" />
<text  x="158.61" y="223.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (2 samples, 0.13%)</title><rect x="520.8" y="341" width="1.5" height="15.0" fill="rgb(212,193,54)" rx="2" ry="2" />
<text  x="523.78" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::contained_val (1 samples, 0.06%)</title><rect x="796.9" y="341" width="0.8" height="15.0" fill="rgb(210,143,17)" rx="2" ry="2" />
<text  x="799.92" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (1 samples, 0.06%)</title><rect x="402.3" y="373" width="0.8" height="15.0" fill="rgb(208,71,27)" rx="2" ry="2" />
<text  x="405.33" y="383.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_SparseCUDAType.cpp (1 samples, 0.06%)</title><rect x="191.8" y="405" width="0.8" height="15.0" fill="rgb(216,152,49)" rx="2" ry="2" />
<text  x="194.83" y="415.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::ReportAndDelete (6 samples, 0.38%)</title><rect x="756.9" y="325" width="4.6" height="15.0" fill="rgb(239,219,27)" rx="2" ry="2" />
<text  x="759.93" y="335.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="271.8" y="309" width="0.8" height="15.0" fill="rgb(247,90,33)" rx="2" ry="2" />
<text  x="274.80" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.06%)</title><rect x="271.0" y="309" width="0.8" height="15.0" fill="rgb(212,170,49)" rx="2" ry="2" />
<text  x="274.05" y="319.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (4 samples, 0.26%)</title><rect x="720.0" y="293" width="3.0" height="15.0" fill="rgb(248,209,25)" rx="2" ry="2" />
<text  x="722.96" y="303.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.06%)</title><rect x="759.9" y="261" width="0.8" height="15.0" fill="rgb(207,17,46)" rx="2" ry="2" />
<text  x="762.95" y="271.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base&lt;c10::DeviceType const&amp;, int&gt; (7 samples, 0.45%)</title><rect x="804.5" y="357" width="5.2" height="15.0" fill="rgb(226,215,44)" rx="2" ry="2" />
<text  x="807.46" y="367.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (6 samples, 0.38%)</title><rect x="1184.7" y="277" width="4.5" height="15.0" fill="rgb(246,76,37)" rx="2" ry="2" />
<text  x="1187.72" y="287.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (6 samples, 0.38%)</title><rect x="253.7" y="293" width="4.5" height="15.0" fill="rgb(232,95,49)" rx="2" ry="2" />
<text  x="256.70" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2 samples, 0.13%)</title><rect x="358.6" y="389" width="1.5" height="15.0" fill="rgb(209,11,51)" rx="2" ry="2" />
<text  x="361.57" y="399.5" ></text>
</g>
<g >
<title>std::forward&lt;int&gt; (1 samples, 0.06%)</title><rect x="83.2" y="437" width="0.7" height="15.0" fill="rgb(237,87,40)" rx="2" ry="2" />
<text  x="86.18" y="447.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.06%)</title><rect x="418.9" y="293" width="0.8" height="15.0" fill="rgb(246,112,4)" rx="2" ry="2" />
<text  x="421.93" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.06%)</title><rect x="252.9" y="293" width="0.8" height="15.0" fill="rgb(216,27,1)" rx="2" ry="2" />
<text  x="255.94" y="303.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.06%)</title><rect x="191.1" y="325" width="0.7" height="15.0" fill="rgb(221,141,9)" rx="2" ry="2" />
<text  x="194.07" y="335.5" ></text>
</g>
<g >
<title>__cxa_demangle (1 samples, 0.06%)</title><rect x="385.0" y="421" width="0.7" height="15.0" fill="rgb(228,194,41)" rx="2" ry="2" />
<text  x="387.97" y="431.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_autograd_meta (1 samples, 0.06%)</title><rect x="40.9" y="437" width="0.8" height="15.0" fill="rgb(244,85,48)" rx="2" ry="2" />
<text  x="43.93" y="447.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.13%)</title><rect x="1122.9" y="133" width="1.5" height="15.0" fill="rgb(222,33,3)" rx="2" ry="2" />
<text  x="1125.85" y="143.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (1 samples, 0.06%)</title><rect x="492.9" y="389" width="0.7" height="15.0" fill="rgb(254,77,41)" rx="2" ry="2" />
<text  x="495.86" y="399.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_sizes_contiguous (11 samples, 0.70%)</title><rect x="1130.4" y="229" width="8.3" height="15.0" fill="rgb(206,100,52)" rx="2" ry="2" />
<text  x="1133.40" y="239.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="197.9" y="373" width="0.7" height="15.0" fill="rgb(205,144,32)" rx="2" ry="2" />
<text  x="200.86" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (3 samples, 0.19%)</title><rect x="250.7" y="245" width="2.2" height="15.0" fill="rgb(229,227,34)" rx="2" ry="2" />
<text  x="253.68" y="255.5" ></text>
</g>
<g >
<title>onnx_torch::OpSchema::TypeConstraint (1 samples, 0.06%)</title><rect x="294.4" y="325" width="0.8" height="15.0" fill="rgb(214,105,47)" rx="2" ry="2" />
<text  x="297.44" y="335.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.06%)</title><rect x="601.5" y="245" width="0.8" height="15.0" fill="rgb(229,33,9)" rx="2" ry="2" />
<text  x="604.51" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;int&gt; (1 samples, 0.06%)</title><rect x="809.7" y="373" width="0.8" height="15.0" fill="rgb(210,177,23)" rx="2" ry="2" />
<text  x="812.74" y="383.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (10 samples, 0.64%)</title><rect x="335.2" y="437" width="7.5" height="15.0" fill="rgb(220,44,49)" rx="2" ry="2" />
<text  x="338.18" y="447.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="223.5" y="309" width="0.8" height="15.0" fill="rgb(220,59,15)" rx="2" ry="2" />
<text  x="226.52" y="319.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::~AutoNonVariableTypeMode (1 samples, 0.06%)</title><rect x="989.3" y="357" width="0.8" height="15.0" fill="rgb(237,24,29)" rx="2" ry="2" />
<text  x="992.31" y="367.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (2 samples, 0.13%)</title><rect x="256.7" y="261" width="1.5" height="15.0" fill="rgb(206,195,51)" rx="2" ry="2" />
<text  x="259.71" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="142.0" y="197" width="0.8" height="15.0" fill="rgb(224,35,40)" rx="2" ry="2" />
<text  x="145.03" y="207.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.06%)</title><rect x="205.4" y="341" width="0.8" height="15.0" fill="rgb(240,8,38)" rx="2" ry="2" />
<text  x="208.41" y="351.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (2 samples, 0.13%)</title><rect x="160.1" y="389" width="1.5" height="15.0" fill="rgb(235,107,10)" rx="2" ry="2" />
<text  x="163.14" y="399.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerSchema (4 samples, 0.26%)</title><rect x="217.5" y="325" width="3.0" height="15.0" fill="rgb(214,50,46)" rx="2" ry="2" />
<text  x="220.48" y="335.5" ></text>
</g>
<g >
<title>c10::either&lt;torch::jit::Operator::C10Operator, torch::jit::Operator::JitOnlyOperator&gt;::fold&lt;c10::FunctionSchema const&amp;, torch::jit::Operator::schema (7 samples, 0.45%)</title><rect x="368.4" y="405" width="5.3" height="15.0" fill="rgb(219,130,6)" rx="2" ry="2" />
<text  x="371.38" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="424.2" y="229" width="0.8" height="15.0" fill="rgb(224,150,9)" rx="2" ry="2" />
<text  x="427.21" y="239.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.06%)</title><rect x="284.6" y="277" width="0.8" height="15.0" fill="rgb(206,9,0)" rx="2" ry="2" />
<text  x="287.63" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.06%)</title><rect x="185.0" y="261" width="0.8" height="15.0" fill="rgb(226,68,41)" rx="2" ry="2" />
<text  x="188.04" y="271.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="266.5" y="357" width="0.8" height="15.0" fill="rgb(220,35,0)" rx="2" ry="2" />
<text  x="269.52" y="367.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (9 samples, 0.58%)</title><rect x="1002.1" y="325" width="6.8" height="15.0" fill="rgb(239,98,30)" rx="2" ry="2" />
<text  x="1005.14" y="335.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (6 samples, 0.38%)</title><rect x="1184.7" y="309" width="4.5" height="15.0" fill="rgb(249,205,52)" rx="2" ry="2" />
<text  x="1187.72" y="319.5" ></text>
</g>
<g >
<title>c10::TensorType::operator== (1 samples, 0.06%)</title><rect x="265.0" y="277" width="0.8" height="15.0" fill="rgb(240,121,5)" rx="2" ry="2" />
<text  x="268.01" y="287.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::New (5 samples, 0.32%)</title><rect x="660.4" y="213" width="3.7" height="15.0" fill="rgb(213,54,6)" rx="2" ry="2" />
<text  x="663.36" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt; (5 samples, 0.32%)</title><rect x="551.0" y="309" width="3.7" height="15.0" fill="rgb(214,183,53)" rx="2" ry="2" />
<text  x="553.96" y="319.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.06%)</title><rect x="431.0" y="229" width="0.8" height="15.0" fill="rgb(215,38,9)" rx="2" ry="2" />
<text  x="434.00" y="239.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;  (1 samples, 0.06%)</title><rect x="266.5" y="373" width="0.8" height="15.0" fill="rgb(212,23,20)" rx="2" ry="2" />
<text  x="269.52" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="385.0" y="341" width="0.7" height="15.0" fill="rgb(240,2,33)" rx="2" ry="2" />
<text  x="387.97" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::contained_val (1 samples, 0.06%)</title><rect x="937.3" y="277" width="0.7" height="15.0" fill="rgb(206,201,22)" rx="2" ry="2" />
<text  x="940.25" y="287.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="235.6" y="261" width="0.7" height="15.0" fill="rgb(214,144,8)" rx="2" ry="2" />
<text  x="238.59" y="271.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.06%)</title><rect x="191.1" y="341" width="0.7" height="15.0" fill="rgb(231,23,44)" rx="2" ry="2" />
<text  x="194.07" y="351.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="252.9" y="277" width="0.8" height="15.0" fill="rgb(237,225,45)" rx="2" ry="2" />
<text  x="255.94" y="287.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_device (1 samples, 0.06%)</title><rect x="476.3" y="357" width="0.7" height="15.0" fill="rgb(243,53,26)" rx="2" ry="2" />
<text  x="479.27" y="367.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (2 samples, 0.13%)</title><rect x="190.3" y="373" width="1.5" height="15.0" fill="rgb(228,28,6)" rx="2" ry="2" />
<text  x="193.32" y="383.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (3 samples, 0.19%)</title><rect x="600.0" y="277" width="2.3" height="15.0" fill="rgb(232,7,6)" rx="2" ry="2" />
<text  x="603.00" y="287.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="203.1" y="357" width="0.8" height="15.0" fill="rgb(236,219,21)" rx="2" ry="2" />
<text  x="206.15" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="308.0" y="293" width="0.8" height="15.0" fill="rgb(218,132,18)" rx="2" ry="2" />
<text  x="311.02" y="303.5" ></text>
</g>
<g >
<title>Xbyak::util::Cpu::Cpu (1 samples, 0.06%)</title><rect x="286.1" y="373" width="0.8" height="15.0" fill="rgb(211,60,39)" rx="2" ry="2" />
<text  x="289.14" y="383.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (5 samples, 0.32%)</title><rect x="910.1" y="293" width="3.8" height="15.0" fill="rgb(221,119,52)" rx="2" ry="2" />
<text  x="913.09" y="303.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.06%)</title><rect x="205.4" y="325" width="0.8" height="15.0" fill="rgb(243,123,54)" rx="2" ry="2" />
<text  x="208.41" y="335.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (3 samples, 0.19%)</title><rect x="1177.9" y="277" width="2.3" height="15.0" fill="rgb(215,80,40)" rx="2" ry="2" />
<text  x="1180.93" y="287.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="216.0" y="277" width="0.7" height="15.0" fill="rgb(253,51,42)" rx="2" ry="2" />
<text  x="218.97" y="287.5" ></text>
</g>
<g >
<title>copy_page (2 samples, 0.13%)</title><rect x="149.6" y="261" width="1.5" height="15.0" fill="rgb(216,77,43)" rx="2" ry="2" />
<text  x="152.58" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_deleter (6 samples, 0.38%)</title><rect x="967.4" y="325" width="4.6" height="15.0" fill="rgb(253,28,46)" rx="2" ry="2" />
<text  x="970.43" y="335.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;caffe2::TypeMeta&gt;::constexpr_optional_base (3 samples, 0.19%)</title><rect x="507.2" y="357" width="2.3" height="15.0" fill="rgb(252,35,26)" rx="2" ry="2" />
<text  x="510.20" y="367.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TypeDefault.cpp (10 samples, 0.64%)</title><rect x="335.2" y="405" width="7.5" height="15.0" fill="rgb(241,66,24)" rx="2" ry="2" />
<text  x="338.18" y="415.5" ></text>
</g>
<g >
<title>c10::SingleElementType&lt; (1 samples, 0.06%)</title><rect x="273.3" y="277" width="0.8" height="15.0" fill="rgb(247,197,54)" rx="2" ry="2" />
<text  x="276.31" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="168.4" y="197" width="0.8" height="15.0" fill="rgb(223,30,15)" rx="2" ry="2" />
<text  x="171.44" y="207.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::AutoNonVariableTypeMode (1 samples, 0.06%)</title><rect x="555.5" y="357" width="0.7" height="15.0" fill="rgb(234,70,30)" rx="2" ry="2" />
<text  x="558.49" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (1 samples, 0.06%)</title><rect x="319.3" y="277" width="0.8" height="15.0" fill="rgb(219,61,6)" rx="2" ry="2" />
<text  x="322.34" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.13%)</title><rect x="153.4" y="197" width="1.5" height="15.0" fill="rgb(243,216,41)" rx="2" ry="2" />
<text  x="156.35" y="207.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::initialized (1 samples, 0.06%)</title><rect x="803.0" y="325" width="0.7" height="15.0" fill="rgb(226,107,2)" rx="2" ry="2" />
<text  x="805.95" y="335.5" ></text>
</g>
<g >
<title>__remove_shared_vm_struct (1 samples, 0.06%)</title><rect x="145.8" y="117" width="0.8" height="15.0" fill="rgb(244,162,19)" rx="2" ry="2" />
<text  x="148.81" y="127.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="206.2" y="245" width="0.7" height="15.0" fill="rgb(211,192,43)" rx="2" ry="2" />
<text  x="209.16" y="255.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (1 samples, 0.06%)</title><rect x="167.7" y="293" width="0.7" height="15.0" fill="rgb(233,198,3)" rx="2" ry="2" />
<text  x="170.69" y="303.5" ></text>
</g>
<g >
<title>unmap_page_range (12 samples, 0.77%)</title><rect x="1171.1" y="309" width="9.1" height="15.0" fill="rgb(234,99,24)" rx="2" ry="2" />
<text  x="1174.14" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable&lt;std::pair&lt;int const, int&gt; const*&gt; (1 samples, 0.06%)</title><rect x="313.3" y="389" width="0.8" height="15.0" fill="rgb(235,155,0)" rx="2" ry="2" />
<text  x="316.30" y="399.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.06%)</title><rect x="194.8" y="325" width="0.8" height="15.0" fill="rgb(226,80,48)" rx="2" ry="2" />
<text  x="197.85" y="335.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator* (1 samples, 0.06%)</title><rect x="830.9" y="341" width="0.7" height="15.0" fill="rgb(226,122,11)" rx="2" ry="2" />
<text  x="833.87" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.06%)</title><rect x="280.1" y="341" width="0.8" height="15.0" fill="rgb(237,178,16)" rx="2" ry="2" />
<text  x="283.10" y="351.5" ></text>
</g>
<g >
<title>get_task_policy.part.0 (1 samples, 0.06%)</title><rect x="323.9" y="229" width="0.7" height="15.0" fill="rgb(246,98,16)" rx="2" ry="2" />
<text  x="326.86" y="239.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (3 samples, 0.19%)</title><rect x="250.7" y="261" width="2.2" height="15.0" fill="rgb(215,20,54)" rx="2" ry="2" />
<text  x="253.68" y="271.5" ></text>
</g>
<g >
<title>isalpha (1 samples, 0.06%)</title><rect x="252.2" y="213" width="0.7" height="15.0" fill="rgb(226,74,42)" rx="2" ry="2" />
<text  x="255.19" y="223.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (3 samples, 0.19%)</title><rect x="173.7" y="357" width="2.3" height="15.0" fill="rgb(218,65,52)" rx="2" ry="2" />
<text  x="176.72" y="367.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_schema.cc (1 samples, 0.06%)</title><rect x="294.4" y="405" width="0.8" height="15.0" fill="rgb(217,150,20)" rx="2" ry="2" />
<text  x="297.44" y="415.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.06%)</title><rect x="753.2" y="341" width="0.7" height="15.0" fill="rgb(229,64,28)" rx="2" ry="2" />
<text  x="756.16" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::initialized (2 samples, 0.13%)</title><rect x="1166.6" y="341" width="1.5" height="15.0" fill="rgb(244,96,13)" rx="2" ry="2" />
<text  x="1169.61" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (3 samples, 0.19%)</title><rect x="176.7" y="341" width="2.3" height="15.0" fill="rgb(212,7,31)" rx="2" ry="2" />
<text  x="179.74" y="351.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.06%)</title><rect x="167.7" y="277" width="0.7" height="15.0" fill="rgb(236,17,11)" rx="2" ry="2" />
<text  x="170.69" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (6 samples, 0.38%)</title><rect x="228.8" y="325" width="4.5" height="15.0" fill="rgb(207,132,33)" rx="2" ry="2" />
<text  x="231.80" y="335.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (2 samples, 0.13%)</title><rect x="206.9" y="341" width="1.5" height="15.0" fill="rgb(246,204,46)" rx="2" ry="2" />
<text  x="209.92" y="351.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (7 samples, 0.45%)</title><rect x="368.4" y="389" width="5.3" height="15.0" fill="rgb(221,91,0)" rx="2" ry="2" />
<text  x="371.38" y="399.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.06%)</title><rect x="81.7" y="437" width="0.7" height="15.0" fill="rgb(236,28,47)" rx="2" ry="2" />
<text  x="84.68" y="447.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::use_count (1 samples, 0.06%)</title><rect x="541.2" y="357" width="0.7" height="15.0" fill="rgb(230,104,30)" rx="2" ry="2" />
<text  x="544.15" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::deregisterKernel_ (12 samples, 0.77%)</title><rect x="425.0" y="293" width="9.0" height="15.0" fill="rgb(251,115,16)" rx="2" ry="2" />
<text  x="427.96" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (6 samples, 0.38%)</title><rect x="909.3" y="309" width="4.6" height="15.0" fill="rgb(239,195,32)" rx="2" ry="2" />
<text  x="912.34" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;, std::allocator&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; &gt;::_M_realloc_insert&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; (1 samples, 0.06%)</title><rect x="233.3" y="325" width="0.8" height="15.0" fill="rgb(212,16,22)" rx="2" ry="2" />
<text  x="236.32" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.06%)</title><rect x="220.5" y="309" width="0.8" height="15.0" fill="rgb(212,132,9)" rx="2" ry="2" />
<text  x="223.50" y="319.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;signed char&gt; (2 samples, 0.13%)</title><rect x="947.1" y="277" width="1.5" height="15.0" fill="rgb(209,192,45)" rx="2" ry="2" />
<text  x="950.06" y="287.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (2 samples, 0.13%)</title><rect x="222.0" y="325" width="1.5" height="15.0" fill="rgb(230,113,8)" rx="2" ry="2" />
<text  x="225.01" y="335.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="307.3" y="341" width="0.7" height="15.0" fill="rgb(223,205,31)" rx="2" ry="2" />
<text  x="310.26" y="351.5" ></text>
</g>
<g >
<title>__sbrk (1 samples, 0.06%)</title><rect x="228.0" y="229" width="0.8" height="15.0" fill="rgb(247,4,24)" rx="2" ry="2" />
<text  x="231.04" y="239.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.06%)</title><rect x="371.4" y="341" width="0.7" height="15.0" fill="rgb(248,64,4)" rx="2" ry="2" />
<text  x="374.39" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="434.0" y="325" width="0.8" height="15.0" fill="rgb(212,25,9)" rx="2" ry="2" />
<text  x="437.02" y="335.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::optional (5 samples, 0.32%)</title><rect x="799.9" y="357" width="3.8" height="15.0" fill="rgb(235,73,23)" rx="2" ry="2" />
<text  x="802.94" y="367.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.06%)</title><rect x="145.8" y="181" width="0.8" height="15.0" fill="rgb(216,210,45)" rx="2" ry="2" />
<text  x="148.81" y="191.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.06%)</title><rect x="308.0" y="373" width="0.8" height="15.0" fill="rgb(215,80,37)" rx="2" ry="2" />
<text  x="311.02" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="779.6" y="309" width="0.7" height="15.0" fill="rgb(234,36,36)" rx="2" ry="2" />
<text  x="782.57" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_emplace_unique&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, caffe2::OpSchema&gt; &gt; (2 samples, 0.13%)</title><rect x="311.0" y="373" width="1.5" height="15.0" fill="rgb(244,163,8)" rx="2" ry="2" />
<text  x="314.04" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="372.9" y="325" width="0.8" height="15.0" fill="rgb(251,168,27)" rx="2" ry="2" />
<text  x="375.90" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (1 samples, 0.06%)</title><rect x="223.5" y="341" width="0.8" height="15.0" fill="rgb(254,125,3)" rx="2" ry="2" />
<text  x="226.52" y="351.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.06%)</title><rect x="243.9" y="133" width="0.7" height="15.0" fill="rgb(214,62,50)" rx="2" ry="2" />
<text  x="246.89" y="143.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.13%)</title><rect x="280.9" y="309" width="1.5" height="15.0" fill="rgb(241,195,6)" rx="2" ry="2" />
<text  x="283.86" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_head (2 samples, 0.13%)</title><rect x="972.7" y="277" width="1.5" height="15.0" fill="rgb(214,209,14)" rx="2" ry="2" />
<text  x="975.71" y="287.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="293.7" y="277" width="0.7" height="15.0" fill="rgb(232,126,45)" rx="2" ry="2" />
<text  x="296.68" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="284.6" y="293" width="0.8" height="15.0" fill="rgb(242,195,31)" rx="2" ry="2" />
<text  x="287.63" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.06%)</title><rect x="307.3" y="373" width="0.7" height="15.0" fill="rgb(238,70,27)" rx="2" ry="2" />
<text  x="310.26" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.06%)</title><rect x="256.0" y="261" width="0.7" height="15.0" fill="rgb(216,88,36)" rx="2" ry="2" />
<text  x="258.96" y="271.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (4 samples, 0.26%)</title><rect x="258.2" y="293" width="3.0" height="15.0" fill="rgb(241,11,0)" rx="2" ry="2" />
<text  x="261.22" y="303.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseList (1 samples, 0.06%)</title><rect x="360.8" y="293" width="0.8" height="15.0" fill="rgb(241,43,39)" rx="2" ry="2" />
<text  x="363.83" y="303.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.06%)</title><rect x="328.4" y="245" width="0.7" height="15.0" fill="rgb(220,71,32)" rx="2" ry="2" />
<text  x="331.39" y="255.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="232.6" y="229" width="0.7" height="15.0" fill="rgb(237,199,31)" rx="2" ry="2" />
<text  x="235.57" y="239.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseBaseType (1 samples, 0.06%)</title><rect x="360.1" y="325" width="0.7" height="15.0" fill="rgb(209,110,3)" rx="2" ry="2" />
<text  x="363.08" y="335.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (3 samples, 0.19%)</title><rect x="572.8" y="325" width="2.3" height="15.0" fill="rgb(210,68,28)" rx="2" ry="2" />
<text  x="575.84" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.06%)</title><rect x="220.5" y="325" width="0.8" height="15.0" fill="rgb(216,151,23)" rx="2" ry="2" />
<text  x="223.50" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.06%)</title><rect x="335.2" y="245" width="0.7" height="15.0" fill="rgb(228,165,2)" rx="2" ry="2" />
<text  x="338.18" y="255.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="53.0" y="437" width="0.8" height="15.0" fill="rgb(211,97,6)" rx="2" ry="2" />
<text  x="56.01" y="447.5" ></text>
</g>
<g >
<title>caffe2::OpSchema::OpSchema (1 samples, 0.06%)</title><rect x="310.3" y="373" width="0.7" height="15.0" fill="rgb(229,145,9)" rx="2" ry="2" />
<text  x="313.28" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="306.5" y="293" width="0.8" height="15.0" fill="rgb(253,56,0)" rx="2" ry="2" />
<text  x="309.51" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="436.3" y="389" width="0.7" height="15.0" fill="rgb(228,61,16)" rx="2" ry="2" />
<text  x="439.28" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (2 samples, 0.13%)</title><rect x="256.7" y="277" width="1.5" height="15.0" fill="rgb(211,63,1)" rx="2" ry="2" />
<text  x="259.71" y="287.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="283.9" y="341" width="0.7" height="15.0" fill="rgb(219,129,23)" rx="2" ry="2" />
<text  x="286.87" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.06%)</title><rect x="237.9" y="245" width="0.7" height="15.0" fill="rgb(240,28,9)" rx="2" ry="2" />
<text  x="240.85" y="255.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.06%)</title><rect x="142.0" y="165" width="0.8" height="15.0" fill="rgb(207,134,21)" rx="2" ry="2" />
<text  x="145.03" y="175.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.13%)</title><rect x="1178.7" y="229" width="1.5" height="15.0" fill="rgb(233,101,24)" rx="2" ry="2" />
<text  x="1181.68" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2 samples, 0.13%)</title><rect x="358.6" y="405" width="1.5" height="15.0" fill="rgb(236,189,8)" rx="2" ry="2" />
<text  x="361.57" y="415.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="655.8" y="165" width="0.8" height="15.0" fill="rgb(227,127,10)" rx="2" ry="2" />
<text  x="658.83" y="175.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.06%)</title><rect x="195.6" y="357" width="0.8" height="15.0" fill="rgb(220,215,41)" rx="2" ry="2" />
<text  x="198.60" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (2 samples, 0.13%)</title><rect x="432.5" y="277" width="1.5" height="15.0" fill="rgb(213,212,13)" rx="2" ry="2" />
<text  x="435.51" y="287.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::allocate (36 samples, 2.30%)</title><rect x="1097.2" y="229" width="27.2" height="15.0" fill="rgb(242,192,8)" rx="2" ry="2" />
<text  x="1100.20" y="239.5" >c..</text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="296.7" y="357" width="0.8" height="15.0" fill="rgb(225,122,29)" rx="2" ry="2" />
<text  x="299.70" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (4 samples, 0.26%)</title><rect x="1165.1" y="357" width="3.0" height="15.0" fill="rgb(242,145,19)" rx="2" ry="2" />
<text  x="1168.10" y="367.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2 samples, 0.13%)</title><rect x="1178.7" y="213" width="1.5" height="15.0" fill="rgb(209,199,40)" rx="2" ry="2" />
<text  x="1181.68" y="223.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.13%)</title><rect x="397.8" y="437" width="1.5" height="15.0" fill="rgb(254,181,8)" rx="2" ry="2" />
<text  x="400.80" y="447.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (1 samples, 0.06%)</title><rect x="265.0" y="309" width="0.8" height="15.0" fill="rgb(224,34,17)" rx="2" ry="2" />
<text  x="268.01" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;c10::Symbol, true&gt; &gt; &gt;::_M_allocate_buckets (1 samples, 0.06%)</title><rect x="297.5" y="341" width="0.7" height="15.0" fill="rgb(230,146,34)" rx="2" ry="2" />
<text  x="300.46" y="351.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.06%)</title><rect x="50.0" y="437" width="0.7" height="15.0" fill="rgb(223,10,15)" rx="2" ry="2" />
<text  x="52.99" y="447.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.06%)</title><rect x="291.4" y="389" width="0.8" height="15.0" fill="rgb(246,223,42)" rx="2" ry="2" />
<text  x="294.42" y="399.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="1175.7" y="213" width="0.7" height="15.0" fill="rgb(216,142,41)" rx="2" ry="2" />
<text  x="1178.66" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_rehash (8 samples, 0.51%)</title><rect x="336.7" y="213" width="6.0" height="15.0" fill="rgb(207,15,40)" rx="2" ry="2" />
<text  x="339.69" y="223.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.06%)</title><rect x="317.1" y="357" width="0.7" height="15.0" fill="rgb(226,42,4)" rx="2" ry="2" />
<text  x="320.07" y="367.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.06%)</title><rect x="1170.4" y="341" width="0.7" height="15.0" fill="rgb(212,66,6)" rx="2" ry="2" />
<text  x="1173.38" y="351.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (1 samples, 0.06%)</title><rect x="280.9" y="85" width="0.7" height="15.0" fill="rgb(230,224,21)" rx="2" ry="2" />
<text  x="283.86" y="95.5" ></text>
</g>
<g >
<title>perf_event_pid_type (1 samples, 0.06%)</title><rect x="280.9" y="69" width="0.7" height="15.0" fill="rgb(244,38,22)" rx="2" ry="2" />
<text  x="283.86" y="79.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.06%)</title><rect x="385.7" y="421" width="0.8" height="15.0" fill="rgb(231,176,30)" rx="2" ry="2" />
<text  x="388.73" y="431.5" ></text>
</g>
<g >
<title>brk (1 samples, 0.06%)</title><rect x="228.0" y="213" width="0.8" height="15.0" fill="rgb(254,117,28)" rx="2" ry="2" />
<text  x="231.04" y="223.5" ></text>
</g>
<g >
<title>c10::detail::getTypePtr_&lt;long&gt;::call (1 samples, 0.06%)</title><rect x="175.2" y="325" width="0.8" height="15.0" fill="rgb(249,79,11)" rx="2" ry="2" />
<text  x="178.23" y="335.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.06%)</title><rect x="179.0" y="325" width="0.8" height="15.0" fill="rgb(241,3,25)" rx="2" ry="2" />
<text  x="182.00" y="335.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.06%)</title><rect x="188.1" y="341" width="0.7" height="15.0" fill="rgb(223,182,3)" rx="2" ry="2" />
<text  x="191.06" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_realloc_insert&lt;c10::Argument&gt; (1 samples, 0.06%)</title><rect x="228.0" y="325" width="0.8" height="15.0" fill="rgb(211,108,39)" rx="2" ry="2" />
<text  x="231.04" y="335.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseList (9 samples, 0.58%)</title><rect x="335.9" y="261" width="6.8" height="15.0" fill="rgb(211,220,41)" rx="2" ry="2" />
<text  x="338.93" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="306.5" y="309" width="0.8" height="15.0" fill="rgb(237,150,40)" rx="2" ry="2" />
<text  x="309.51" y="319.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;long&gt; (1 samples, 0.06%)</title><rect x="945.5" y="277" width="0.8" height="15.0" fill="rgb(225,164,9)" rx="2" ry="2" />
<text  x="948.55" y="287.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.06%)</title><rect x="410.6" y="309" width="0.8" height="15.0" fill="rgb(206,189,8)" rx="2" ry="2" />
<text  x="413.63" y="319.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (2 samples, 0.13%)</title><rect x="206.9" y="325" width="1.5" height="15.0" fill="rgb(237,94,53)" rx="2" ry="2" />
<text  x="209.92" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (6 samples, 0.38%)</title><rect x="683.0" y="149" width="4.5" height="15.0" fill="rgb(224,156,15)" rx="2" ry="2" />
<text  x="685.99" y="159.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (1 samples, 0.06%)</title><rect x="360.8" y="309" width="0.8" height="15.0" fill="rgb(216,122,31)" rx="2" ry="2" />
<text  x="363.83" y="319.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.06%)</title><rect x="274.1" y="373" width="0.7" height="15.0" fill="rgb(234,105,53)" rx="2" ry="2" />
<text  x="277.07" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.06%)</title><rect x="972.0" y="325" width="0.7" height="15.0" fill="rgb(242,23,34)" rx="2" ry="2" />
<text  x="974.96" y="335.5" ></text>
</g>
<g >
<title>[libc10.so] (2 samples, 0.13%)</title><rect x="330.7" y="453" width="1.5" height="15.0" fill="rgb(218,143,15)" rx="2" ry="2" />
<text  x="333.65" y="463.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (1 samples, 0.06%)</title><rect x="17.5" y="405" width="0.8" height="15.0" fill="rgb(241,29,34)" rx="2" ry="2" />
<text  x="20.54" y="415.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="216.0" y="197" width="0.7" height="15.0" fill="rgb(217,157,29)" rx="2" ry="2" />
<text  x="218.97" y="207.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerSchema (1 samples, 0.06%)</title><rect x="209.9" y="341" width="0.8" height="15.0" fill="rgb(251,73,51)" rx="2" ry="2" />
<text  x="212.94" y="351.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.13%)</title><rect x="362.3" y="437" width="1.5" height="15.0" fill="rgb(207,213,49)" rx="2" ry="2" />
<text  x="365.34" y="447.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.13%)</title><rect x="754.7" y="325" width="1.5" height="15.0" fill="rgb(214,190,19)" rx="2" ry="2" />
<text  x="757.67" y="335.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.06%)</title><rect x="408.4" y="197" width="0.7" height="15.0" fill="rgb(251,35,6)" rx="2" ry="2" />
<text  x="411.36" y="207.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="1175.7" y="229" width="0.7" height="15.0" fill="rgb(231,51,24)" rx="2" ry="2" />
<text  x="1178.66" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="281.6" y="197" width="0.8" height="15.0" fill="rgb(251,161,27)" rx="2" ry="2" />
<text  x="284.61" y="207.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (1 samples, 0.06%)</title><rect x="279.3" y="341" width="0.8" height="15.0" fill="rgb(214,52,17)" rx="2" ry="2" />
<text  x="282.35" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::optional&lt;c10::DeviceType const&amp;, int&gt; (11 samples, 0.70%)</title><rect x="483.8" y="373" width="8.3" height="15.0" fill="rgb(220,90,4)" rx="2" ry="2" />
<text  x="486.81" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (38 samples, 2.43%)</title><rect x="408.4" y="405" width="28.6" height="15.0" fill="rgb(230,190,54)" rx="2" ry="2" />
<text  x="411.36" y="415.5" >[l..</text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.06%)</title><rect x="196.4" y="277" width="0.7" height="15.0" fill="rgb(237,7,44)" rx="2" ry="2" />
<text  x="199.36" y="287.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::dataptr (1 samples, 0.06%)</title><rect x="801.4" y="341" width="0.8" height="15.0" fill="rgb(226,56,45)" rx="2" ry="2" />
<text  x="804.45" y="351.5" ></text>
</g>
<g >
<title>_extract_crng (1 samples, 0.06%)</title><rect x="1169.6" y="309" width="0.8" height="15.0" fill="rgb(235,187,25)" rx="2" ry="2" />
<text  x="1172.63" y="319.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.06%)</title><rect x="1179.4" y="181" width="0.8" height="15.0" fill="rgb(215,8,25)" rx="2" ry="2" />
<text  x="1182.44" y="191.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="293.7" y="373" width="0.7" height="15.0" fill="rgb(249,17,10)" rx="2" ry="2" />
<text  x="296.68" y="383.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.13%)</title><rect x="656.6" y="197" width="1.5" height="15.0" fill="rgb(253,13,12)" rx="2" ry="2" />
<text  x="659.59" y="207.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.13%)</title><rect x="326.1" y="357" width="1.5" height="15.0" fill="rgb(248,38,47)" rx="2" ry="2" />
<text  x="329.13" y="367.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.06%)</title><rect x="323.9" y="245" width="0.7" height="15.0" fill="rgb(209,23,31)" rx="2" ry="2" />
<text  x="326.86" y="255.5" ></text>
</g>
<g >
<title>std::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::tuple&lt;c10::AutogradMetaInterface*&amp;, std::default_delete&lt;torch::autograd::AutogradMeta&gt;, true&gt; (6 samples, 0.38%)</title><rect x="962.9" y="325" width="4.5" height="15.0" fill="rgb(211,46,1)" rx="2" ry="2" />
<text  x="965.90" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="408.4" y="261" width="0.7" height="15.0" fill="rgb(224,210,45)" rx="2" ry="2" />
<text  x="411.36" y="271.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::deregisterSchema (2 samples, 0.13%)</title><rect x="418.2" y="309" width="1.5" height="15.0" fill="rgb(208,171,8)" rx="2" ry="2" />
<text  x="421.17" y="319.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.13%)</title><rect x="188.1" y="357" width="1.5" height="15.0" fill="rgb(233,71,5)" rx="2" ry="2" />
<text  x="191.06" y="367.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.06%)</title><rect x="402.3" y="421" width="0.8" height="15.0" fill="rgb(211,95,35)" rx="2" ry="2" />
<text  x="405.33" y="431.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::~ExcludeDispatchKeyGuard (1 samples, 0.06%)</title><rect x="989.3" y="341" width="0.8" height="15.0" fill="rgb(241,94,52)" rx="2" ry="2" />
<text  x="992.31" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.13%)</title><rect x="23.6" y="437" width="1.5" height="15.0" fill="rgb(246,76,25)" rx="2" ry="2" />
<text  x="26.58" y="447.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (3 samples, 0.19%)</title><rect x="404.6" y="373" width="2.3" height="15.0" fill="rgb(231,76,32)" rx="2" ry="2" />
<text  x="407.59" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="308.8" y="229" width="0.7" height="15.0" fill="rgb(229,13,17)" rx="2" ry="2" />
<text  x="311.77" y="239.5" ></text>
</g>
<g >
<title>ctx_resched (6 samples, 0.38%)</title><rect x="1184.7" y="325" width="4.5" height="15.0" fill="rgb(234,194,1)" rx="2" ry="2" />
<text  x="1187.72" y="335.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseBaseType (2 samples, 0.13%)</title><rect x="405.3" y="357" width="1.6" height="15.0" fill="rgb(232,174,35)" rx="2" ry="2" />
<text  x="408.35" y="367.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp;  (1 samples, 0.06%)</title><rect x="265.0" y="373" width="0.8" height="15.0" fill="rgb(224,171,8)" rx="2" ry="2" />
<text  x="268.01" y="383.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::checkSchemaAndRegisterOp_ (2 samples, 0.13%)</title><rect x="297.5" y="389" width="1.5" height="15.0" fill="rgb(240,187,52)" rx="2" ry="2" />
<text  x="300.46" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.06%)</title><rect x="360.1" y="309" width="0.7" height="15.0" fill="rgb(212,166,33)" rx="2" ry="2" />
<text  x="363.08" y="319.5" ></text>
</g>
<g >
<title>c10::Device::Device (5 samples, 0.32%)</title><rect x="488.3" y="325" width="3.8" height="15.0" fill="rgb(215,73,21)" rx="2" ry="2" />
<text  x="491.34" y="335.5" ></text>
</g>
<g >
<title>c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;::either (1 samples, 0.06%)</title><rect x="233.3" y="309" width="0.8" height="15.0" fill="rgb(212,150,5)" rx="2" ry="2" />
<text  x="236.32" y="319.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;int&gt; (1 samples, 0.06%)</title><rect x="944.8" y="277" width="0.7" height="15.0" fill="rgb(230,108,20)" rx="2" ry="2" />
<text  x="947.80" y="287.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_broadcast_ops.cc (1 samples, 0.06%)</title><rect x="284.6" y="405" width="0.8" height="15.0" fill="rgb(223,15,41)" rx="2" ry="2" />
<text  x="287.63" y="415.5" ></text>
</g>
<g >
<title>c10::isFloatingType (1 samples, 0.06%)</title><rect x="56.8" y="437" width="0.7" height="15.0" fill="rgb(249,193,39)" rx="2" ry="2" />
<text  x="59.78" y="447.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.06%)</title><rect x="228.0" y="133" width="0.8" height="15.0" fill="rgb(215,184,16)" rx="2" ry="2" />
<text  x="231.04" y="143.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (2 samples, 0.13%)</title><rect x="333.7" y="437" width="1.5" height="15.0" fill="rgb(215,72,5)" rx="2" ry="2" />
<text  x="336.67" y="447.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="168.4" y="261" width="0.8" height="15.0" fill="rgb(216,79,26)" rx="2" ry="2" />
<text  x="171.44" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.06%)</title><rect x="222.0" y="309" width="0.8" height="15.0" fill="rgb(210,56,8)" rx="2" ry="2" />
<text  x="225.01" y="319.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.06%)</title><rect x="412.1" y="69" width="0.8" height="15.0" fill="rgb(221,48,21)" rx="2" ry="2" />
<text  x="415.14" y="79.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TypeDefault.cpp (2 samples, 0.13%)</title><rect x="360.1" y="437" width="1.5" height="15.0" fill="rgb(240,62,48)" rx="2" ry="2" />
<text  x="363.08" y="447.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::initialized (1 samples, 0.06%)</title><rect x="802.2" y="341" width="0.8" height="15.0" fill="rgb(237,91,39)" rx="2" ry="2" />
<text  x="805.20" y="351.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="408.4" y="325" width="0.7" height="15.0" fill="rgb(252,131,2)" rx="2" ry="2" />
<text  x="411.36" y="335.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (3 samples, 0.19%)</title><rect x="145.1" y="341" width="2.2" height="15.0" fill="rgb(210,122,53)" rx="2" ry="2" />
<text  x="148.05" y="351.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.13%)</title><rect x="143.5" y="261" width="1.6" height="15.0" fill="rgb(214,172,46)" rx="2" ry="2" />
<text  x="146.54" y="271.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::operator* (1 samples, 0.06%)</title><rect x="406.9" y="437" width="0.7" height="15.0" fill="rgb(205,22,22)" rx="2" ry="2" />
<text  x="409.85" y="447.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::emplace_new_key&lt;c10::OperatorName const&amp;, c10::OperatorHandle&amp;&gt; (2 samples, 0.13%)</title><rect x="169.2" y="309" width="1.5" height="15.0" fill="rgb(212,54,25)" rx="2" ry="2" />
<text  x="172.19" y="319.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.06%)</title><rect x="246.2" y="293" width="0.7" height="15.0" fill="rgb(252,38,5)" rx="2" ry="2" />
<text  x="249.15" y="303.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.06%)</title><rect x="200.1" y="245" width="0.8" height="15.0" fill="rgb(250,225,39)" rx="2" ry="2" />
<text  x="203.13" y="255.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.06%)</title><rect x="372.9" y="357" width="0.8" height="15.0" fill="rgb(228,117,40)" rx="2" ry="2" />
<text  x="375.90" y="367.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="328.4" y="357" width="0.7" height="15.0" fill="rgb(206,143,43)" rx="2" ry="2" />
<text  x="331.39" y="367.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="155.6" y="341" width="0.8" height="15.0" fill="rgb(228,121,40)" rx="2" ry="2" />
<text  x="158.61" y="351.5" ></text>
</g>
<g >
<title>onnx_torch::GetOpSchema&lt;onnx_torch::SparseLengthsSumFused8BitRowwise_PyTorch_ver1&gt; (1 samples, 0.06%)</title><rect x="294.4" y="357" width="0.8" height="15.0" fill="rgb(232,56,39)" rx="2" ry="2" />
<text  x="297.44" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable (1 samples, 0.06%)</title><rect x="234.1" y="309" width="0.7" height="15.0" fill="rgb(237,170,33)" rx="2" ry="2" />
<text  x="237.08" y="319.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.19%)</title><rect x="242.4" y="229" width="2.2" height="15.0" fill="rgb(251,102,28)" rx="2" ry="2" />
<text  x="245.38" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.06%)</title><rect x="311.8" y="341" width="0.7" height="15.0" fill="rgb(251,21,51)" rx="2" ry="2" />
<text  x="314.79" y="351.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.06%)</title><rect x="1143.2" y="245" width="0.8" height="15.0" fill="rgb(220,48,0)" rx="2" ry="2" />
<text  x="1146.22" y="255.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::~AutogradMeta (18 samples, 1.15%)</title><rect x="763.0" y="309" width="13.5" height="15.0" fill="rgb(244,46,37)" rx="2" ry="2" />
<text  x="765.97" y="319.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.06%)</title><rect x="287.6" y="341" width="0.8" height="15.0" fill="rgb(248,180,3)" rx="2" ry="2" />
<text  x="290.65" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.06%)</title><rect x="170.7" y="309" width="0.8" height="15.0" fill="rgb(252,164,11)" rx="2" ry="2" />
<text  x="173.70" y="319.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOp (1 samples, 0.06%)</title><rect x="179.8" y="309" width="0.7" height="15.0" fill="rgb(250,49,52)" rx="2" ry="2" />
<text  x="182.76" y="319.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.19%)</title><rect x="152.6" y="309" width="2.3" height="15.0" fill="rgb(244,149,26)" rx="2" ry="2" />
<text  x="155.60" y="319.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="892.0" y="341" width="0.7" height="15.0" fill="rgb(216,216,7)" rx="2" ry="2" />
<text  x="894.98" y="351.5" ></text>
</g>
<g >
<title>c10::Registerer&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::BlobDeserializerBase, std::default_delete&lt;caffe2::BlobDeserializerBase&gt; &gt;&gt;::Registerer (1 samples, 0.06%)</title><rect x="299.0" y="389" width="0.7" height="15.0" fill="rgb(211,148,44)" rx="2" ry="2" />
<text  x="301.96" y="399.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="205.4" y="277" width="0.8" height="15.0" fill="rgb(250,107,19)" rx="2" ry="2" />
<text  x="208.41" y="287.5" ></text>
</g>
<g >
<title>setup_new_exec (7 samples, 0.45%)</title><rect x="1184.7" y="357" width="5.3" height="15.0" fill="rgb(254,188,23)" rx="2" ry="2" />
<text  x="1187.72" y="367.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (3 samples, 0.19%)</title><rect x="1042.9" y="277" width="2.2" height="15.0" fill="rgb(215,137,0)" rx="2" ry="2" />
<text  x="1045.88" y="287.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.06%)</title><rect x="961.4" y="293" width="0.7" height="15.0" fill="rgb(205,110,50)" rx="2" ry="2" />
<text  x="964.39" y="303.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (1 samples, 0.06%)</title><rect x="208.4" y="341" width="0.8" height="15.0" fill="rgb(240,170,11)" rx="2" ry="2" />
<text  x="211.43" y="351.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.06%)</title><rect x="277.8" y="341" width="0.8" height="15.0" fill="rgb(249,204,9)" rx="2" ry="2" />
<text  x="280.84" y="351.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_tmpxft_0000ded6_00000000_6_cosine_embedding_criterion_op.compute_70.cudafe1.cpp (1 samples, 0.06%)</title><rect x="295.2" y="405" width="0.7" height="15.0" fill="rgb(236,93,12)" rx="2" ry="2" />
<text  x="298.19" y="415.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::OperatorEntry (2 samples, 0.13%)</title><rect x="180.5" y="309" width="1.5" height="15.0" fill="rgb(233,17,27)" rx="2" ry="2" />
<text  x="183.51" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.06%)</title><rect x="412.1" y="117" width="0.8" height="15.0" fill="rgb(232,18,13)" rx="2" ry="2" />
<text  x="415.14" y="127.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="186.5" y="245" width="0.8" height="15.0" fill="rgb(247,14,2)" rx="2" ry="2" />
<text  x="189.55" y="255.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (2 samples, 0.13%)</title><rect x="289.2" y="309" width="1.5" height="15.0" fill="rgb(225,166,51)" rx="2" ry="2" />
<text  x="292.16" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.06%)</title><rect x="308.8" y="373" width="0.7" height="15.0" fill="rgb(248,198,15)" rx="2" ry="2" />
<text  x="311.77" y="383.5" ></text>
</g>
<g >
<title>torch::Library::_impl (6 samples, 0.38%)</title><rect x="182.8" y="341" width="4.5" height="15.0" fill="rgb(222,51,40)" rx="2" ry="2" />
<text  x="185.77" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="170.7" y="245" width="0.8" height="15.0" fill="rgb(212,176,23)" rx="2" ry="2" />
<text  x="173.70" y="255.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.06%)</title><rect x="199.4" y="325" width="0.7" height="15.0" fill="rgb(207,183,28)" rx="2" ry="2" />
<text  x="202.37" y="335.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.06%)</title><rect x="322.4" y="229" width="0.7" height="15.0" fill="rgb(235,5,2)" rx="2" ry="2" />
<text  x="325.35" y="239.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="206.2" y="293" width="0.7" height="15.0" fill="rgb(221,118,3)" rx="2" ry="2" />
<text  x="209.16" y="303.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (3 samples, 0.19%)</title><rect x="739.6" y="357" width="2.2" height="15.0" fill="rgb(251,188,50)" rx="2" ry="2" />
<text  x="742.58" y="367.5" ></text>
</g>
<g >
<title>std::__mutex_base::__mutex_base (1 samples, 0.06%)</title><rect x="908.6" y="309" width="0.7" height="15.0" fill="rgb(208,182,25)" rx="2" ry="2" />
<text  x="911.58" y="319.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="222.0" y="261" width="0.8" height="15.0" fill="rgb(242,8,14)" rx="2" ry="2" />
<text  x="225.01" y="271.5" ></text>
</g>
<g >
<title>cpuinfo_x86_linux_init (1 samples, 0.06%)</title><rect x="192.6" y="309" width="0.7" height="15.0" fill="rgb(219,144,39)" rx="2" ry="2" />
<text  x="195.58" y="319.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="411.4" y="293" width="0.7" height="15.0" fill="rgb(251,7,31)" rx="2" ry="2" />
<text  x="414.38" y="303.5" ></text>
</g>
<g >
<title>c10::dtype (33 samples, 2.11%)</title><rect x="821.1" y="389" width="24.9" height="15.0" fill="rgb(238,171,1)" rx="2" ry="2" />
<text  x="824.06" y="399.5" >c..</text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator* (1 samples, 0.06%)</title><rect x="818.0" y="357" width="0.8" height="15.0" fill="rgb(232,93,1)" rx="2" ry="2" />
<text  x="821.04" y="367.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.06%)</title><rect x="572.1" y="277" width="0.7" height="15.0" fill="rgb(214,133,40)" rx="2" ry="2" />
<text  x="575.08" y="287.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (4 samples, 0.26%)</title><rect x="375.2" y="437" width="3.0" height="15.0" fill="rgb(252,9,51)" rx="2" ry="2" />
<text  x="378.17" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1 samples, 0.06%)</title><rect x="142.8" y="325" width="0.7" height="15.0" fill="rgb(205,112,50)" rx="2" ry="2" />
<text  x="145.79" y="335.5" ></text>
</g>
<g >
<title>c10::profiledCPUMemoryReporter (1 samples, 0.06%)</title><rect x="62.1" y="437" width="0.7" height="15.0" fill="rgb(253,45,27)" rx="2" ry="2" />
<text  x="65.06" y="447.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11]@plt (1 samples, 0.06%)</title><rect x="212.2" y="309" width="0.8" height="15.0" fill="rgb(235,13,44)" rx="2" ry="2" />
<text  x="215.20" y="319.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="289.9" y="213" width="0.8" height="15.0" fill="rgb(222,200,22)" rx="2" ry="2" />
<text  x="292.91" y="223.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.06%)</title><rect x="756.2" y="325" width="0.7" height="15.0" fill="rgb(233,142,11)" rx="2" ry="2" />
<text  x="759.18" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (4 samples, 0.26%)</title><rect x="258.2" y="325" width="3.0" height="15.0" fill="rgb(224,226,17)" rx="2" ry="2" />
<text  x="261.22" y="335.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.06%)</title><rect x="177.5" y="293" width="0.7" height="15.0" fill="rgb(232,57,45)" rx="2" ry="2" />
<text  x="180.49" y="303.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.06%)</title><rect x="769.8" y="261" width="0.7" height="15.0" fill="rgb(224,56,44)" rx="2" ry="2" />
<text  x="772.76" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="359.3" y="325" width="0.8" height="15.0" fill="rgb(208,24,17)" rx="2" ry="2" />
<text  x="362.32" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="296.7" y="309" width="0.8" height="15.0" fill="rgb(218,49,53)" rx="2" ry="2" />
<text  x="299.70" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="157.1" y="341" width="0.8" height="15.0" fill="rgb(237,90,50)" rx="2" ry="2" />
<text  x="160.12" y="351.5" ></text>
</g>
<g >
<title>torch::Library::_impl (4 samples, 0.26%)</title><rect x="179.8" y="357" width="3.0" height="15.0" fill="rgb(233,65,54)" rx="2" ry="2" />
<text  x="182.76" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.06%)</title><rect x="335.2" y="261" width="0.7" height="15.0" fill="rgb(221,201,1)" rx="2" ry="2" />
<text  x="338.18" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="168.4" y="213" width="0.8" height="15.0" fill="rgb(217,0,37)" rx="2" ry="2" />
<text  x="171.44" y="223.5" ></text>
</g>
<g >
<title>onnx_torch::RegisterOpSetSchema&lt;onnx_torch::OpSet_PyTorch_ver1&gt; (1 samples, 0.06%)</title><rect x="294.4" y="389" width="0.8" height="15.0" fill="rgb(227,89,27)" rx="2" ry="2" />
<text  x="297.44" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="818.8" y="357" width="0.8" height="15.0" fill="rgb(238,207,2)" rx="2" ry="2" />
<text  x="821.80" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::contained_val (1 samples, 0.06%)</title><rect x="798.4" y="325" width="0.8" height="15.0" fill="rgb(211,172,36)" rx="2" ry="2" />
<text  x="801.43" y="335.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt;  (1 samples, 0.06%)</title><rect x="196.4" y="373" width="0.7" height="15.0" fill="rgb(244,209,16)" rx="2" ry="2" />
<text  x="199.36" y="383.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.06%)</title><rect x="197.1" y="357" width="0.8" height="15.0" fill="rgb(227,88,40)" rx="2" ry="2" />
<text  x="200.11" y="367.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (1 samples, 0.06%)</title><rect x="145.1" y="293" width="0.7" height="15.0" fill="rgb(243,105,38)" rx="2" ry="2" />
<text  x="148.05" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.06%)</title><rect x="292.9" y="309" width="0.8" height="15.0" fill="rgb(230,42,33)" rx="2" ry="2" />
<text  x="295.93" y="319.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="308.8" y="181" width="0.7" height="15.0" fill="rgb(218,200,42)" rx="2" ry="2" />
<text  x="311.77" y="191.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.06%)</title><rect x="25.8" y="437" width="0.8" height="15.0" fill="rgb(235,58,48)" rx="2" ry="2" />
<text  x="28.84" y="447.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (3 samples, 0.19%)</title><rect x="430.2" y="261" width="2.3" height="15.0" fill="rgb(231,130,28)" rx="2" ry="2" />
<text  x="433.24" y="271.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::load (2 samples, 0.13%)</title><rect x="784.1" y="277" width="1.5" height="15.0" fill="rgb(213,211,19)" rx="2" ry="2" />
<text  x="787.09" y="287.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="404.6" y="293" width="0.7" height="15.0" fill="rgb(232,193,0)" rx="2" ry="2" />
<text  x="407.59" y="303.5" ></text>
</g>
<g >
<title>c10::Registerer&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::GradientMakerBase, std::default_delete&lt;caffe2::GradientMakerBase&gt; &gt;, caffe2::OperatorDef const&amp;, std::vector&lt;caffe2::GradientWrapper, std::allocator&lt;caffe2::GradientWrapper&gt; &gt; const&amp;&gt;::Registerer (4 samples, 0.26%)</title><rect x="299.7" y="389" width="3.0" height="15.0" fill="rgb(217,39,48)" rx="2" ry="2" />
<text  x="302.72" y="399.5" ></text>
</g>
<g >
<title>std::begin&lt;long&gt; (2 samples, 0.13%)</title><rect x="468.7" y="373" width="1.5" height="15.0" fill="rgb(220,101,13)" rx="2" ry="2" />
<text  x="471.72" y="383.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.06%)</title><rect x="160.9" y="341" width="0.7" height="15.0" fill="rgb(241,148,44)" rx="2" ry="2" />
<text  x="163.90" y="351.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="300.5" y="181" width="0.7" height="15.0" fill="rgb(208,91,44)" rx="2" ry="2" />
<text  x="303.47" y="191.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="191.1" y="309" width="0.7" height="15.0" fill="rgb(219,197,45)" rx="2" ry="2" />
<text  x="194.07" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.06%)</title><rect x="90.7" y="437" width="0.8" height="15.0" fill="rgb(250,146,21)" rx="2" ry="2" />
<text  x="93.73" y="447.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (2 samples, 0.13%)</title><rect x="541.9" y="341" width="1.5" height="15.0" fill="rgb(222,213,32)" rx="2" ry="2" />
<text  x="544.91" y="351.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.06%)</title><rect x="319.3" y="341" width="0.8" height="15.0" fill="rgb(232,121,8)" rx="2" ry="2" />
<text  x="322.34" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::DescriptorProto::_InternalParse (1 samples, 0.06%)</title><rect x="327.6" y="293" width="0.8" height="15.0" fill="rgb(210,75,12)" rx="2" ry="2" />
<text  x="330.63" y="303.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (1 samples, 0.06%)</title><rect x="280.9" y="53" width="0.7" height="15.0" fill="rgb(212,137,5)" rx="2" ry="2" />
<text  x="283.86" y="63.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="1142.5" y="229" width="0.7" height="15.0" fill="rgb(218,30,17)" rx="2" ry="2" />
<text  x="1145.47" y="239.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="205.4" y="245" width="0.8" height="15.0" fill="rgb(216,63,45)" rx="2" ry="2" />
<text  x="208.41" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_Tuple_impl&lt;c10::AutogradMetaInterface*&amp;, std::default_delete&lt;torch::autograd::AutogradMeta&gt;, void&gt; (4 samples, 0.26%)</title><rect x="963.7" y="309" width="3.0" height="15.0" fill="rgb(237,5,6)" rx="2" ry="2" />
<text  x="966.66" y="319.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (2 samples, 0.13%)</title><rect x="270.3" y="325" width="1.5" height="15.0" fill="rgb(218,82,17)" rx="2" ry="2" />
<text  x="273.29" y="335.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (3 samples, 0.19%)</title><rect x="404.6" y="389" width="2.3" height="15.0" fill="rgb(224,34,20)" rx="2" ry="2" />
<text  x="407.59" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;torch::autograd::AutogradMeta&gt;&gt; (5 samples, 0.32%)</title><rect x="968.2" y="293" width="3.8" height="15.0" fill="rgb(208,214,50)" rx="2" ry="2" />
<text  x="971.18" y="303.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.06%)</title><rect x="385.7" y="389" width="0.8" height="15.0" fill="rgb(236,78,1)" rx="2" ry="2" />
<text  x="388.73" y="399.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.06%)</title><rect x="243.9" y="117" width="0.7" height="15.0" fill="rgb(248,68,6)" rx="2" ry="2" />
<text  x="246.89" y="127.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOp (1 samples, 0.06%)</title><rect x="33.4" y="437" width="0.7" height="15.0" fill="rgb(230,122,21)" rx="2" ry="2" />
<text  x="36.39" y="447.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.06%)</title><rect x="281.6" y="165" width="0.8" height="15.0" fill="rgb(233,169,14)" rx="2" ry="2" />
<text  x="284.61" y="175.5" ></text>
</g>
<g >
<title>PageHuge (1 samples, 0.06%)</title><rect x="1177.2" y="261" width="0.7" height="15.0" fill="rgb(209,197,2)" rx="2" ry="2" />
<text  x="1180.17" y="271.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.06%)</title><rect x="202.4" y="357" width="0.7" height="15.0" fill="rgb(226,167,23)" rx="2" ry="2" />
<text  x="205.39" y="367.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (1 samples, 0.06%)</title><rect x="737.3" y="357" width="0.8" height="15.0" fill="rgb(215,185,53)" rx="2" ry="2" />
<text  x="740.31" y="367.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.06%)</title><rect x="283.9" y="325" width="0.7" height="15.0" fill="rgb(230,144,20)" rx="2" ry="2" />
<text  x="286.87" y="335.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="155.6" y="309" width="0.8" height="15.0" fill="rgb(247,51,13)" rx="2" ry="2" />
<text  x="158.61" y="319.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (1 samples, 0.06%)</title><rect x="602.3" y="277" width="0.7" height="15.0" fill="rgb(241,120,48)" rx="2" ry="2" />
<text  x="605.26" y="287.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (4 samples, 0.26%)</title><rect x="454.4" y="309" width="3.0" height="15.0" fill="rgb(233,97,48)" rx="2" ry="2" />
<text  x="457.39" y="319.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.06%)</title><rect x="188.1" y="261" width="0.7" height="15.0" fill="rgb(235,57,48)" rx="2" ry="2" />
<text  x="191.06" y="271.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="176.0" y="325" width="0.7" height="15.0" fill="rgb(250,100,38)" rx="2" ry="2" />
<text  x="178.98" y="335.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="151.8" y="309" width="0.8" height="15.0" fill="rgb(246,46,20)" rx="2" ry="2" />
<text  x="154.84" y="319.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::operator* (1 samples, 0.06%)</title><rect x="803.0" y="341" width="0.7" height="15.0" fill="rgb(230,91,22)" rx="2" ry="2" />
<text  x="805.95" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (2 samples, 0.13%)</title><rect x="280.9" y="325" width="1.5" height="15.0" fill="rgb(212,151,27)" rx="2" ry="2" />
<text  x="283.86" y="335.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;caffe2::TypeMeta&gt; (1 samples, 0.06%)</title><rect x="47.7" y="437" width="0.8" height="15.0" fill="rgb(246,27,39)" rx="2" ry="2" />
<text  x="50.72" y="447.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="307.3" y="261" width="0.7" height="15.0" fill="rgb(215,71,46)" rx="2" ry="2" />
<text  x="310.26" y="271.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="182.0" y="293" width="0.8" height="15.0" fill="rgb(213,58,47)" rx="2" ry="2" />
<text  x="185.02" y="303.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="195.6" y="261" width="0.8" height="15.0" fill="rgb(236,220,28)" rx="2" ry="2" />
<text  x="198.60" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="157.9" y="309" width="0.7" height="15.0" fill="rgb(245,185,33)" rx="2" ry="2" />
<text  x="160.88" y="319.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (3 samples, 0.19%)</title><rect x="654.3" y="197" width="2.3" height="15.0" fill="rgb(229,19,10)" rx="2" ry="2" />
<text  x="657.32" y="207.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (1 samples, 0.06%)</title><rect x="813.5" y="373" width="0.8" height="15.0" fill="rgb(215,138,54)" rx="2" ry="2" />
<text  x="816.52" y="383.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::~VersionCounter (18 samples, 1.15%)</title><rect x="452.9" y="325" width="13.6" height="15.0" fill="rgb(237,114,19)" rx="2" ry="2" />
<text  x="455.88" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.19%)</title><rect x="71.1" y="437" width="2.3" height="15.0" fill="rgb(205,211,36)" rx="2" ry="2" />
<text  x="74.11" y="447.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.06%)</title><rect x="200.1" y="357" width="0.8" height="15.0" fill="rgb(225,91,16)" rx="2" ry="2" />
<text  x="203.13" y="367.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.06%)</title><rect x="186.5" y="293" width="0.8" height="15.0" fill="rgb(209,206,50)" rx="2" ry="2" />
<text  x="189.55" y="303.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (4 samples, 0.26%)</title><rect x="765.2" y="277" width="3.0" height="15.0" fill="rgb(229,58,8)" rx="2" ry="2" />
<text  x="768.23" y="287.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (2 samples, 0.13%)</title><rect x="162.4" y="341" width="1.5" height="15.0" fill="rgb(240,225,13)" rx="2" ry="2" />
<text  x="165.40" y="351.5" ></text>
</g>
<g >
<title>std::locale::operator= (1 samples, 0.06%)</title><rect x="98.3" y="437" width="0.7" height="15.0" fill="rgb(238,224,27)" rx="2" ry="2" />
<text  x="101.27" y="447.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (1 samples, 0.06%)</title><rect x="159.4" y="357" width="0.7" height="15.0" fill="rgb(251,186,8)" rx="2" ry="2" />
<text  x="162.39" y="367.5" ></text>
</g>
<g >
<title>[libcudart.so.11.0.194] (1 samples, 0.06%)</title><rect x="356.3" y="437" width="0.8" height="15.0" fill="rgb(227,143,27)" rx="2" ry="2" />
<text  x="359.30" y="447.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.06%)</title><rect x="243.9" y="101" width="0.7" height="15.0" fill="rgb(232,148,32)" rx="2" ry="2" />
<text  x="246.89" y="111.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="307.3" y="277" width="0.7" height="15.0" fill="rgb(212,170,24)" rx="2" ry="2" />
<text  x="310.26" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.13%)</title><rect x="249.2" y="245" width="1.5" height="15.0" fill="rgb(226,208,11)" rx="2" ry="2" />
<text  x="252.17" y="255.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="151.8" y="341" width="0.8" height="15.0" fill="rgb(223,82,50)" rx="2" ry="2" />
<text  x="154.84" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOp@plt (1 samples, 0.06%)</title><rect x="214.5" y="309" width="0.7" height="15.0" fill="rgb(224,75,10)" rx="2" ry="2" />
<text  x="217.46" y="319.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (27 samples, 1.73%)</title><rect x="1104.0" y="181" width="20.4" height="15.0" fill="rgb(218,194,7)" rx="2" ry="2" />
<text  x="1106.99" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.06%)</title><rect x="273.3" y="245" width="0.8" height="15.0" fill="rgb(240,220,53)" rx="2" ry="2" />
<text  x="276.31" y="255.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.06%)</title><rect x="1141.0" y="213" width="0.7" height="15.0" fill="rgb(225,116,22)" rx="2" ry="2" />
<text  x="1143.96" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl::_Vector_impl (4 samples, 0.26%)</title><rect x="928.2" y="293" width="3.0" height="15.0" fill="rgb(251,194,38)" rx="2" ry="2" />
<text  x="931.20" y="303.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.06%)</title><rect x="449.1" y="261" width="0.8" height="15.0" fill="rgb(206,91,29)" rx="2" ry="2" />
<text  x="452.10" y="271.5" ></text>
</g>
<g >
<title>do_brk_flags (1 samples, 0.06%)</title><rect x="280.9" y="149" width="0.7" height="15.0" fill="rgb(233,123,53)" rx="2" ry="2" />
<text  x="283.86" y="159.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.06%)</title><rect x="213.7" y="293" width="0.8" height="15.0" fill="rgb(247,48,32)" rx="2" ry="2" />
<text  x="216.71" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.06%)</title><rect x="182.0" y="309" width="0.8" height="15.0" fill="rgb(242,170,19)" rx="2" ry="2" />
<text  x="185.02" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.06%)</title><rect x="360.8" y="261" width="0.8" height="15.0" fill="rgb(231,223,35)" rx="2" ry="2" />
<text  x="363.83" y="271.5" ></text>
</g>
<g >
<title>finish_task_switch (7 samples, 0.45%)</title><rect x="337.4" y="117" width="5.3" height="15.0" fill="rgb(208,197,27)" rx="2" ry="2" />
<text  x="340.44" y="127.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (1 samples, 0.06%)</title><rect x="408.4" y="373" width="0.7" height="15.0" fill="rgb(241,89,47)" rx="2" ry="2" />
<text  x="411.36" y="383.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOp (1 samples, 0.06%)</title><rect x="165.4" y="309" width="0.8" height="15.0" fill="rgb(207,94,31)" rx="2" ry="2" />
<text  x="168.42" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; (1 samples, 0.06%)</title><rect x="166.9" y="277" width="0.8" height="15.0" fill="rgb(245,130,41)" rx="2" ry="2" />
<text  x="169.93" y="287.5" ></text>
</g>
<g >
<title>_init (1 samples, 0.06%)</title><rect x="407.6" y="453" width="0.8" height="15.0" fill="rgb(235,208,32)" rx="2" ry="2" />
<text  x="410.61" y="463.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (4 samples, 0.26%)</title><rect x="365.4" y="389" width="3.0" height="15.0" fill="rgb(232,14,1)" rx="2" ry="2" />
<text  x="368.36" y="399.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_dtype (1 samples, 0.06%)</title><rect x="42.4" y="437" width="0.8" height="15.0" fill="rgb(231,32,5)" rx="2" ry="2" />
<text  x="45.44" y="447.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="203.1" y="293" width="0.8" height="15.0" fill="rgb(250,91,2)" rx="2" ry="2" />
<text  x="206.15" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.13%)</title><rect x="405.3" y="341" width="1.6" height="15.0" fill="rgb(239,113,30)" rx="2" ry="2" />
<text  x="408.35" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="418.2" y="293" width="0.7" height="15.0" fill="rgb(246,82,44)" rx="2" ry="2" />
<text  x="421.17" y="303.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (7 samples, 0.45%)</title><rect x="337.4" y="85" width="5.3" height="15.0" fill="rgb(227,71,7)" rx="2" ry="2" />
<text  x="340.44" y="95.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.06%)</title><rect x="232.6" y="133" width="0.7" height="15.0" fill="rgb(230,154,34)" rx="2" ry="2" />
<text  x="235.57" y="143.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (7 samples, 0.45%)</title><rect x="1086.6" y="213" width="5.3" height="15.0" fill="rgb(227,117,54)" rx="2" ry="2" />
<text  x="1089.64" y="223.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_jit_sse41_kernel_gemm_s8u8s32_kern_autogen.cpp (1 samples, 0.06%)</title><rect x="286.9" y="405" width="0.7" height="15.0" fill="rgb(225,79,29)" rx="2" ry="2" />
<text  x="289.89" y="415.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_fbgemm_utils.cpp (1 samples, 0.06%)</title><rect x="285.4" y="405" width="0.7" height="15.0" fill="rgb(249,87,4)" rx="2" ry="2" />
<text  x="288.38" y="415.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.06%)</title><rect x="441.6" y="341" width="0.7" height="15.0" fill="rgb(242,65,5)" rx="2" ry="2" />
<text  x="444.56" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerDef (10 samples, 0.64%)</title><rect x="213.7" y="341" width="7.6" height="15.0" fill="rgb(245,38,43)" rx="2" ry="2" />
<text  x="216.71" y="351.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (1 samples, 0.06%)</title><rect x="409.1" y="373" width="0.8" height="15.0" fill="rgb(217,110,7)" rx="2" ry="2" />
<text  x="412.12" y="383.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;signed char&gt; (1 samples, 0.06%)</title><rect x="951.6" y="293" width="0.7" height="15.0" fill="rgb(205,16,54)" rx="2" ry="2" />
<text  x="954.59" y="303.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (10 samples, 0.64%)</title><rect x="335.2" y="357" width="7.5" height="15.0" fill="rgb(232,205,48)" rx="2" ry="2" />
<text  x="338.18" y="367.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="284.6" y="373" width="0.8" height="15.0" fill="rgb(228,91,12)" rx="2" ry="2" />
<text  x="287.63" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (3 samples, 0.19%)</title><rect x="320.1" y="341" width="2.3" height="15.0" fill="rgb(220,40,49)" rx="2" ry="2" />
<text  x="323.09" y="351.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;caffe2::TypeMeta&gt;::constexpr_optional_base (2 samples, 0.13%)</title><rect x="502.7" y="341" width="1.5" height="15.0" fill="rgb(238,5,34)" rx="2" ry="2" />
<text  x="505.67" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="21.3" y="421" width="0.8" height="15.0" fill="rgb(216,80,38)" rx="2" ry="2" />
<text  x="24.32" y="431.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (2 samples, 0.13%)</title><rect x="379.7" y="437" width="1.5" height="15.0" fill="rgb(251,188,22)" rx="2" ry="2" />
<text  x="382.69" y="447.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.06%)</title><rect x="169.9" y="117" width="0.8" height="15.0" fill="rgb(251,104,42)" rx="2" ry="2" />
<text  x="172.95" y="127.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="199.4" y="293" width="0.7" height="15.0" fill="rgb(229,149,3)" rx="2" ry="2" />
<text  x="202.37" y="303.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::dataptr (1 samples, 0.06%)</title><rect x="831.6" y="357" width="0.8" height="15.0" fill="rgb(251,190,52)" rx="2" ry="2" />
<text  x="834.62" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.06%)</title><rect x="283.9" y="309" width="0.7" height="15.0" fill="rgb(245,34,5)" rx="2" ry="2" />
<text  x="286.87" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="308.8" y="197" width="0.7" height="15.0" fill="rgb(209,146,31)" rx="2" ry="2" />
<text  x="311.77" y="207.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.06%)</title><rect x="155.6" y="181" width="0.8" height="15.0" fill="rgb(219,146,19)" rx="2" ry="2" />
<text  x="158.61" y="191.5" ></text>
</g>
<g >
<title>torch::schema (3 samples, 0.19%)</title><rect x="288.4" y="357" width="2.3" height="15.0" fill="rgb(250,72,4)" rx="2" ry="2" />
<text  x="291.40" y="367.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="304.2" y="341" width="0.8" height="15.0" fill="rgb(205,223,51)" rx="2" ry="2" />
<text  x="307.25" y="351.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor&amp;  (1 samples, 0.06%)</title><rect x="208.4" y="373" width="0.8" height="15.0" fill="rgb(238,68,1)" rx="2" ry="2" />
<text  x="211.43" y="383.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::~VersionCounter (8 samples, 0.51%)</title><rect x="780.3" y="309" width="6.1" height="15.0" fill="rgb(238,211,32)" rx="2" ry="2" />
<text  x="783.32" y="319.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="290.7" y="309" width="0.7" height="15.0" fill="rgb(211,130,34)" rx="2" ry="2" />
<text  x="293.66" y="319.5" ></text>
</g>
<g >
<title>__get_free_pages (1 samples, 0.06%)</title><rect x="412.1" y="133" width="0.8" height="15.0" fill="rgb(218,209,29)" rx="2" ry="2" />
<text  x="415.14" y="143.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.06%)</title><rect x="359.3" y="261" width="0.8" height="15.0" fill="rgb(232,135,42)" rx="2" ry="2" />
<text  x="362.32" y="271.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.06%)</title><rect x="371.4" y="357" width="0.7" height="15.0" fill="rgb(219,226,33)" rx="2" ry="2" />
<text  x="374.39" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (2 samples, 0.13%)</title><rect x="972.7" y="325" width="1.5" height="15.0" fill="rgb(242,79,40)" rx="2" ry="2" />
<text  x="975.71" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="254.5" y="261" width="0.7" height="15.0" fill="rgb(227,40,54)" rx="2" ry="2" />
<text  x="257.45" y="271.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.06%)</title><rect x="366.9" y="325" width="0.7" height="15.0" fill="rgb(236,226,44)" rx="2" ry="2" />
<text  x="369.87" y="335.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.13%)</title><rect x="326.1" y="229" width="1.5" height="15.0" fill="rgb(250,50,41)" rx="2" ry="2" />
<text  x="329.13" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.06%)</title><rect x="145.1" y="245" width="0.7" height="15.0" fill="rgb(227,4,6)" rx="2" ry="2" />
<text  x="148.05" y="255.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_Batched (2 samples, 0.13%)</title><rect x="160.1" y="373" width="1.5" height="15.0" fill="rgb(205,74,46)" rx="2" ry="2" />
<text  x="163.14" y="383.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_CUDA (8 samples, 0.51%)</title><rect x="173.7" y="389" width="6.1" height="15.0" fill="rgb(242,17,30)" rx="2" ry="2" />
<text  x="176.72" y="399.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (9 samples, 0.58%)</title><rect x="335.9" y="325" width="6.8" height="15.0" fill="rgb(214,9,6)" rx="2" ry="2" />
<text  x="338.93" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (1 samples, 0.06%)</title><rect x="877.6" y="341" width="0.8" height="15.0" fill="rgb(225,99,12)" rx="2" ry="2" />
<text  x="880.65" y="351.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.06%)</title><rect x="292.9" y="293" width="0.8" height="15.0" fill="rgb(212,9,13)" rx="2" ry="2" />
<text  x="295.93" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_head (1 samples, 0.06%)</title><rect x="976.5" y="261" width="0.7" height="15.0" fill="rgb(211,135,28)" rx="2" ry="2" />
<text  x="979.48" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="408.4" y="277" width="0.7" height="15.0" fill="rgb(254,153,4)" rx="2" ry="2" />
<text  x="411.36" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="157.1" y="373" width="0.8" height="15.0" fill="rgb(224,48,11)" rx="2" ry="2" />
<text  x="160.12" y="383.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.06%)</title><rect x="319.3" y="325" width="0.8" height="15.0" fill="rgb(247,94,9)" rx="2" ry="2" />
<text  x="322.34" y="335.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (2 samples, 0.13%)</title><rect x="972.7" y="293" width="1.5" height="15.0" fill="rgb(232,182,26)" rx="2" ry="2" />
<text  x="975.71" y="303.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (4 samples, 0.26%)</title><rect x="653.6" y="213" width="3.0" height="15.0" fill="rgb(215,16,38)" rx="2" ry="2" />
<text  x="656.57" y="223.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="162.4" y="293" width="0.8" height="15.0" fill="rgb(227,198,32)" rx="2" ry="2" />
<text  x="165.40" y="303.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.06%)</title><rect x="200.1" y="277" width="0.8" height="15.0" fill="rgb(245,19,14)" rx="2" ry="2" />
<text  x="203.13" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="231.8" y="165" width="0.8" height="15.0" fill="rgb(238,138,14)" rx="2" ry="2" />
<text  x="234.82" y="175.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::MemoryFormat&gt;::constexpr_storage_t (2 samples, 0.13%)</title><rect x="1165.1" y="325" width="1.5" height="15.0" fill="rgb(249,79,42)" rx="2" ry="2" />
<text  x="1168.10" y="335.5" ></text>
</g>
<g >
<title>isalpha (1 samples, 0.06%)</title><rect x="397.0" y="437" width="0.8" height="15.0" fill="rgb(210,172,21)" rx="2" ry="2" />
<text  x="400.05" y="447.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.06%)</title><rect x="182.0" y="341" width="0.8" height="15.0" fill="rgb(245,220,43)" rx="2" ry="2" />
<text  x="185.02" y="351.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_requires_grad (2 samples, 0.13%)</title><rect x="729.0" y="341" width="1.5" height="15.0" fill="rgb(226,23,2)" rx="2" ry="2" />
<text  x="732.02" y="351.5" ></text>
</g>
<g >
<title>example-app (1,557 samples, 99.55%)</title><rect x="10.0" y="469" width="1174.7" height="15.0" fill="rgb(217,208,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >example-app</text>
</g>
<g >
<title>get_random_u64 (1 samples, 0.06%)</title><rect x="1169.6" y="341" width="0.8" height="15.0" fill="rgb(250,12,2)" rx="2" ry="2" />
<text  x="1172.63" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.13%)</title><rect x="280.9" y="277" width="1.5" height="15.0" fill="rgb(230,222,54)" rx="2" ry="2" />
<text  x="283.86" y="287.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="328.4" y="325" width="0.7" height="15.0" fill="rgb(245,127,38)" rx="2" ry="2" />
<text  x="331.39" y="335.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::New (3 samples, 0.19%)</title><rect x="36.4" y="437" width="2.3" height="15.0" fill="rgb(237,55,31)" rx="2" ry="2" />
<text  x="39.41" y="447.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::registerer (2 samples, 0.13%)</title><rect x="329.1" y="405" width="1.6" height="15.0" fill="rgb(225,228,0)" rx="2" ry="2" />
<text  x="332.14" y="415.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::singleton (1 samples, 0.06%)</title><rect x="879.2" y="341" width="0.7" height="15.0" fill="rgb(209,2,11)" rx="2" ry="2" />
<text  x="882.16" y="351.5" ></text>
</g>
<g >
<title>__libc_malloc (3 samples, 0.19%)</title><rect x="228.8" y="293" width="2.3" height="15.0" fill="rgb(214,17,34)" rx="2" ry="2" />
<text  x="231.80" y="303.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.06%)</title><rect x="293.7" y="293" width="0.7" height="15.0" fill="rgb(233,74,53)" rx="2" ry="2" />
<text  x="296.68" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.13%)</title><rect x="326.1" y="245" width="1.5" height="15.0" fill="rgb(209,111,22)" rx="2" ry="2" />
<text  x="329.13" y="255.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (2 samples, 0.13%)</title><rect x="505.7" y="325" width="1.5" height="15.0" fill="rgb(223,148,18)" rx="2" ry="2" />
<text  x="508.69" y="335.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator-- (1 samples, 0.06%)</title><rect x="467.2" y="341" width="0.8" height="15.0" fill="rgb(231,155,12)" rx="2" ry="2" />
<text  x="470.21" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="274.8" y="277" width="0.8" height="15.0" fill="rgb(220,173,27)" rx="2" ry="2" />
<text  x="277.82" y="287.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="278.6" y="309" width="0.7" height="15.0" fill="rgb(213,226,4)" rx="2" ry="2" />
<text  x="281.59" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.06%)</title><rect x="302.0" y="373" width="0.7" height="15.0" fill="rgb(220,146,12)" rx="2" ry="2" />
<text  x="304.98" y="383.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (1 samples, 0.06%)</title><rect x="183.5" y="277" width="0.8" height="15.0" fill="rgb(221,186,13)" rx="2" ry="2" />
<text  x="186.53" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="145.1" y="277" width="0.7" height="15.0" fill="rgb(245,176,54)" rx="2" ry="2" />
<text  x="148.05" y="287.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.06%)</title><rect x="976.5" y="277" width="0.7" height="15.0" fill="rgb(219,165,18)" rx="2" ry="2" />
<text  x="979.48" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (2 samples, 0.13%)</title><rect x="317.8" y="341" width="1.5" height="15.0" fill="rgb(218,54,44)" rx="2" ry="2" />
<text  x="320.83" y="351.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="184.3" y="277" width="0.7" height="15.0" fill="rgb(224,143,11)" rx="2" ry="2" />
<text  x="187.28" y="287.5" ></text>
</g>
<g >
<title>std::locale::~locale (1 samples, 0.06%)</title><rect x="222.8" y="309" width="0.7" height="15.0" fill="rgb(206,162,3)" rx="2" ry="2" />
<text  x="225.76" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3 samples, 0.19%)</title><rect x="228.8" y="213" width="2.3" height="15.0" fill="rgb(206,170,21)" rx="2" ry="2" />
<text  x="231.80" y="223.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.06%)</title><rect x="372.1" y="357" width="0.8" height="15.0" fill="rgb(211,3,33)" rx="2" ry="2" />
<text  x="375.15" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.06%)</title><rect x="216.0" y="133" width="0.7" height="15.0" fill="rgb(220,223,12)" rx="2" ry="2" />
<text  x="218.97" y="143.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.06%)</title><rect x="179.8" y="293" width="0.7" height="15.0" fill="rgb(206,193,50)" rx="2" ry="2" />
<text  x="182.76" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::RegistrationHandleRAII, std::allocator&lt;c10::RegistrationHandleRAII&gt; &gt;::_M_realloc_insert&lt;c10::RegistrationHandleRAII&gt; (1 samples, 0.06%)</title><rect x="206.2" y="357" width="0.7" height="15.0" fill="rgb(231,48,23)" rx="2" ry="2" />
<text  x="209.16" y="367.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;int&gt; (1 samples, 0.06%)</title><rect x="48.5" y="437" width="0.7" height="15.0" fill="rgb(234,104,32)" rx="2" ry="2" />
<text  x="51.48" y="447.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (1 samples, 0.06%)</title><rect x="160.9" y="325" width="0.7" height="15.0" fill="rgb(218,119,54)" rx="2" ry="2" />
<text  x="163.90" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.06%)</title><rect x="305.0" y="357" width="0.8" height="15.0" fill="rgb(208,23,36)" rx="2" ry="2" />
<text  x="308.00" y="367.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (20 samples, 1.28%)</title><rect x="451.4" y="341" width="15.1" height="15.0" fill="rgb(227,57,23)" rx="2" ry="2" />
<text  x="454.37" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="232.6" y="149" width="0.7" height="15.0" fill="rgb(224,115,52)" rx="2" ry="2" />
<text  x="235.57" y="159.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="261.2" y="325" width="0.8" height="15.0" fill="rgb(222,204,30)" rx="2" ry="2" />
<text  x="264.24" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (3 samples, 0.19%)</title><rect x="152.6" y="341" width="2.3" height="15.0" fill="rgb(236,191,22)" rx="2" ry="2" />
<text  x="155.60" y="351.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.06%)</title><rect x="168.4" y="165" width="0.8" height="15.0" fill="rgb(238,214,13)" rx="2" ry="2" />
<text  x="171.44" y="175.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="382.0" y="389" width="0.7" height="15.0" fill="rgb(254,111,36)" rx="2" ry="2" />
<text  x="384.96" y="399.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.06%)</title><rect x="188.8" y="325" width="0.8" height="15.0" fill="rgb(207,117,14)" rx="2" ry="2" />
<text  x="191.81" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="260.5" y="245" width="0.7" height="15.0" fill="rgb(236,147,0)" rx="2" ry="2" />
<text  x="263.49" y="255.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (1 samples, 0.06%)</title><rect x="830.1" y="325" width="0.8" height="15.0" fill="rgb(229,54,48)" rx="2" ry="2" />
<text  x="833.12" y="335.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.06%)</title><rect x="323.9" y="373" width="0.7" height="15.0" fill="rgb(243,12,27)" rx="2" ry="2" />
<text  x="326.86" y="383.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (55 samples, 3.52%)</title><rect x="746.4" y="357" width="41.5" height="15.0" fill="rgb(248,223,21)" rx="2" ry="2" />
<text  x="749.37" y="367.5" >c10..</text>
</g>
<g >
<title>operator new (4 samples, 0.26%)</title><rect x="887.5" y="341" width="3.0" height="15.0" fill="rgb(216,13,44)" rx="2" ry="2" />
<text  x="890.46" y="351.5" ></text>
</g>
<g >
<title>c10::TensorType::get (1 samples, 0.06%)</title><rect x="283.1" y="277" width="0.8" height="15.0" fill="rgb(212,195,13)" rx="2" ry="2" />
<text  x="286.12" y="287.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (10 samples, 0.64%)</title><rect x="335.2" y="341" width="7.5" height="15.0" fill="rgb(216,49,40)" rx="2" ry="2" />
<text  x="338.18" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (39 samples, 2.49%)</title><rect x="438.5" y="357" width="29.5" height="15.0" fill="rgb(227,30,49)" rx="2" ry="2" />
<text  x="441.54" y="367.5" >c1..</text>
</g>
<g >
<title>std::forward&lt;int&gt; (1 samples, 0.06%)</title><rect x="492.1" y="373" width="0.8" height="15.0" fill="rgb(206,123,33)" rx="2" ry="2" />
<text  x="495.11" y="383.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.06%)</title><rect x="292.9" y="325" width="0.8" height="15.0" fill="rgb(205,153,48)" rx="2" ry="2" />
<text  x="295.93" y="335.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.06%)</title><rect x="228.0" y="117" width="0.8" height="15.0" fill="rgb(214,218,27)" rx="2" ry="2" />
<text  x="231.04" y="127.5" ></text>
</g>
<g >
<title>torch::jit::registerOperator (3 samples, 0.19%)</title><rect x="322.4" y="389" width="2.2" height="15.0" fill="rgb(237,81,15)" rx="2" ry="2" />
<text  x="325.35" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="308.0" y="197" width="0.8" height="15.0" fill="rgb(212,39,25)" rx="2" ry="2" />
<text  x="311.02" y="207.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="307.3" y="293" width="0.7" height="15.0" fill="rgb(252,189,22)" rx="2" ry="2" />
<text  x="310.26" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (1 samples, 0.06%)</title><rect x="174.5" y="309" width="0.7" height="15.0" fill="rgb(244,187,37)" rx="2" ry="2" />
<text  x="177.48" y="319.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.06%)</title><rect x="385.7" y="373" width="0.8" height="15.0" fill="rgb(247,26,22)" rx="2" ry="2" />
<text  x="388.73" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.06%)</title><rect x="1007.4" y="277" width="0.8" height="15.0" fill="rgb(240,107,15)" rx="2" ry="2" />
<text  x="1010.42" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (1 samples, 0.06%)</title><rect x="360.1" y="277" width="0.7" height="15.0" fill="rgb(210,196,11)" rx="2" ry="2" />
<text  x="363.08" y="287.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (1 samples, 0.06%)</title><rect x="228.0" y="85" width="0.8" height="15.0" fill="rgb(231,114,11)" rx="2" ry="2" />
<text  x="231.04" y="95.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (7 samples, 0.45%)</title><rect x="337.4" y="181" width="5.3" height="15.0" fill="rgb(244,148,23)" rx="2" ry="2" />
<text  x="340.44" y="191.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="307.3" y="357" width="0.7" height="15.0" fill="rgb(208,127,14)" rx="2" ry="2" />
<text  x="310.26" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.19%)</title><rect x="242.4" y="181" width="2.2" height="15.0" fill="rgb(205,122,54)" rx="2" ry="2" />
<text  x="245.38" y="191.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::Registerer::~Registerer (1 samples, 0.06%)</title><rect x="435.5" y="341" width="0.8" height="15.0" fill="rgb(230,107,38)" rx="2" ry="2" />
<text  x="438.52" y="351.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (9 samples, 0.58%)</title><rect x="335.9" y="277" width="6.8" height="15.0" fill="rgb(208,68,10)" rx="2" ry="2" />
<text  x="338.93" y="287.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (2 samples, 0.13%)</title><rect x="1101.0" y="181" width="1.5" height="15.0" fill="rgb(218,119,16)" rx="2" ry="2" />
<text  x="1103.97" y="191.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.06%)</title><rect x="966.7" y="309" width="0.7" height="15.0" fill="rgb(243,52,51)" rx="2" ry="2" />
<text  x="969.68" y="319.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (1 samples, 0.06%)</title><rect x="201.6" y="341" width="0.8" height="15.0" fill="rgb(208,180,29)" rx="2" ry="2" />
<text  x="204.64" y="351.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;signed char&gt;@plt (1 samples, 0.06%)</title><rect x="1156.0" y="325" width="0.8" height="15.0" fill="rgb(247,125,42)" rx="2" ry="2" />
<text  x="1159.05" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics (1 samples, 0.06%)</title><rect x="407.6" y="293" width="0.8" height="15.0" fill="rgb(251,134,2)" rx="2" ry="2" />
<text  x="410.61" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.06%)</title><rect x="364.6" y="341" width="0.8" height="15.0" fill="rgb(232,214,16)" rx="2" ry="2" />
<text  x="367.60" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.06%)</title><rect x="429.5" y="245" width="0.7" height="15.0" fill="rgb(219,33,22)" rx="2" ry="2" />
<text  x="432.49" y="255.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.06%)</title><rect x="157.1" y="293" width="0.8" height="15.0" fill="rgb(252,67,28)" rx="2" ry="2" />
<text  x="160.12" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (5 samples, 0.32%)</title><rect x="249.2" y="293" width="3.7" height="15.0" fill="rgb(237,137,12)" rx="2" ry="2" />
<text  x="252.17" y="303.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (3 samples, 0.19%)</title><rect x="259.0" y="261" width="2.2" height="15.0" fill="rgb(232,183,37)" rx="2" ry="2" />
<text  x="261.98" y="271.5" ></text>
</g>
<g >
<title>c10::detail::getTypePtr_&lt;c10::tagged_capsule&lt;ConvPackedParamsBase&lt;2&gt; &gt; &gt;::call (1 samples, 0.06%)</title><rect x="285.4" y="325" width="0.7" height="15.0" fill="rgb(249,82,2)" rx="2" ry="2" />
<text  x="288.38" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="155.6" y="261" width="0.8" height="15.0" fill="rgb(207,198,8)" rx="2" ry="2" />
<text  x="158.61" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (9 samples, 0.58%)</title><rect x="335.9" y="245" width="6.8" height="15.0" fill="rgb(219,22,13)" rx="2" ry="2" />
<text  x="338.93" y="255.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.06%)</title><rect x="204.7" y="341" width="0.7" height="15.0" fill="rgb(207,200,1)" rx="2" ry="2" />
<text  x="207.65" y="351.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::Device&gt;::constexpr_storage_t&lt;c10::DeviceType const&amp;, int&gt; (5 samples, 0.32%)</title><rect x="488.3" y="341" width="3.8" height="15.0" fill="rgb(215,29,26)" rx="2" ry="2" />
<text  x="491.34" y="351.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (187 samples, 11.96%)</title><rect x="1008.9" y="325" width="141.1" height="15.0" fill="rgb(243,20,2)" rx="2" ry="2" />
<text  x="1011.93" y="335.5" >c10::impl::wrap_k..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_M_ptr (7 samples, 0.45%)</title><rect x="549.5" y="341" width="5.2" height="15.0" fill="rgb(253,72,19)" rx="2" ry="2" />
<text  x="552.45" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl::~_Vector_impl (1 samples, 0.06%)</title><rect x="774.3" y="261" width="0.7" height="15.0" fill="rgb(214,166,46)" rx="2" ry="2" />
<text  x="777.28" y="271.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1141.7" y="213" width="0.8" height="15.0" fill="rgb(207,191,13)" rx="2" ry="2" />
<text  x="1144.71" y="223.5" ></text>
</g>
<g >
<title>[libc10.so] (3 samples, 0.19%)</title><rect x="725.2" y="325" width="2.3" height="15.0" fill="rgb(244,210,23)" rx="2" ry="2" />
<text  x="728.24" y="335.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (5 samples, 0.32%)</title><rect x="280.9" y="389" width="3.7" height="15.0" fill="rgb(214,111,15)" rx="2" ry="2" />
<text  x="283.86" y="399.5" ></text>
</g>
<g >
<title>native_write_msr (6 samples, 0.38%)</title><rect x="1184.7" y="261" width="4.5" height="15.0" fill="rgb(224,142,47)" rx="2" ry="2" />
<text  x="1187.72" y="271.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.06%)</title><rect x="849.0" y="389" width="0.7" height="15.0" fill="rgb(231,202,9)" rx="2" ry="2" />
<text  x="851.98" y="399.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (3 samples, 0.19%)</title><rect x="713.2" y="293" width="2.2" height="15.0" fill="rgb(231,164,37)" rx="2" ry="2" />
<text  x="716.17" y="303.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (1 samples, 0.06%)</title><rect x="151.8" y="405" width="0.8" height="15.0" fill="rgb(236,97,42)" rx="2" ry="2" />
<text  x="154.84" y="415.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.06%)</title><rect x="148.1" y="261" width="0.7" height="15.0" fill="rgb(209,155,21)" rx="2" ry="2" />
<text  x="151.07" y="271.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="274.8" y="293" width="0.8" height="15.0" fill="rgb(247,94,46)" rx="2" ry="2" />
<text  x="277.82" y="303.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (134 samples, 8.57%)</title><rect x="1045.1" y="277" width="101.1" height="15.0" fill="rgb(252,161,24)" rx="2" ry="2" />
<text  x="1048.14" y="287.5" >c10::impl::w..</text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.06%)</title><rect x="1124.4" y="229" width="0.7" height="15.0" fill="rgb(237,164,45)" rx="2" ry="2" />
<text  x="1127.36" y="239.5" ></text>
</g>
<g >
<title>exit_mmap (13 samples, 0.83%)</title><rect x="1170.4" y="357" width="9.8" height="15.0" fill="rgb(242,80,7)" rx="2" ry="2" />
<text  x="1173.38" y="367.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.06%)</title><rect x="323.1" y="325" width="0.8" height="15.0" fill="rgb(247,160,18)" rx="2" ry="2" />
<text  x="326.11" y="335.5" ></text>
</g>
<g >
<title>c10::Dispatcher::deregisterFallback_ (1 samples, 0.06%)</title><rect x="419.7" y="325" width="0.7" height="15.0" fill="rgb(246,27,4)" rx="2" ry="2" />
<text  x="422.68" y="335.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor&amp;  (1 samples, 0.06%)</title><rect x="195.6" y="373" width="0.8" height="15.0" fill="rgb(233,183,27)" rx="2" ry="2" />
<text  x="198.60" y="383.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.06%)</title><rect x="273.3" y="373" width="0.8" height="15.0" fill="rgb(211,25,51)" rx="2" ry="2" />
<text  x="276.31" y="383.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.06%)</title><rect x="322.4" y="325" width="0.7" height="15.0" fill="rgb(223,52,16)" rx="2" ry="2" />
<text  x="325.35" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="328.4" y="309" width="0.7" height="15.0" fill="rgb(241,138,4)" rx="2" ry="2" />
<text  x="331.39" y="319.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="365.4" y="261" width="0.7" height="15.0" fill="rgb(225,54,18)" rx="2" ry="2" />
<text  x="368.36" y="271.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_qconv.cpp (1 samples, 0.06%)</title><rect x="291.4" y="405" width="0.8" height="15.0" fill="rgb(229,217,48)" rx="2" ry="2" />
<text  x="294.42" y="415.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.06%)</title><rect x="229.6" y="101" width="0.7" height="15.0" fill="rgb(252,99,15)" rx="2" ry="2" />
<text  x="232.55" y="111.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.06%)</title><rect x="360.1" y="357" width="0.7" height="15.0" fill="rgb(246,34,4)" rx="2" ry="2" />
<text  x="363.08" y="367.5" ></text>
</g>
<g >
<title>at::native::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_quantized_CPU (1 samples, 0.06%)</title><rect x="292.9" y="373" width="0.8" height="15.0" fill="rgb(244,106,32)" rx="2" ry="2" />
<text  x="295.93" y="383.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.06%)</title><rect x="204.7" y="277" width="0.7" height="15.0" fill="rgb(242,32,2)" rx="2" ry="2" />
<text  x="207.65" y="287.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (1 samples, 0.06%)</title><rect x="409.1" y="341" width="0.8" height="15.0" fill="rgb(245,64,19)" rx="2" ry="2" />
<text  x="412.12" y="351.5" ></text>
</g>
<g >
<title>[libcufft.so.10.2.0.218] (1 samples, 0.06%)</title><rect x="357.1" y="437" width="0.7" height="15.0" fill="rgb(254,39,17)" rx="2" ry="2" />
<text  x="360.06" y="447.5" ></text>
</g>
<g >
<title>THFloatVector_startup::THFloatVector_startup (1 samples, 0.06%)</title><rect x="192.6" y="389" width="0.7" height="15.0" fill="rgb(237,225,41)" rx="2" ry="2" />
<text  x="195.58" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (2 samples, 0.13%)</title><rect x="262.7" y="309" width="1.6" height="15.0" fill="rgb(221,217,1)" rx="2" ry="2" />
<text  x="265.75" y="319.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.06%)</title><rect x="292.2" y="373" width="0.7" height="15.0" fill="rgb(228,63,43)" rx="2" ry="2" />
<text  x="295.17" y="383.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (7 samples, 0.45%)</title><rect x="337.4" y="165" width="5.3" height="15.0" fill="rgb(206,28,4)" rx="2" ry="2" />
<text  x="340.44" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1 samples, 0.06%)</title><rect x="190.3" y="309" width="0.8" height="15.0" fill="rgb(235,136,23)" rx="2" ry="2" />
<text  x="193.32" y="319.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.06%)</title><rect x="222.0" y="277" width="0.8" height="15.0" fill="rgb(219,56,6)" rx="2" ry="2" />
<text  x="225.01" y="287.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;torch::autograd::Node&gt;::~weak_ptr (2 samples, 0.13%)</title><rect x="775.0" y="293" width="1.5" height="15.0" fill="rgb(206,188,41)" rx="2" ry="2" />
<text  x="778.04" y="303.5" ></text>
</g>
<g >
<title>at::native::TORCH_LIBRARY_IMPL_init_quantized_QuantizedCPU (1 samples, 0.06%)</title><rect x="293.7" y="389" width="0.7" height="15.0" fill="rgb(235,200,53)" rx="2" ry="2" />
<text  x="296.68" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.13%)</title><rect x="143.5" y="293" width="1.6" height="15.0" fill="rgb(226,163,29)" rx="2" ry="2" />
<text  x="146.54" y="303.5" ></text>
</g>
<g >
<title>c10::Registerer&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;, caffe2::OperatorDef const&amp;, caffe2::Workspace*&gt;::Registerer (4 samples, 0.26%)</title><rect x="302.7" y="389" width="3.1" height="15.0" fill="rgb(230,8,42)" rx="2" ry="2" />
<text  x="305.74" y="399.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::emplace_new_key&lt;c10::DispatchKey const&amp;, ska::flat_hash_map&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt;, std::hash&lt;c10::DispatchKey&gt;, std::equal_to&lt;c10::DispatchKey&gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt;::convertible_to_value&gt; (1 samples, 0.06%)</title><rect x="185.8" y="293" width="0.7" height="15.0" fill="rgb(219,89,1)" rx="2" ry="2" />
<text  x="188.79" y="303.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (10 samples, 0.64%)</title><rect x="179.8" y="389" width="7.5" height="15.0" fill="rgb(226,6,49)" rx="2" ry="2" />
<text  x="182.76" y="399.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (2 samples, 0.13%)</title><rect x="256.7" y="229" width="1.5" height="15.0" fill="rgb(237,58,44)" rx="2" ry="2" />
<text  x="259.71" y="239.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_qconv_unpack.cpp (1 samples, 0.06%)</title><rect x="292.2" y="405" width="0.7" height="15.0" fill="rgb(228,183,9)" rx="2" ry="2" />
<text  x="295.17" y="415.5" ></text>
</g>
<g >
<title>c10::Dispatcher::deregisterName_ (1 samples, 0.06%)</title><rect x="435.5" y="325" width="0.8" height="15.0" fill="rgb(217,133,44)" rx="2" ry="2" />
<text  x="438.52" y="335.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.06%)</title><rect x="265.8" y="341" width="0.7" height="15.0" fill="rgb(235,224,8)" rx="2" ry="2" />
<text  x="268.77" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2 samples, 0.13%)</title><rect x="358.6" y="421" width="1.5" height="15.0" fill="rgb(224,190,9)" rx="2" ry="2" />
<text  x="361.57" y="431.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="326.1" y="213" width="0.8" height="15.0" fill="rgb(240,12,35)" rx="2" ry="2" />
<text  x="329.13" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt;, void&gt; (20 samples, 1.28%)</title><rect x="962.1" y="357" width="15.1" height="15.0" fill="rgb(252,201,25)" rx="2" ry="2" />
<text  x="965.15" y="367.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::~VersionCounter (12 samples, 0.77%)</title><rect x="457.4" y="309" width="9.1" height="15.0" fill="rgb(247,152,31)" rx="2" ry="2" />
<text  x="460.40" y="319.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (6 samples, 0.38%)</title><rect x="815.8" y="373" width="4.5" height="15.0" fill="rgb(208,147,52)" rx="2" ry="2" />
<text  x="818.78" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.06%)</title><rect x="265.0" y="261" width="0.8" height="15.0" fill="rgb(210,59,8)" rx="2" ry="2" />
<text  x="268.01" y="271.5" ></text>
</g>
<g >
<title>x86_pmu_enable (7 samples, 0.45%)</title><rect x="337.4" y="69" width="5.3" height="15.0" fill="rgb(224,100,23)" rx="2" ry="2" />
<text  x="340.44" y="79.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.06%)</title><rect x="179.0" y="341" width="0.8" height="15.0" fill="rgb(245,187,5)" rx="2" ry="2" />
<text  x="182.00" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="206.2" y="165" width="0.7" height="15.0" fill="rgb(237,5,46)" rx="2" ry="2" />
<text  x="209.16" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.06%)</title><rect x="412.1" y="277" width="0.8" height="15.0" fill="rgb(210,52,43)" rx="2" ry="2" />
<text  x="415.14" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="323.9" y="293" width="0.7" height="15.0" fill="rgb(221,71,44)" rx="2" ry="2" />
<text  x="326.86" y="303.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.06%)</title><rect x="1170.4" y="309" width="0.7" height="15.0" fill="rgb(238,23,48)" rx="2" ry="2" />
<text  x="1173.38" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_Tuple_impl (1 samples, 0.06%)</title><rect x="547.2" y="293" width="0.7" height="15.0" fill="rgb(224,168,44)" rx="2" ry="2" />
<text  x="550.19" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_Tuple_impl (1 samples, 0.06%)</title><rect x="69.6" y="437" width="0.8" height="15.0" fill="rgb(224,147,16)" rx="2" ry="2" />
<text  x="72.60" y="447.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.06%)</title><rect x="238.6" y="261" width="0.8" height="15.0" fill="rgb(252,121,45)" rx="2" ry="2" />
<text  x="241.61" y="271.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.06%)</title><rect x="284.6" y="357" width="0.8" height="15.0" fill="rgb(239,183,32)" rx="2" ry="2" />
<text  x="287.63" y="367.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::singleton (1 samples, 0.06%)</title><rect x="858.0" y="341" width="0.8" height="15.0" fill="rgb(215,131,26)" rx="2" ry="2" />
<text  x="861.03" y="351.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.06%)</title><rect x="190.3" y="341" width="0.8" height="15.0" fill="rgb(218,54,42)" rx="2" ry="2" />
<text  x="193.32" y="351.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.06%)</title><rect x="158.6" y="341" width="0.8" height="15.0" fill="rgb(226,128,44)" rx="2" ry="2" />
<text  x="161.63" y="351.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (2 samples, 0.13%)</title><rect x="1168.9" y="405" width="1.5" height="15.0" fill="rgb(207,19,24)" rx="2" ry="2" />
<text  x="1171.87" y="415.5" ></text>
</g>
</g>
</svg>
